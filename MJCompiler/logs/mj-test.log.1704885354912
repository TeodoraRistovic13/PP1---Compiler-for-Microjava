INFO  12:13:59,575 - Compiling source file: C:\Users\Zoki\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  12:13:59,649 - #2 program
INFO  12:13:59,649 - #47 test302
INFO  12:13:59,650 - #17 namespace
INFO  12:13:59,652 - #47 Unpacking
INFO  12:13:59,652 - #42 {
INFO  12:13:59,653 - #47 int
INFO  12:13:59,654 - #47 a
INFO  12:13:59,655 - #36 ,
INFO  12:13:59,656 - #47 b
INFO  12:13:59,656 - #34 ;
INFO  12:13:59,657 - #47 int
INFO  12:13:59,657 - #47 niz
INFO  12:13:59,658 - #40 [
INFO  12:13:59,658 - #41 ]
INFO  12:13:59,658 - #34 ;
INFO  12:13:59,658 - #47 int
INFO  12:13:59,659 - #47 arr
INFO  12:13:59,659 - #40 [
INFO  12:13:59,659 - #41 ]
INFO  12:13:59,659 - #34 ;
INFO  12:13:59,660 - #47 bool
INFO  12:13:59,661 - #47 buarr
INFO  12:13:59,661 - #40 [
INFO  12:13:59,662 - #41 ]
INFO  12:13:59,662 - #34 ;
INFO  12:13:59,662 - #42 {
INFO  12:13:59,662 - #47 int
INFO  12:13:59,664 - #47 main
INFO  12:13:59,664 - #38 (
INFO  12:13:59,666 - #39 )
INFO  12:13:59,667 - #42 {
INFO  12:13:59,669 - #11 return
INFO  12:13:59,670 - #46 2
INFO  12:13:59,670 - #34 ;
INFO  12:13:59,670 - #43 }
INFO  12:13:59,671 - #43 }
INFO  12:13:59,672 - #43 }
INFO  12:13:59,673 - #47 int
INFO  12:13:59,676 - #47 nizic
INFO  12:13:59,676 - #40 [
INFO  12:13:59,678 - #41 ]
INFO  12:13:59,678 - #34 ;
INFO  12:13:59,678 - #6 const
INFO  12:13:59,679 - #47 bool
INFO  12:13:59,680 - #47 ok
INFO  12:13:59,680 - #31 =
INFO  12:13:59,680 - #48 false
INFO  12:13:59,680 - #34 ;
INFO  12:13:59,682 - #47 bool
INFO  12:13:59,683 - #47 pokusaj
INFO  12:13:59,683 - #34 ;
INFO  12:13:59,683 - #47 int
INFO  12:13:59,684 - #47 dd
INFO  12:13:59,684 - #34 ;
INFO  12:13:59,684 - #47 char
INFO  12:13:59,684 - #47 slovo
INFO  12:13:59,685 - #34 ;
INFO  12:13:59,685 - #42 {
INFO  12:13:59,685 - #12 void
INFO  12:13:59,685 - #47 funkcija
INFO  12:13:59,687 - #38 (
INFO  12:13:59,687 - #39 )
INFO  12:13:59,688 - #47 int
INFO  12:13:59,688 - #47 c
INFO  12:13:59,688 - #36 ,
INFO  12:13:59,689 - #47 d
INFO  12:13:59,689 - #34 ;
INFO  12:13:59,689 - #42 {
INFO  12:13:59,690 - #47 nizic
INFO  12:13:59,690 - #40 [
INFO  12:13:59,690 - #46 3
INFO  12:13:59,690 - #41 ]
INFO  12:13:59,690 - #32 ++
INFO  12:13:59,690 - #34 ;
INFO  12:13:59,692 - #47 nizic
INFO  12:13:59,692 - #40 [
INFO  12:13:59,694 - #46 3
INFO  12:13:59,695 - #41 ]
INFO  12:13:59,695 - #33 --
INFO  12:13:59,695 - #34 ;
INFO  12:13:59,696 - #47 dd
INFO  12:13:59,696 - #32 ++
INFO  12:13:59,697 - #34 ;
INFO  12:13:59,697 - #47 dd
INFO  12:13:59,697 - #33 --
INFO  12:13:59,697 - #34 ;
INFO  12:13:59,698 - #47 Unpacking
INFO  12:13:59,698 - #45 ::
INFO  12:13:59,698 - #47 niz
INFO  12:13:59,698 - #40 [
INFO  12:13:59,698 - #47 dd
INFO  12:13:59,700 - #41 ]
INFO  12:13:59,701 - #32 ++
INFO  12:13:59,701 - #34 ;
INFO  12:13:59,701 - #10 read
INFO  12:13:59,702 - #38 (
INFO  12:13:59,702 - #47 pokusaj
INFO  12:13:59,702 - #39 )
INFO  12:13:59,702 - #34 ;
INFO  12:13:59,703 - #10 read
INFO  12:13:59,703 - #38 (
INFO  12:13:59,703 - #47 Unpacking
INFO  12:13:59,703 - #45 ::
INFO  12:13:59,704 - #47 a
INFO  12:13:59,704 - #39 )
INFO  12:13:59,704 - #34 ;
INFO  12:13:59,704 - #9 print
INFO  12:13:59,704 - #38 (
INFO  12:13:59,705 - #46 3
INFO  12:13:59,705 - #36 ,
INFO  12:13:59,705 - #46 2
INFO  12:13:59,705 - #39 )
INFO  12:13:59,705 - #34 ;
INFO  12:13:59,706 - #43 }
INFO  12:13:59,706 - #47 bool
INFO  12:13:59,706 - #47 testtest2
INFO  12:13:59,706 - #38 (
INFO  12:13:59,706 - #47 int
INFO  12:13:59,707 - #47 param1
INFO  12:13:59,707 - #36 ,
INFO  12:13:59,707 - #47 int
INFO  12:13:59,708 - #47 param2
INFO  12:13:59,708 - #36 ,
INFO  12:13:59,709 - #47 char
INFO  12:13:59,709 - #47 param3
INFO  12:13:59,709 - #39 )
INFO  12:13:59,711 - #47 bool
INFO  12:13:59,712 - #47 c
INFO  12:13:59,713 - #36 ,
INFO  12:13:59,713 - #47 d
INFO  12:13:59,713 - #34 ;
INFO  12:13:59,713 - #42 {
INFO  12:13:59,713 - #11 return
INFO  12:13:59,714 - #47 c
INFO  12:13:59,714 - #34 ;
INFO  12:13:59,714 - #43 }
INFO  12:13:59,715 - #47 bool
INFO  12:13:59,715 - #47 testtest
INFO  12:13:59,715 - #38 (
INFO  12:13:59,715 - #47 int
INFO  12:13:59,715 - #47 param1
INFO  12:13:59,715 - #36 ,
INFO  12:13:59,716 - #47 int
INFO  12:13:59,716 - #47 param2
INFO  12:13:59,716 - #36 ,
INFO  12:13:59,716 - #47 char
INFO  12:13:59,716 - #47 param3
INFO  12:13:59,716 - #39 )
INFO  12:13:59,716 - #47 bool
INFO  12:13:59,716 - #47 c
INFO  12:13:59,716 - #36 ,
INFO  12:13:59,716 - #47 d
INFO  12:13:59,717 - #34 ;
INFO  12:13:59,717 - #42 {
INFO  12:13:59,717 - #11 return
INFO  12:13:59,717 - #47 c
INFO  12:13:59,717 - #34 ;
INFO  12:13:59,717 - #43 }
INFO  12:13:59,717 - #47 int
INFO  12:13:59,717 - #47 test
INFO  12:13:59,717 - #38 (
INFO  12:13:59,717 - #39 )
INFO  12:13:59,718 - #47 bool
INFO  12:13:59,718 - #47 c
INFO  12:13:59,718 - #34 ;
INFO  12:13:59,718 - #42 {
INFO  12:13:59,718 - #47 dd
INFO  12:13:59,718 - #31 =
INFO  12:13:59,718 - #47 Unpacking
INFO  12:13:59,718 - #45 ::
INFO  12:13:59,719 - #47 a
INFO  12:13:59,719 - #20 *
INFO  12:13:59,719 - #47 dd
INFO  12:13:59,721 - #34 ;
INFO  12:13:59,722 - #47 Unpacking
INFO  12:13:59,722 - #45 ::
INFO  12:13:59,722 - #47 a
INFO  12:13:59,722 - #31 =
INFO  12:13:59,723 - #47 Unpacking
INFO  12:13:59,723 - #45 ::
INFO  12:13:59,723 - #47 a
INFO  12:13:59,723 - #18 +
INFO  12:13:59,724 - #47 Unpacking
INFO  12:13:59,726 - #45 ::
INFO  12:13:59,726 - #47 a
INFO  12:13:59,726 - #20 *
INFO  12:13:59,727 - #47 dd
INFO  12:13:59,728 - #34 ;
INFO  12:13:59,729 - #47 Unpacking
INFO  12:13:59,729 - #45 ::
INFO  12:13:59,730 - #47 a
INFO  12:13:59,730 - #31 =
INFO  12:13:59,730 - #19 -
INFO  12:13:59,731 - #47 dd
INFO  12:13:59,731 - #34 ;
INFO  12:13:59,731 - #47 dd
INFO  12:13:59,731 - #31 =
INFO  12:13:59,732 - #46 3
INFO  12:13:59,732 - #34 ;
INFO  12:13:59,732 - #47 dd
INFO  12:13:59,732 - #31 =
INFO  12:13:59,733 - #19 -
INFO  12:13:59,733 - #46 9
INFO  12:13:59,733 - #34 ;
INFO  12:13:59,733 - #11 return
INFO  12:13:59,733 - #46 3
INFO  12:13:59,734 - #34 ;
INFO  12:13:59,734 - #7 if
INFO  12:13:59,735 - #38 (
INFO  12:13:59,735 - #47 pokusaj
INFO  12:13:59,735 - #23 ==
INFO  12:13:59,735 - #48 true
INFO  12:13:59,738 - #39 )
INFO  12:13:59,739 - #42 {
INFO  12:13:59,739 - #47 dd
INFO  12:13:59,739 - #32 ++
INFO  12:13:59,739 - #34 ;
INFO  12:13:59,739 - #43 }
INFO  12:13:59,739 - #5 else
INFO  12:13:59,740 - #42 {
INFO  12:13:59,740 - #47 c
INFO  12:13:59,740 - #31 =
INFO  12:13:59,740 - #48 true
INFO  12:13:59,740 - #34 ;
INFO  12:13:59,740 - #43 }
INFO  12:13:59,741 - #43 }
INFO  12:13:59,741 - #47 int
INFO  12:13:59,741 - #47 main
INFO  12:13:59,741 - #38 (
INFO  12:13:59,741 - #39 )
INFO  12:13:59,741 - #47 int
INFO  12:13:59,742 - #47 prvi
INFO  12:13:59,742 - #36 ,
INFO  12:13:59,742 - #47 drugi
INFO  12:13:59,742 - #34 ;
INFO  12:13:59,742 - #47 char
INFO  12:13:59,742 - #47 treci
INFO  12:13:59,742 - #34 ;
INFO  12:13:59,742 - #47 bool
INFO  12:13:59,743 - #47 cetvrti
INFO  12:13:59,744 - #34 ;
INFO  12:13:59,745 - #42 {
INFO  12:13:59,745 - #47 testtest2
INFO  12:13:59,745 - #38 (
INFO  12:13:59,745 - #47 prvi
INFO  12:13:59,745 - #36 ,
INFO  12:13:59,746 - #47 drugi
INFO  12:13:59,746 - #36 ,
INFO  12:13:59,746 - #47 treci
INFO  12:13:59,746 - #39 )
INFO  12:13:59,746 - #34 ;
INFO  12:13:59,747 - #47 testtest
INFO  12:13:59,747 - #38 (
INFO  12:13:59,747 - #47 prvi
INFO  12:13:59,747 - #36 ,
INFO  12:13:59,748 - #47 drugi
INFO  12:13:59,748 - #36 ,
INFO  12:13:59,748 - #47 treci
INFO  12:13:59,749 - #39 )
INFO  12:13:59,749 - #34 ;
INFO  12:13:59,749 - #47 test
INFO  12:13:59,750 - #38 (
INFO  12:13:59,750 - #39 )
INFO  12:13:59,751 - #34 ;
INFO  12:13:59,751 - #15 for
INFO  12:13:59,752 - #38 (
INFO  12:13:59,752 - #34 ;
INFO  12:13:59,753 - #34 ;
INFO  12:13:59,755 - #39 )
INFO  12:13:59,756 - #42 {
INFO  12:13:59,756 - #15 for
INFO  12:13:59,756 - #38 (
INFO  12:13:59,757 - #34 ;
INFO  12:13:59,757 - #34 ;
INFO  12:13:59,757 - #39 )
INFO  12:13:59,758 - #42 {
INFO  12:13:59,758 - #3 break
INFO  12:13:59,758 - #34 ;
INFO  12:13:59,758 - #43 }
INFO  12:13:59,759 - #3 break
INFO  12:13:59,761 - #34 ;
INFO  12:13:59,761 - #43 }
INFO  12:13:59,761 - #3 break
INFO  12:13:59,761 - #34 ;
INFO  12:13:59,762 - #11 return
INFO  12:13:59,762 - #46 2
INFO  12:13:59,762 - #34 ;
INFO  12:13:59,762 - #43 }
INFO  12:13:59,762 - #43 }
INFO  12:13:59,795 - Program(
  ProgName(
   test302
  ) [ProgName]
  NamespaceList(
    NoNamespaceList(
    ) [NoNamespaceList]
    Namespace(
      NamespaceName(
       Unpacking
      ) [NamespaceName]
      NamespaceDecls(
        NamespaceDecls(
          NamespaceDecls(
            NamespaceDecls(
              NoNamespaceDecls(
              ) [NoNamespaceDecls]
              NamespaceVarDecl(
                Type(
                 int
                ) [Type]
                MultipleVarDecls(
                  SingleVarDecl(
                    VarNameDecl(
                     a
                    ) [VarNameDecl]
                  ) [SingleVarDecl]
                  VarNameDecl(
                   b
                  ) [VarNameDecl]
                ) [MultipleVarDecls]
              ) [NamespaceVarDecl]
            ) [NamespaceDecls]
            NamespaceVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 niz
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [NamespaceVarDecl]
          ) [NamespaceDecls]
          NamespaceVarDecl(
            Type(
             int
            ) [Type]
            SingleVarDecl(
              VarArrayNameDecl(
               arr
              ) [VarArrayNameDecl]
            ) [SingleVarDecl]
          ) [NamespaceVarDecl]
        ) [NamespaceDecls]
        NamespaceVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarArrayNameDecl(
             buarr
            ) [VarArrayNameDecl]
          ) [SingleVarDecl]
        ) [NamespaceVarDecl]
      ) [NamespaceDecls]
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               int
              ) [Type]
            ) [MethRetType]
           main
          ) [MethodTypeName]
          NoFormParam(
          ) [NoFormParam]
          NoMethVar(
          ) [NoMethVar]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   2
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
    ) [Namespace]
  ) [NamespaceList]
  ProgramDecls(
    ProgramDecls(
      ProgramDecls(
        ProgramDecls(
          ProgramDecls(
            NoProgramDecls(
            ) [NoProgramDecls]
            ProgramVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 nizic
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [ProgramVarDecl]
          ) [ProgramDecls]
          ProgramConstDecl(
            Type(
             bool
            ) [Type]
            SingleConstDecl(
              ConstDecl(
               ok
                BoolConst(
                 false
                ) [BoolConst]
              ) [ConstDecl]
            ) [SingleConstDecl]
          ) [ProgramConstDecl]
        ) [ProgramDecls]
        ProgramVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             pokusaj
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [ProgramVarDecl]
      ) [ProgramDecls]
      ProgramVarDecl(
        Type(
         int
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           dd
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [ProgramVarDecl]
    ) [ProgramDecls]
    ProgramVarDecl(
      Type(
       char
      ) [Type]
      SingleVarDecl(
        VarNameDecl(
         slovo
        ) [VarNameDecl]
      ) [SingleVarDecl]
    ) [ProgramVarDecl]
  ) [ProgramDecls]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          MethodDeclarations(
            NoMethodDecl(
            ) [NoMethodDecl]
            MethodDecl(
              MethodTypeName(
                MethRetVoid(
                ) [MethRetVoid]
               funkcija
              ) [MethodTypeName]
              NoFormParam(
              ) [NoFormParam]
              MethodVars(
                NoMethVar(
                ) [NoMethVar]
                Type(
                 int
                ) [Type]
                MultipleVarDecls(
                  SingleVarDecl(
                    VarNameDecl(
                     c
                    ) [VarNameDecl]
                  ) [SingleVarDecl]
                  VarNameDecl(
                   d
                  ) [VarNameDecl]
                ) [MultipleVarDecls]
              ) [MethodVars]
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              NoStmt(
                              ) [NoStmt]
                              DesignatorStmt(
                                DesigStmtActions(
                                  DesigArray(
                                   nizic
                                    PosTermExpr(
                                      FactorTerm(
                                        NumFactor(
                                         3
                                        ) [NumFactor]
                                      ) [FactorTerm]
                                    ) [PosTermExpr]
                                  ) [DesigArray]
                                  DesigInc(
                                  ) [DesigInc]
                                ) [DesigStmtActions]
                              ) [DesignatorStmt]
                            ) [Statements]
                            DesignatorStmt(
                              DesigStmtActions(
                                DesigArray(
                                 nizic
                                  PosTermExpr(
                                    FactorTerm(
                                      NumFactor(
                                       3
                                      ) [NumFactor]
                                    ) [FactorTerm]
                                  ) [PosTermExpr]
                                ) [DesigArray]
                                DesigDec(
                                ) [DesigDec]
                              ) [DesigStmtActions]
                            ) [DesignatorStmt]
                          ) [Statements]
                          DesignatorStmt(
                            DesigStmtActions(
                              DesigVar(
                               dd
                              ) [DesigVar]
                              DesigInc(
                              ) [DesigInc]
                            ) [DesigStmtActions]
                          ) [DesignatorStmt]
                        ) [Statements]
                        DesignatorStmt(
                          DesigStmtActions(
                            DesigVar(
                             dd
                            ) [DesigVar]
                            DesigDec(
                            ) [DesigDec]
                          ) [DesigStmtActions]
                        ) [DesignatorStmt]
                      ) [Statements]
                      DesignatorStmt(
                        DesigStmtActions(
                          ScopeDesigArray(
                           Unpacking
                           niz
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  DesigVar(
                                   dd
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                          ) [ScopeDesigArray]
                          DesigInc(
                          ) [DesigInc]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    ReadExpr(
                      DesigVar(
                       pokusaj
                      ) [DesigVar]
                    ) [ReadExpr]
                  ) [Statements]
                  ReadExpr(
                    ScopeDesigVar(
                     Unpacking
                     a
                    ) [ScopeDesigVar]
                  ) [ReadExpr]
                ) [Statements]
                PrintStmt(
                  PosTermExpr(
                    FactorTerm(
                      NumFactor(
                       3
                      ) [NumFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                  PrintVar(
                   2
                  ) [PrintVar]
                ) [PrintStmt]
              ) [Statements]
            ) [MethodDecl]
          ) [MethodDeclarations]
          MethodDecl(
            MethodTypeName(
              MethRetType(
                Type(
                 bool
                ) [Type]
              ) [MethRetType]
             testtest2
            ) [MethodTypeName]
            FormParams(
              FormCommaParamDecl(
                FormCommaParamDecl(
                  FormParamDecl(
                    FormParamVar(
                      Type(
                       int
                      ) [Type]
                     param1
                    ) [FormParamVar]
                  ) [FormParamDecl]
                  FormParamVar(
                    Type(
                     int
                    ) [Type]
                   param2
                  ) [FormParamVar]
                ) [FormCommaParamDecl]
                FormParamVar(
                  Type(
                   char
                  ) [Type]
                 param3
                ) [FormParamVar]
              ) [FormCommaParamDecl]
            ) [FormParams]
            MethodVars(
              NoMethVar(
              ) [NoMethVar]
              Type(
               bool
              ) [Type]
              MultipleVarDecls(
                SingleVarDecl(
                  VarNameDecl(
                   c
                  ) [VarNameDecl]
                ) [SingleVarDecl]
                VarNameDecl(
                 d
                ) [VarNameDecl]
              ) [MultipleVarDecls]
            ) [MethodVars]
            Statements(
              NoStmt(
              ) [NoStmt]
              ReturnExpr(
                PosTermExpr(
                  FactorTerm(
                    VarFactor(
                      DesigVar(
                       c
                      ) [DesigVar]
                    ) [VarFactor]
                  ) [FactorTerm]
                ) [PosTermExpr]
              ) [ReturnExpr]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               bool
              ) [Type]
            ) [MethRetType]
           testtest
          ) [MethodTypeName]
          FormParams(
            FormCommaParamDecl(
              FormCommaParamDecl(
                FormParamDecl(
                  FormParamVar(
                    Type(
                     int
                    ) [Type]
                   param1
                  ) [FormParamVar]
                ) [FormParamDecl]
                FormParamVar(
                  Type(
                   int
                  ) [Type]
                 param2
                ) [FormParamVar]
              ) [FormCommaParamDecl]
              FormParamVar(
                Type(
                 char
                ) [Type]
               param3
              ) [FormParamVar]
            ) [FormCommaParamDecl]
          ) [FormParams]
          MethodVars(
            NoMethVar(
            ) [NoMethVar]
            Type(
             bool
            ) [Type]
            MultipleVarDecls(
              SingleVarDecl(
                VarNameDecl(
                 c
                ) [VarNameDecl]
              ) [SingleVarDecl]
              VarNameDecl(
               d
              ) [VarNameDecl]
            ) [MultipleVarDecls]
          ) [MethodVars]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  VarFactor(
                    DesigVar(
                     c
                    ) [DesigVar]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        MethodTypeName(
          MethRetType(
            Type(
             int
            ) [Type]
          ) [MethRetType]
         test
        ) [MethodTypeName]
        NoFormParam(
        ) [NoFormParam]
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             c
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [MethodVars]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          AssignExpr(
                            PosTermExpr(
                              MulTerm(
                                FactorTerm(
                                  VarFactor(
                                    ScopeDesigVar(
                                     Unpacking
                                     a
                                    ) [ScopeDesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                                Mul(
                                ) [Mul]
                                VarFactor(
                                  DesigVar(
                                   dd
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [MulTerm]
                            ) [PosTermExpr]
                          ) [AssignExpr]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigVar(
                         Unpacking
                         a
                        ) [ScopeDesigVar]
                        AssignExpr(
                          AddExpr(
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                            Add(
                            ) [Add]
                            MulTerm(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                              Mul(
                              ) [Mul]
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [MulTerm]
                          ) [AddExpr]
                        ) [AssignExpr]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    DesigStmtActions(
                      ScopeDesigVar(
                       Unpacking
                       a
                      ) [ScopeDesigVar]
                      AssignExpr(
                        NegTermeExpr(
                          FactorTerm(
                            VarFactor(
                              DesigVar(
                               dd
                              ) [DesigVar]
                            ) [VarFactor]
                          ) [FactorTerm]
                        ) [NegTermeExpr]
                      ) [AssignExpr]
                    ) [DesigStmtActions]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          NumFactor(
                           3
                          ) [NumFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                DesigStmtActions(
                  DesigVar(
                   dd
                  ) [DesigVar]
                  AssignExpr(
                    NegTermeExpr(
                      FactorTerm(
                        NumFactor(
                         9
                        ) [NumFactor]
                      ) [FactorTerm]
                    ) [NegTermeExpr]
                  ) [AssignExpr]
                ) [DesigStmtActions]
              ) [DesignatorStmt]
            ) [Statements]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   3
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
          IfElseStmt(
            ConditionCondTerm(
              CondTermFact(
                RelOpCondFact(
                  PosTermExpr(
                    FactorTerm(
                      VarFactor(
                        DesigVar(
                         pokusaj
                        ) [DesigVar]
                      ) [VarFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                  EqlOp(
                  ) [EqlOp]
                  PosTermExpr(
                    FactorTerm(
                      BoolFactor(
                       true
                      ) [BoolFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                ) [RelOpCondFact]
              ) [CondTermFact]
            ) [ConditionCondTerm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    DesigInc(
                    ) [DesigInc]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     c
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          BoolFactor(
                           true
                          ) [BoolFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
          ) [IfElseStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        MethRetType(
          Type(
           int
          ) [Type]
        ) [MethRetType]
       main
      ) [MethodTypeName]
      NoFormParam(
      ) [NoFormParam]
      MethodVars(
        MethodVars(
          MethodVars(
            NoMethVar(
            ) [NoMethVar]
            Type(
             int
            ) [Type]
            MultipleVarDecls(
              SingleVarDecl(
                VarNameDecl(
                 prvi
                ) [VarNameDecl]
              ) [SingleVarDecl]
              VarNameDecl(
               drugi
              ) [VarNameDecl]
            ) [MultipleVarDecls]
          ) [MethodVars]
          Type(
           char
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             treci
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [MethodVars]
        Type(
         bool
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           cetvrti
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [MethodVars]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  DesignatorStmt(
                    DesigStmtActions(
                      DesigVar(
                       testtest2
                      ) [DesigVar]
                      DesigFuncCall(
                        ActPars(
                          ActualParamsList(
                            ActualParamsList(
                              ActualParam(
                                PosTermExpr(
                                  FactorTerm(
                                    VarFactor(
                                      DesigVar(
                                       prvi
                                      ) [DesigVar]
                                    ) [VarFactor]
                                  ) [FactorTerm]
                                ) [PosTermExpr]
                              ) [ActualParam]
                              PosTermExpr(
                                FactorTerm(
                                  VarFactor(
                                    DesigVar(
                                     drugi
                                    ) [DesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                              ) [PosTermExpr]
                            ) [ActualParamsList]
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  DesigVar(
                                   treci
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                          ) [ActualParamsList]
                        ) [ActPars]
                      ) [DesigFuncCall]
                    ) [DesigStmtActions]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     testtest
                    ) [DesigVar]
                    DesigFuncCall(
                      ActPars(
                        ActualParamsList(
                          ActualParamsList(
                            ActualParam(
                              PosTermExpr(
                                FactorTerm(
                                  VarFactor(
                                    DesigVar(
                                     prvi
                                    ) [DesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                              ) [PosTermExpr]
                            ) [ActualParam]
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  DesigVar(
                                   drugi
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                          ) [ActualParamsList]
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 treci
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ActualParamsList]
                      ) [ActPars]
                    ) [DesigFuncCall]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                DesigStmtActions(
                  DesigVar(
                   test
                  ) [DesigVar]
                  DesigFuncCall(
                    NoActPars(
                    ) [NoActPars]
                  ) [DesigFuncCall]
                ) [DesigStmtActions]
              ) [DesignatorStmt]
            ) [Statements]
            ForLoop(
              NoForDesigStmt(
              ) [NoForDesigStmt]
              NoForCondFact(
              ) [NoForCondFact]
              NoForDesigStmt(
              ) [NoForDesigStmt]
              ComplexStm(
                Statements(
                  Statements(
                    NoStmt(
                    ) [NoStmt]
                    ForLoop(
                      NoForDesigStmt(
                      ) [NoForDesigStmt]
                      NoForCondFact(
                      ) [NoForCondFact]
                      NoForDesigStmt(
                      ) [NoForDesigStmt]
                      ComplexStm(
                        Statements(
                          NoStmt(
                          ) [NoStmt]
                          BreakStmt(
                          ) [BreakStmt]
                        ) [Statements]
                      ) [ComplexStm]
                    ) [ForLoop]
                  ) [Statements]
                  BreakStmt(
                  ) [BreakStmt]
                ) [Statements]
              ) [ComplexStm]
            ) [ForLoop]
          ) [Statements]
          BreakStmt(
          ) [BreakStmt]
        ) [Statements]
        ReturnExpr(
          PosTermExpr(
            FactorTerm(
              NumFactor(
               2
              ) [NumFactor]
            ) [FactorTerm]
          ) [PosTermExpr]
        ) [ReturnExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  12:13:59,804 - Deklarisana promenljiva Unpacking::a na liniji 6
INFO  12:13:59,804 - Deklarisana promenljiva Unpacking::b na liniji 6
INFO  12:13:59,804 - Deklarisana promenljiva Unpacking::niz na liniji 7
INFO  12:13:59,804 - Deklarisana promenljiva Unpacking::arr na liniji 8
INFO  12:13:59,804 - Deklarisana promenljiva Unpacking::buarr na liniji 9
INFO  12:13:59,805 - Obradjuje se funkcija main na liniji 11
INFO  12:13:59,805 - Deklarisana promenljiva nizic na liniji 16
INFO  12:13:59,805 - Deklarisana konstanta ok na liniji 17
INFO  12:13:59,805 - Deklarisana promenljiva pokusaj na liniji 18
INFO  12:13:59,805 - Deklarisana promenljiva dd na liniji 19
INFO  12:13:59,805 - Deklarisana promenljiva slovo na liniji 20
INFO  12:13:59,805 - Obradjuje se funkcija funkcija na liniji 23
INFO  12:13:59,805 - Deklarisana promenljiva c na liniji 23
INFO  12:13:59,805 - Deklarisana promenljiva d na liniji 23
INFO  12:13:59,806 - Pretraga na 25(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 25
INFO  12:13:59,808 - Pretraga na 26(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 26
INFO  12:13:59,808 - Pretraga na 29(Unpacking::niz), nadjeno Var Unpacking::niz: Arr of int, 2, 0  na liniji 29
INFO  12:13:59,809 - Obradjuje se funkcija testtest2 na liniji 38
INFO  12:13:59,809 - Deklarisan parametar param1 metode: testtest2. na liniji 38
INFO  12:13:59,811 - Deklarisan parametar param2 metode: testtest2. na liniji 38
INFO  12:13:59,812 - Deklarisan parametar param3 metode: testtest2. na liniji 38
INFO  12:13:59,812 - Deklarisana promenljiva c na liniji 38
INFO  12:13:59,812 - Deklarisana promenljiva d na liniji 38
INFO  12:13:59,812 - Obradjuje se funkcija testtest na liniji 42
INFO  12:13:59,813 - Deklarisan parametar param1 metode: testtest. na liniji 42
INFO  12:13:59,815 - Deklarisan parametar param2 metode: testtest. na liniji 42
INFO  12:13:59,817 - Deklarisan parametar param3 metode: testtest. na liniji 42
INFO  12:13:59,818 - Deklarisana promenljiva c na liniji 42
INFO  12:13:59,822 - Deklarisana promenljiva d na liniji 42
INFO  12:13:59,823 - Obradjuje se funkcija test na liniji 46
INFO  12:13:59,824 - Deklarisana promenljiva c na liniji 46
INFO  12:13:59,826 - Obradjuje se funkcija main na liniji 65
INFO  12:13:59,826 - Deklarisana promenljiva prvi na liniji 66
INFO  12:13:59,826 - Deklarisana promenljiva drugi na liniji 66
INFO  12:13:59,826 - Deklarisana promenljiva treci na liniji 67
INFO  12:13:59,826 - Deklarisana promenljiva cetvrti na liniji 68
INFO  12:13:59,837 - Obradjuje se for petlja na liniji: 5
INFO  12:13:59,837 - Obradjuje se for petlja na liniji: 6
ERROR 12:13:59,838 - Greska na liniji 0: iskaz break se može koristiti samo unutar for petlje!
INFO  12:13:59,838 -  Print count calls = 0
INFO  12:13:59,838 -  Deklarisanih promenljivih ima = 0
INFO  12:13:59,841 - Neuspesna semanticka analiza!!
