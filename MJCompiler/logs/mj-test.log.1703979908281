INFO  20:34:36,508 - Compiling source file: C:\Users\Zoki\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  20:34:36,515 - #2 program
INFO  20:34:36,515 - #45 Program
INFO  20:34:36,515 - #4 class
INFO  20:34:36,515 - #45 A
INFO  20:34:36,516 - #42 {
INFO  20:34:36,516 - #45 int
INFO  20:34:36,516 - #45 x
INFO  20:34:36,517 - #40 [
INFO  20:34:36,517 - #41 ]
INFO  20:34:36,517 - #36 ,
INFO  20:34:36,517 - #45 y
INFO  20:34:36,518 - #40 [
INFO  20:34:36,518 - #41 ]
INFO  20:34:36,518 - #34 ;
INFO  20:34:36,518 - #43 }
INFO  20:34:36,519 - #6 const
INFO  20:34:36,519 - #45 int
INFO  20:34:36,519 - #45 pi
INFO  20:34:36,519 - #31 =
INFO  20:34:36,519 - #48 3
INFO  20:34:36,519 - #36 ,
INFO  20:34:36,520 - #45 e
INFO  20:34:36,520 - #31 =
INFO  20:34:36,520 - #48 2
INFO  20:34:36,520 - #34 ;
INFO  20:34:36,520 - #45 int
INFO  20:34:36,521 - #45 a
INFO  20:34:36,521 - #36 ,
INFO  20:34:36,521 - #45 b
INFO  20:34:36,521 - #34 ;
INFO  20:34:36,522 - #4 class
INFO  20:34:36,522 - #45 B
INFO  20:34:36,522 - #13 extends
INFO  20:34:36,523 - #45 A
INFO  20:34:36,523 - #42 {
INFO  20:34:36,523 - #45 int
INFO  20:34:36,523 - #45 i
INFO  20:34:36,523 - #34 ;
INFO  20:34:36,523 - #42 {
INFO  20:34:36,524 - #45 int
INFO  20:34:36,524 - #45 getValue
INFO  20:34:36,524 - #38 (
INFO  20:34:36,525 - #45 int
INFO  20:34:36,525 - #45 a
INFO  20:34:36,525 - #39 )
INFO  20:34:36,525 - #45 int
INFO  20:34:36,525 - #45 b
INFO  20:34:36,526 - #34 ;
INFO  20:34:36,526 - #45 bool
INFO  20:34:36,526 - #45 c
INFO  20:34:36,526 - #34 ;
INFO  20:34:36,526 - #42 {
INFO  20:34:36,527 - #11 return
INFO  20:34:36,527 - #45 this
INFO  20:34:36,527 - #37 .
INFO  20:34:36,527 - #45 i
INFO  20:34:36,527 - #18 +
INFO  20:34:36,527 - #45 this
INFO  20:34:36,527 - #37 .
INFO  20:34:36,528 - #45 x
INFO  20:34:36,528 - #40 [
INFO  20:34:36,528 - #48 0
INFO  20:34:36,528 - #41 ]
INFO  20:34:36,529 - #18 +
INFO  20:34:36,529 - #45 a
INFO  20:34:36,529 - #34 ;
INFO  20:34:36,529 - #43 }
INFO  20:34:36,529 - #12 void
INFO  20:34:36,530 - #45 m
INFO  20:34:36,531 - #38 (
INFO  20:34:36,531 - #39 )
INFO  20:34:36,531 - #45 int
INFO  20:34:36,531 - #45 a
INFO  20:34:36,531 - #34 ;
INFO  20:34:36,532 - #42 {
INFO  20:34:36,532 - #45 x
INFO  20:34:36,532 - #37 .
INFO  20:34:36,533 - #45 foreach
INFO  20:34:36,533 - #38 (
INFO  20:34:36,533 - #45 a
INFO  20:34:36,533 - #44 =>
INFO  20:34:36,533 - #9 print
INFO  20:34:36,533 - #38 (
INFO  20:34:36,533 - #45 a
INFO  20:34:36,534 - #39 )
INFO  20:34:36,534 - #34 ;
INFO  20:34:36,534 - #39 )
INFO  20:34:36,534 - #34 ;
INFO  20:34:36,535 - #43 }
INFO  20:34:36,535 - #43 }
INFO  20:34:36,536 - #43 }
INFO  20:34:36,536 - #4 class
INFO  20:34:36,538 - #45 C
INFO  20:34:36,538 - #13 extends
INFO  20:34:36,539 - #45 B
INFO  20:34:36,542 - #42 {
INFO  20:34:36,542 - #45 A
INFO  20:34:36,542 - #45 theA
INFO  20:34:36,542 - #34 ;
INFO  20:34:36,543 - #45 int
INFO  20:34:36,543 - #45 a
INFO  20:34:36,544 - #34 ;
INFO  20:34:36,544 - #43 }
INFO  20:34:36,544 - #42 {
INFO  20:34:36,544 - #12 void
INFO  20:34:36,544 - #45 main
INFO  20:34:36,544 - #38 (
INFO  20:34:36,544 - #39 )
INFO  20:34:36,545 - #45 A
INFO  20:34:36,545 - #45 a
INFO  20:34:36,545 - #34 ;
INFO  20:34:36,546 - #45 C
INFO  20:34:36,546 - #45 c
INFO  20:34:36,546 - #34 ;
INFO  20:34:36,546 - #45 int
INFO  20:34:36,546 - #45 i
INFO  20:34:36,547 - #34 ;
INFO  20:34:36,547 - #45 int
INFO  20:34:36,547 - #45 x
INFO  20:34:36,547 - #40 [
INFO  20:34:36,547 - #41 ]
INFO  20:34:36,548 - #34 ;
INFO  20:34:36,548 - #45 char
INFO  20:34:36,548 - #45 ch
INFO  20:34:36,548 - #34 ;
INFO  20:34:36,549 - #42 {
INFO  20:34:36,549 - #45 a
INFO  20:34:36,549 - #31 =
INFO  20:34:36,549 - #8 new
INFO  20:34:36,549 - #45 A
INFO  20:34:36,549 - #34 ;
INFO  20:34:36,549 - #45 a
INFO  20:34:36,549 - #37 .
INFO  20:34:36,550 - #45 x
INFO  20:34:36,550 - #31 =
INFO  20:34:36,550 - #8 new
INFO  20:34:36,550 - #45 int
INFO  20:34:36,550 - #40 [
INFO  20:34:36,550 - #48 5
INFO  20:34:36,550 - #41 ]
INFO  20:34:36,551 - #34 ;
INFO  20:34:36,551 - #45 a
INFO  20:34:36,551 - #37 .
INFO  20:34:36,551 - #45 y
INFO  20:34:36,551 - #31 =
INFO  20:34:36,551 - #8 new
INFO  20:34:36,551 - #45 int
INFO  20:34:36,551 - #40 [
INFO  20:34:36,551 - #48 5
INFO  20:34:36,551 - #41 ]
INFO  20:34:36,551 - #34 ;
INFO  20:34:36,552 - #45 c
INFO  20:34:36,552 - #31 =
INFO  20:34:36,552 - #8 new
INFO  20:34:36,552 - #45 C
INFO  20:34:36,552 - #34 ;
INFO  20:34:36,552 - #45 c
INFO  20:34:36,553 - #37 .
INFO  20:34:36,553 - #45 theA
INFO  20:34:36,553 - #31 =
INFO  20:34:36,553 - #45 a
INFO  20:34:36,553 - #34 ;
INFO  20:34:36,553 - #45 c
INFO  20:34:36,553 - #37 .
INFO  20:34:36,553 - #45 x
INFO  20:34:36,553 - #31 =
INFO  20:34:36,553 - #8 new
INFO  20:34:36,554 - #45 int
INFO  20:34:36,554 - #40 [
INFO  20:34:36,554 - #48 5
INFO  20:34:36,555 - #41 ]
INFO  20:34:36,555 - #34 ;
INFO  20:34:36,555 - #45 x
INFO  20:34:36,555 - #31 =
INFO  20:34:36,555 - #8 new
INFO  20:34:36,555 - #45 int
INFO  20:34:36,555 - #40 [
INFO  20:34:36,556 - #48 3
INFO  20:34:36,556 - #41 ]
INFO  20:34:36,556 - #34 ;
INFO  20:34:36,556 - #10 read
INFO  20:34:36,556 - #38 (
INFO  20:34:36,556 - #45 c
INFO  20:34:36,556 - #37 .
INFO  20:34:36,556 - #45 i
INFO  20:34:36,556 - #39 )
INFO  20:34:36,556 - #34 ;
INFO  20:34:36,557 - #45 i
INFO  20:34:36,558 - #31 =
INFO  20:34:36,558 - #48 0
INFO  20:34:36,559 - #34 ;
INFO  20:34:36,559 - #45 while
INFO  20:34:36,560 - #38 (
INFO  20:34:36,560 - #45 i
INFO  20:34:36,560 - #27 <
INFO  20:34:36,561 - #48 5
INFO  20:34:36,561 - #39 )
INFO  20:34:36,561 - #42 {
INFO  20:34:36,561 - #10 read
INFO  20:34:36,561 - #38 (
INFO  20:34:36,561 - #45 c
INFO  20:34:36,561 - #37 .
INFO  20:34:36,561 - #45 x
INFO  20:34:36,561 - #40 [
INFO  20:34:36,561 - #45 i
INFO  20:34:36,561 - #41 ]
INFO  20:34:36,561 - #39 )
INFO  20:34:36,562 - #34 ;
INFO  20:34:36,562 - #10 read
INFO  20:34:36,562 - #38 (
INFO  20:34:36,562 - #45 c
INFO  20:34:36,562 - #37 .
INFO  20:34:36,562 - #45 theA
INFO  20:34:36,562 - #37 .
INFO  20:34:36,563 - #45 x
INFO  20:34:36,563 - #40 [
INFO  20:34:36,563 - #45 i
INFO  20:34:36,563 - #41 ]
INFO  20:34:36,563 - #39 )
INFO  20:34:36,563 - #34 ;
INFO  20:34:36,563 - #45 i
INFO  20:34:36,563 - #32 ++
INFO  20:34:36,563 - #34 ;
INFO  20:34:36,564 - #43 }
INFO  20:34:36,564 - #40 [
INFO  20:34:36,564 - #45 a
INFO  20:34:36,564 - #36 ,
INFO  20:34:36,564 - #36 ,
INFO  20:34:36,564 - #45 b
INFO  20:34:36,565 - #41 ]
INFO  20:34:36,565 - #31 =
INFO  20:34:36,565 - #45 c
INFO  20:34:36,565 - #37 .
INFO  20:34:36,565 - #45 x
INFO  20:34:36,565 - #34 ;
INFO  20:34:36,565 - #9 print
INFO  20:34:36,565 - #38 (
INFO  20:34:36,566 - #45 c
INFO  20:34:36,566 - #37 .
INFO  20:34:36,566 - #45 getValue
INFO  20:34:36,566 - #38 (
INFO  20:34:36,566 - #45 c
INFO  20:34:36,566 - #37 .
INFO  20:34:36,566 - #45 theA
INFO  20:34:36,567 - #37 .
INFO  20:34:36,567 - #45 x
INFO  20:34:36,567 - #40 [
INFO  20:34:36,567 - #48 0
INFO  20:34:36,568 - #41 ]
INFO  20:34:36,568 - #39 )
INFO  20:34:36,568 - #39 )
INFO  20:34:36,568 - #34 ;
INFO  20:34:36,568 - #45 c
INFO  20:34:36,569 - #37 .
INFO  20:34:36,569 - #45 m
INFO  20:34:36,572 - #38 (
INFO  20:34:36,572 - #39 )
INFO  20:34:36,577 - #34 ;
INFO  20:34:36,579 - #43 }
INFO  20:34:36,579 - #43 }
