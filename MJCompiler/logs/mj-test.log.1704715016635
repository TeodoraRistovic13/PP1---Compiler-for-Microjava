INFO  01:24:56,753 - Compiling source file: C:\Users\Zoki\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  01:24:56,858 - #2 program
INFO  01:24:56,858 - #47 test302
INFO  01:24:56,858 - #17 namespace
INFO  01:24:56,860 - #47 Unpacking
INFO  01:24:56,860 - #42 {
INFO  01:24:56,862 - #47 int
INFO  01:24:56,864 - #47 a
INFO  01:24:56,865 - #36 ,
INFO  01:24:56,866 - #47 b
INFO  01:24:56,866 - #34 ;
INFO  01:24:56,866 - #47 int
INFO  01:24:56,867 - #47 niz
INFO  01:24:56,867 - #40 [
INFO  01:24:56,867 - #41 ]
INFO  01:24:56,868 - #34 ;
INFO  01:24:56,868 - #47 int
INFO  01:24:56,868 - #47 arr
INFO  01:24:56,869 - #40 [
INFO  01:24:56,869 - #41 ]
INFO  01:24:56,870 - #34 ;
INFO  01:24:56,870 - #47 bool
INFO  01:24:56,871 - #47 buarr
INFO  01:24:56,872 - #40 [
INFO  01:24:56,872 - #41 ]
INFO  01:24:56,872 - #34 ;
INFO  01:24:56,872 - #42 {
INFO  01:24:56,873 - #47 int
INFO  01:24:56,874 - #47 main
INFO  01:24:56,875 - #38 (
INFO  01:24:56,877 - #39 )
INFO  01:24:56,878 - #42 {
INFO  01:24:56,880 - #11 return
INFO  01:24:56,882 - #46 2
INFO  01:24:56,882 - #34 ;
INFO  01:24:56,883 - #43 }
INFO  01:24:56,883 - #43 }
INFO  01:24:56,885 - #43 }
INFO  01:24:56,886 - #47 int
INFO  01:24:56,890 - #47 nizic
INFO  01:24:56,890 - #40 [
INFO  01:24:56,890 - #41 ]
INFO  01:24:56,890 - #34 ;
INFO  01:24:56,891 - #6 const
INFO  01:24:56,891 - #47 bool
INFO  01:24:56,891 - #47 ok
INFO  01:24:56,892 - #31 =
INFO  01:24:56,892 - #48 false
INFO  01:24:56,892 - #34 ;
INFO  01:24:56,894 - #47 bool
INFO  01:24:56,896 - #47 pokusaj
INFO  01:24:56,896 - #34 ;
INFO  01:24:56,896 - #47 int
INFO  01:24:56,896 - #47 dd
INFO  01:24:56,896 - #34 ;
INFO  01:24:56,896 - #47 char
INFO  01:24:56,897 - #47 slovo
INFO  01:24:56,897 - #34 ;
INFO  01:24:56,897 - #42 {
INFO  01:24:56,897 - #12 void
INFO  01:24:56,897 - #47 funkcija
INFO  01:24:56,898 - #38 (
INFO  01:24:56,899 - #39 )
INFO  01:24:56,899 - #47 int
INFO  01:24:56,899 - #47 c
INFO  01:24:56,899 - #36 ,
INFO  01:24:56,899 - #47 d
INFO  01:24:56,899 - #34 ;
INFO  01:24:56,900 - #42 {
INFO  01:24:56,900 - #47 nizic
INFO  01:24:56,900 - #40 [
INFO  01:24:56,901 - #46 3
INFO  01:24:56,901 - #41 ]
INFO  01:24:56,901 - #32 ++
INFO  01:24:56,901 - #34 ;
INFO  01:24:56,903 - #47 nizic
INFO  01:24:56,904 - #40 [
INFO  01:24:56,904 - #46 3
INFO  01:24:56,904 - #41 ]
INFO  01:24:56,905 - #33 --
INFO  01:24:56,905 - #34 ;
INFO  01:24:56,906 - #47 dd
INFO  01:24:56,906 - #32 ++
INFO  01:24:56,906 - #34 ;
INFO  01:24:56,907 - #47 dd
INFO  01:24:56,907 - #33 --
INFO  01:24:56,908 - #34 ;
INFO  01:24:56,908 - #47 Unpacking
INFO  01:24:56,908 - #45 ::
INFO  01:24:56,909 - #47 niz
INFO  01:24:56,909 - #40 [
INFO  01:24:56,909 - #46 3
INFO  01:24:56,911 - #41 ]
INFO  01:24:56,913 - #32 ++
INFO  01:24:56,913 - #34 ;
INFO  01:24:56,914 - #10 read
INFO  01:24:56,914 - #38 (
INFO  01:24:56,914 - #47 pokusaj
INFO  01:24:56,914 - #39 )
INFO  01:24:56,914 - #34 ;
INFO  01:24:56,915 - #10 read
INFO  01:24:56,916 - #38 (
INFO  01:24:56,916 - #47 Unpacking
INFO  01:24:56,916 - #45 ::
INFO  01:24:56,916 - #47 a
INFO  01:24:56,916 - #39 )
INFO  01:24:56,917 - #34 ;
INFO  01:24:56,917 - #9 print
INFO  01:24:56,917 - #38 (
INFO  01:24:56,917 - #46 3
INFO  01:24:56,918 - #36 ,
INFO  01:24:56,918 - #46 2
INFO  01:24:56,918 - #39 )
INFO  01:24:56,918 - #34 ;
INFO  01:24:56,919 - #43 }
INFO  01:24:56,919 - #47 bool
INFO  01:24:56,920 - #47 testtest
INFO  01:24:56,920 - #38 (
INFO  01:24:56,920 - #39 )
INFO  01:24:56,920 - #47 int
INFO  01:24:56,921 - #47 c
INFO  01:24:56,921 - #36 ,
INFO  01:24:56,922 - #47 d
INFO  01:24:56,922 - #34 ;
INFO  01:24:56,922 - #42 {
INFO  01:24:56,922 - #11 return
INFO  01:24:56,923 - #46 2
INFO  01:24:56,923 - #34 ;
INFO  01:24:56,923 - #43 }
INFO  01:24:56,923 - #47 int
INFO  01:24:56,923 - #47 test
INFO  01:24:56,923 - #38 (
INFO  01:24:56,923 - #39 )
INFO  01:24:56,923 - #42 {
INFO  01:24:56,924 - #47 dd
INFO  01:24:56,924 - #31 =
INFO  01:24:56,924 - #47 Unpacking
INFO  01:24:56,924 - #45 ::
INFO  01:24:56,924 - #47 a
INFO  01:24:56,924 - #20 *
INFO  01:24:56,925 - #47 dd
INFO  01:24:56,926 - #34 ;
INFO  01:24:56,927 - #11 return
INFO  01:24:56,927 - #46 3
INFO  01:24:56,927 - #34 ;
INFO  01:24:56,927 - #47 nizic
INFO  01:24:56,927 - #31 =
INFO  01:24:56,928 - #8 new
INFO  01:24:56,928 - #47 int
INFO  01:24:56,928 - #40 [
INFO  01:24:56,928 - #46 4
INFO  01:24:56,928 - #41 ]
INFO  01:24:56,928 - #34 ;
INFO  01:24:56,928 - #47 dd
INFO  01:24:56,929 - #31 =
INFO  01:24:56,929 - #19 -
INFO  01:24:56,929 - #46 2
INFO  01:24:56,929 - #20 *
INFO  01:24:56,929 - #46 3
INFO  01:24:56,929 - #34 ;
INFO  01:24:56,929 - #43 }
INFO  01:24:56,930 - #43 }
INFO  01:24:56,940 - Program(
  ProgName(
   test302
  ) [ProgName]
  NamespaceList(
    NoNamespaceList(
    ) [NoNamespaceList]
    Namespace(
      NamespaceName(
       Unpacking
      ) [NamespaceName]
      NamespaceDecls(
        NamespaceDecls(
          NamespaceDecls(
            NamespaceDecls(
              NoNamespaceDecls(
              ) [NoNamespaceDecls]
              NamespaceVarDecl(
                Type(
                 int
                ) [Type]
                MultipleVarDecls(
                  SingleVarDecl(
                    VarNameDecl(
                     a
                    ) [VarNameDecl]
                  ) [SingleVarDecl]
                  VarNameDecl(
                   b
                  ) [VarNameDecl]
                ) [MultipleVarDecls]
              ) [NamespaceVarDecl]
            ) [NamespaceDecls]
            NamespaceVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 niz
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [NamespaceVarDecl]
          ) [NamespaceDecls]
          NamespaceVarDecl(
            Type(
             int
            ) [Type]
            SingleVarDecl(
              VarArrayNameDecl(
               arr
              ) [VarArrayNameDecl]
            ) [SingleVarDecl]
          ) [NamespaceVarDecl]
        ) [NamespaceDecls]
        NamespaceVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarArrayNameDecl(
             buarr
            ) [VarArrayNameDecl]
          ) [SingleVarDecl]
        ) [NamespaceVarDecl]
      ) [NamespaceDecls]
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               int
              ) [Type]
            ) [MethRetType]
           main
          ) [MethodTypeName]
          NoFormParam(
          ) [NoFormParam]
          NoMethVar(
          ) [NoMethVar]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PositiveExpr(
                SimpleTerm(
                  NumFactor(
                   2
                  ) [NumFactor]
                ) [SimpleTerm]
              ) [PositiveExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
    ) [Namespace]
  ) [NamespaceList]
  ProgramDecls(
    ProgramDecls(
      ProgramDecls(
        ProgramDecls(
          ProgramDecls(
            NoProgramDecls(
            ) [NoProgramDecls]
            ProgramVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 nizic
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [ProgramVarDecl]
          ) [ProgramDecls]
          ProgramConstDecl(
            Type(
             bool
            ) [Type]
            SingleConstDecl(
              ConstDecl(
               ok
                BoolConst(
                 false
                ) [BoolConst]
              ) [ConstDecl]
            ) [SingleConstDecl]
          ) [ProgramConstDecl]
        ) [ProgramDecls]
        ProgramVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             pokusaj
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [ProgramVarDecl]
      ) [ProgramDecls]
      ProgramVarDecl(
        Type(
         int
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           dd
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [ProgramVarDecl]
    ) [ProgramDecls]
    ProgramVarDecl(
      Type(
       char
      ) [Type]
      SingleVarDecl(
        VarNameDecl(
         slovo
        ) [VarNameDecl]
      ) [SingleVarDecl]
    ) [ProgramVarDecl]
  ) [ProgramDecls]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDecl(
          MethodTypeName(
            MethRetVoid(
            ) [MethRetVoid]
           funkcija
          ) [MethodTypeName]
          NoFormParam(
          ) [NoFormParam]
          MethodVars(
            NoMethVar(
            ) [NoMethVar]
            Type(
             int
            ) [Type]
            MultipleVarDecls(
              SingleVarDecl(
                VarNameDecl(
                 c
                ) [VarNameDecl]
              ) [SingleVarDecl]
              VarNameDecl(
               d
              ) [VarNameDecl]
            ) [MultipleVarDecls]
          ) [MethodVars]
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          NoStmt(
                          ) [NoStmt]
                          DesignatorStmt(
                            DesigStmtActions(
                              DesigArray(
                               nizic
                                PositiveExpr(
                                  SimpleTerm(
                                    NumFactor(
                                     3
                                    ) [NumFactor]
                                  ) [SimpleTerm]
                                ) [PositiveExpr]
                              ) [DesigArray]
                              DesigInc(
                              ) [DesigInc]
                            ) [DesigStmtActions]
                          ) [DesignatorStmt]
                        ) [Statements]
                        DesignatorStmt(
                          DesigStmtActions(
                            DesigArray(
                             nizic
                              PositiveExpr(
                                SimpleTerm(
                                  NumFactor(
                                   3
                                  ) [NumFactor]
                                ) [SimpleTerm]
                              ) [PositiveExpr]
                            ) [DesigArray]
                            DesigDec(
                            ) [DesigDec]
                          ) [DesigStmtActions]
                        ) [DesignatorStmt]
                      ) [Statements]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          DesigInc(
                          ) [DesigInc]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        DesigVar(
                         dd
                        ) [DesigVar]
                        DesigDec(
                        ) [DesigDec]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    DesigStmtActions(
                      ScopeDesigArray(
                       Unpacking
                       niz
                        PositiveExpr(
                          SimpleTerm(
                            NumFactor(
                             3
                            ) [NumFactor]
                          ) [SimpleTerm]
                        ) [PositiveExpr]
                      ) [ScopeDesigArray]
                      DesigInc(
                      ) [DesigInc]
                    ) [DesigStmtActions]
                  ) [DesignatorStmt]
                ) [Statements]
                ReadExpr(
                  DesigVar(
                   pokusaj
                  ) [DesigVar]
                ) [ReadExpr]
              ) [Statements]
              ReadExpr(
                ScopeDesigVar(
                 Unpacking
                 a
                ) [ScopeDesigVar]
              ) [ReadExpr]
            ) [Statements]
            PrintStmt(
              PositiveExpr(
                SimpleTerm(
                  NumFactor(
                   3
                  ) [NumFactor]
                ) [SimpleTerm]
              ) [PositiveExpr]
              PrintVar(
               2
              ) [PrintVar]
            ) [PrintStmt]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        MethodTypeName(
          MethRetType(
            Type(
             bool
            ) [Type]
          ) [MethRetType]
         testtest
        ) [MethodTypeName]
        NoFormParam(
        ) [NoFormParam]
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           int
          ) [Type]
          MultipleVarDecls(
            SingleVarDecl(
              VarNameDecl(
               c
              ) [VarNameDecl]
            ) [SingleVarDecl]
            VarNameDecl(
             d
            ) [VarNameDecl]
          ) [MultipleVarDecls]
        ) [MethodVars]
        Statements(
          NoStmt(
          ) [NoStmt]
          ReturnExpr(
            PositiveExpr(
              SimpleTerm(
                NumFactor(
                 2
                ) [NumFactor]
              ) [SimpleTerm]
            ) [PositiveExpr]
          ) [ReturnExpr]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        MethRetType(
          Type(
           int
          ) [Type]
        ) [MethRetType]
       test
      ) [MethodTypeName]
      NoFormParam(
      ) [NoFormParam]
      NoMethVar(
      ) [NoMethVar]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                DesigStmtActions(
                  DesigVar(
                   dd
                  ) [DesigVar]
                  AssignExpr(
                    PositiveExpr(
                      ComplexTerm(
                        SimpleTerm(
                          VarFactor(
                            ScopeDesigVar(
                             Unpacking
                             a
                            ) [ScopeDesigVar]
                          ) [VarFactor]
                        ) [SimpleTerm]
                        Mul(
                        ) [Mul]
                        VarFactor(
                          DesigVar(
                           dd
                          ) [DesigVar]
                        ) [VarFactor]
                      ) [ComplexTerm]
                    ) [PositiveExpr]
                  ) [AssignExpr]
                ) [DesigStmtActions]
              ) [DesignatorStmt]
            ) [Statements]
            ReturnExpr(
              PositiveExpr(
                SimpleTerm(
                  NumFactor(
                   3
                  ) [NumFactor]
                ) [SimpleTerm]
              ) [PositiveExpr]
            ) [ReturnExpr]
          ) [Statements]
          DesignatorStmt(
            DesigStmtActions(
              DesigVar(
               nizic
              ) [DesigVar]
              AssignExpr(
                PositiveExpr(
                  SimpleTerm(
                    NewFactor(
                      Type(
                       int
                      ) [Type]
                      PositiveExpr(
                        SimpleTerm(
                          NumFactor(
                           4
                          ) [NumFactor]
                        ) [SimpleTerm]
                      ) [PositiveExpr]
                    ) [NewFactor]
                  ) [SimpleTerm]
                ) [PositiveExpr]
              ) [AssignExpr]
            ) [DesigStmtActions]
          ) [DesignatorStmt]
        ) [Statements]
        DesignatorStmt(
          DesigStmtActions(
            DesigVar(
             dd
            ) [DesigVar]
            AssignExpr(
              NegativeExpr(
                ComplexTerm(
                  SimpleTerm(
                    NumFactor(
                     2
                    ) [NumFactor]
                  ) [SimpleTerm]
                  Mul(
                  ) [Mul]
                  NumFactor(
                   3
                  ) [NumFactor]
                ) [ComplexTerm]
              ) [NegativeExpr]
            ) [AssignExpr]
          ) [DesigStmtActions]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  01:24:56,946 - Deklarisana promenljiva Unpacking::a na liniji 6
INFO  01:24:56,946 - Deklarisana promenljiva Unpacking::b na liniji 6
INFO  01:24:56,947 - Deklarisana promenljiva Unpacking::niz na liniji 7
INFO  01:24:56,947 - Deklarisana promenljiva Unpacking::arr na liniji 8
INFO  01:24:56,947 - Deklarisana promenljiva Unpacking::buarr na liniji 9
INFO  01:24:56,947 - Obradjuje se funkcija main na liniji 11
INFO  01:24:56,947 - Deklarisana promenljiva nizic na liniji 16
INFO  01:24:56,948 - Deklarisana konstanta ok na liniji 17
INFO  01:24:56,948 - Deklarisana promenljiva pokusaj na liniji 18
INFO  01:24:56,948 - Deklarisana promenljiva dd na liniji 19
INFO  01:24:56,948 - Deklarisana promenljiva slovo na liniji 20
INFO  01:24:56,949 - Obradjuje se funkcija funkcija na liniji 23
INFO  01:24:56,949 - Deklarisana promenljiva c na liniji 23
INFO  01:24:56,949 - Deklarisana promenljiva d na liniji 23
INFO  01:24:56,949 - Pretraga na 25(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 25
INFO  01:24:56,951 - Pretraga na 26(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 26
INFO  01:24:56,951 - Pretraga na 27(dd), nadjeno Var dd: int, 7, 0  na liniji 27
INFO  01:24:56,951 - Pretraga na 28(dd), nadjeno Var dd: int, 7, 0  na liniji 28
INFO  01:24:56,952 - Pretraga na 29(Unpacking::niz), nadjeno Var Unpacking::niz: Arr of int, 2, 0  na liniji 29
INFO  01:24:56,952 - Pretraga na 31(pokusaj), nadjeno Var pokusaj: bool, 6, 0  na liniji 31
INFO  01:24:56,952 - Pretraga na 32(Unpacking::a), nadjeno Var Unpacking::a: int, 0, 0  na liniji 32
INFO  01:24:56,952 - Obradjuje se funkcija testtest na liniji 38
INFO  01:24:56,952 - Deklarisana promenljiva c na liniji 38
INFO  01:24:56,952 - Deklarisana promenljiva d na liniji 38
INFO  01:24:56,953 - Obradjuje se funkcija test na liniji 42
INFO  01:24:56,954 - Pretraga na 44(dd), nadjeno Var dd: int, 7, 0  na liniji 44
INFO  01:24:56,954 - Pretraga na 44(Unpacking::a), nadjeno Var Unpacking::a: int, 0, 0  na liniji 44
INFO  01:24:56,955 - Pretraga na 44(dd), nadjeno Var dd: int, 7, 0  na liniji 44
INFO  01:24:56,956 - Pretraga na 46(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 46
INFO  01:24:56,956 - Pretraga na 47(dd), nadjeno Var dd: int, 7, 0  na liniji 47
INFO  01:24:56,957 -  Print count calls = 0
INFO  01:24:56,957 -  Deklarisanih promenljivih ima = 0
INFO  01:24:56,958 - Uspesna semanticka analiza!!
