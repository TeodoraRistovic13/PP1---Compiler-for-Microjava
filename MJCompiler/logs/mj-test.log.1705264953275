INFO  21:41:48,614 - Compiling source file: C:\Users\Zoki\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:41:48,701 - #2 program
INFO  21:41:48,702 - #47 test302
INFO  21:41:48,702 - #17 namespace
INFO  21:41:48,705 - #47 Addition
INFO  21:41:48,705 - #42 {
INFO  21:41:48,707 - #42 {
INFO  21:41:48,709 - #47 int
INFO  21:41:48,710 - #47 sum
INFO  21:41:48,712 - #38 (
INFO  21:41:48,713 - #47 int
INFO  21:41:48,713 - #47 z
INFO  21:41:48,714 - #36 ,
INFO  21:41:48,714 - #47 int
INFO  21:41:48,714 - #47 d
INFO  21:41:48,714 - #39 )
INFO  21:41:48,715 - #42 {
INFO  21:41:48,718 - #11 return
INFO  21:41:48,720 - #47 z
INFO  21:41:48,720 - #18 +
INFO  21:41:48,721 - #47 d
INFO  21:41:48,725 - #34 ;
INFO  21:41:48,726 - #43 }
INFO  21:41:48,727 - #47 int
INFO  21:41:48,729 - #47 inkrement
INFO  21:41:48,729 - #38 (
INFO  21:41:48,729 - #47 int
INFO  21:41:48,729 - #47 a
INFO  21:41:48,729 - #36 ,
INFO  21:41:48,730 - #47 int
INFO  21:41:48,730 - #47 inc
INFO  21:41:48,730 - #39 )
INFO  21:41:48,730 - #47 int
INFO  21:41:48,730 - #47 pom
INFO  21:41:48,730 - #34 ;
INFO  21:41:48,731 - #42 {
INFO  21:41:48,731 - #7 if
INFO  21:41:48,731 - #38 (
INFO  21:41:48,731 - #47 inc
INFO  21:41:48,731 - #23 ==
INFO  21:41:48,731 - #46 1
INFO  21:41:48,736 - #39 )
INFO  21:41:48,736 - #47 pom
INFO  21:41:48,737 - #31 =
INFO  21:41:48,737 - #46 1
INFO  21:41:48,737 - #34 ;
INFO  21:41:48,738 - #5 else
INFO  21:41:48,740 - #7 if
INFO  21:41:48,741 - #38 (
INFO  21:41:48,741 - #47 inc
INFO  21:41:48,741 - #23 ==
INFO  21:41:48,742 - #46 2
INFO  21:41:48,742 - #39 )
INFO  21:41:48,742 - #47 pom
INFO  21:41:48,742 - #31 =
INFO  21:41:48,743 - #47 a
INFO  21:41:48,743 - #34 ;
INFO  21:41:48,743 - #11 return
INFO  21:41:48,745 - #47 sum
INFO  21:41:48,745 - #38 (
INFO  21:41:48,745 - #47 a
INFO  21:41:48,746 - #36 ,
INFO  21:41:48,746 - #47 pom
INFO  21:41:48,746 - #39 )
INFO  21:41:48,747 - #34 ;
INFO  21:41:48,747 - #43 }
INFO  21:41:48,747 - #43 }
INFO  21:41:48,748 - #43 }
INFO  21:41:48,748 - #17 namespace
INFO  21:41:48,750 - #47 Unpacking
INFO  21:41:48,750 - #42 {
INFO  21:41:48,751 - #47 int
INFO  21:41:48,751 - #47 niz
INFO  21:41:48,751 - #40 [
INFO  21:41:48,751 - #41 ]
INFO  21:41:48,751 - #36 ,
INFO  21:41:48,751 - #47 niz2
INFO  21:41:48,751 - #40 [
INFO  21:41:48,751 - #41 ]
INFO  21:41:48,751 - #36 ,
INFO  21:41:48,752 - #47 niz3
INFO  21:41:48,752 - #40 [
INFO  21:41:48,752 - #41 ]
INFO  21:41:48,752 - #34 ;
INFO  21:41:48,752 - #47 int
INFO  21:41:48,753 - #47 a
INFO  21:41:48,753 - #36 ,
INFO  21:41:48,753 - #47 b
INFO  21:41:48,753 - #34 ;
INFO  21:41:48,754 - #42 {
INFO  21:41:48,754 - #43 }
INFO  21:41:48,756 - #43 }
INFO  21:41:48,756 - #47 int
INFO  21:41:48,757 - #47 i
INFO  21:41:48,757 - #34 ;
INFO  21:41:48,757 - #47 bool
INFO  21:41:48,758 - #47 ibool
INFO  21:41:48,758 - #34 ;
INFO  21:41:48,758 - #47 int
INFO  21:41:48,758 - #47 niz2
INFO  21:41:48,759 - #34 ;
INFO  21:41:48,759 - #47 int
INFO  21:41:48,759 - #47 niz
INFO  21:41:48,759 - #40 [
INFO  21:41:48,760 - #41 ]
INFO  21:41:48,760 - #34 ;
INFO  21:41:48,760 - #47 int
INFO  21:41:48,760 - #47 a
INFO  21:41:48,760 - #36 ,
INFO  21:41:48,760 - #47 curr
INFO  21:41:48,760 - #34 ;
INFO  21:41:48,760 - #42 {
INFO  21:41:48,760 - #47 bool
INFO  21:41:48,760 - #47 verify
INFO  21:41:48,760 - #38 (
INFO  21:41:48,761 - #39 )
INFO  21:41:48,761 - #42 {
INFO  21:41:48,762 - #9 print
INFO  21:41:48,762 - #38 (
INFO  21:41:48,762 - #49 v
INFO  21:41:48,762 - #39 )
INFO  21:41:48,763 - #34 ;
INFO  21:41:48,763 - #11 return
INFO  21:41:48,764 - #48 false
INFO  21:41:48,764 - #34 ;
INFO  21:41:48,764 - #43 }
INFO  21:41:48,764 - #12 void
INFO  21:41:48,764 - #47 main
INFO  21:41:48,765 - #38 (
INFO  21:41:48,766 - #39 )
INFO  21:41:48,766 - #42 {
INFO  21:41:48,766 - #7 if
INFO  21:41:48,767 - #38 (
INFO  21:41:48,767 - #46 1
INFO  21:41:48,767 - #24 !=
INFO  21:41:48,768 - #46 1
INFO  21:41:48,769 - #39 )
INFO  21:41:48,769 - #9 print
INFO  21:41:48,769 - #38 (
INFO  21:41:48,769 - #19 -
INFO  21:41:48,769 - #46 6
INFO  21:41:48,769 - #39 )
INFO  21:41:48,770 - #34 ;
INFO  21:41:48,770 - #5 else
INFO  21:41:48,770 - #9 print
INFO  21:41:48,770 - #38 (
INFO  21:41:48,770 - #46 0
INFO  21:41:48,770 - #39 )
INFO  21:41:48,770 - #34 ;
INFO  21:41:48,770 - #47 ibool
INFO  21:41:48,770 - #31 =
INFO  21:41:48,770 - #48 false
INFO  21:41:48,771 - #34 ;
INFO  21:41:48,771 - #15 for
INFO  21:41:48,771 - #38 (
INFO  21:41:48,771 - #47 i
INFO  21:41:48,771 - #31 =
INFO  21:41:48,771 - #46 0
INFO  21:41:48,771 - #34 ;
INFO  21:41:48,772 - #47 i
INFO  21:41:48,772 - #27 <
INFO  21:41:48,772 - #46 5
INFO  21:41:48,773 - #34 ;
INFO  21:41:48,774 - #47 i
INFO  21:41:48,774 - #32 ++
INFO  21:41:48,774 - #39 )
INFO  21:41:48,776 - #42 {
INFO  21:41:48,776 - #7 if
INFO  21:41:48,776 - #38 (
INFO  21:41:48,776 - #47 i
INFO  21:41:48,777 - #23 ==
INFO  21:41:48,777 - #46 2
INFO  21:41:48,777 - #39 )
INFO  21:41:48,777 - #47 ibool
INFO  21:41:48,777 - #31 =
INFO  21:41:48,777 - #48 true
INFO  21:41:48,777 - #34 ;
INFO  21:41:48,778 - #43 }
INFO  21:41:48,778 - #7 if
INFO  21:41:48,780 - #38 (
INFO  21:41:48,780 - #47 ibool
INFO  21:41:48,780 - #39 )
INFO  21:41:48,780 - #7 if
INFO  21:41:48,781 - #38 (
INFO  21:41:48,781 - #47 i
INFO  21:41:48,781 - #23 ==
INFO  21:41:48,781 - #46 5
INFO  21:41:48,781 - #39 )
INFO  21:41:48,781 - #9 print
INFO  21:41:48,781 - #38 (
INFO  21:41:48,781 - #46 1
INFO  21:41:48,781 - #39 )
INFO  21:41:48,782 - #34 ;
INFO  21:41:48,782 - #5 else
INFO  21:41:48,782 - #9 print
INFO  21:41:48,782 - #38 (
INFO  21:41:48,782 - #19 -
INFO  21:41:48,782 - #46 1
INFO  21:41:48,782 - #39 )
INFO  21:41:48,782 - #34 ;
INFO  21:41:48,782 - #47 a
INFO  21:41:48,783 - #31 =
INFO  21:41:48,784 - #46 2
INFO  21:41:48,784 - #34 ;
INFO  21:41:48,784 - #47 niz
INFO  21:41:48,784 - #31 =
INFO  21:41:48,785 - #8 new
INFO  21:41:48,785 - #47 int
INFO  21:41:48,785 - #40 [
INFO  21:41:48,785 - #46 3
INFO  21:41:48,785 - #41 ]
INFO  21:41:48,785 - #34 ;
INFO  21:41:48,785 - #47 niz
INFO  21:41:48,785 - #40 [
INFO  21:41:48,785 - #46 0
INFO  21:41:48,785 - #41 ]
INFO  21:41:48,786 - #31 =
INFO  21:41:48,786 - #46 1
INFO  21:41:48,786 - #20 *
INFO  21:41:48,786 - #47 a
INFO  21:41:48,788 - #34 ;
INFO  21:41:48,788 - #47 niz
INFO  21:41:48,788 - #40 [
INFO  21:41:48,789 - #46 1
INFO  21:41:48,789 - #41 ]
INFO  21:41:48,789 - #31 =
INFO  21:41:48,789 - #46 2
INFO  21:41:48,789 - #20 *
INFO  21:41:48,789 - #47 a
INFO  21:41:48,789 - #34 ;
INFO  21:41:48,789 - #47 niz
INFO  21:41:48,789 - #40 [
INFO  21:41:48,789 - #46 2
INFO  21:41:48,789 - #41 ]
INFO  21:41:48,790 - #31 =
INFO  21:41:48,790 - #47 Addition
INFO  21:41:48,790 - #45 ::
INFO  21:41:48,790 - #47 sum
INFO  21:41:48,790 - #38 (
INFO  21:41:48,790 - #47 niz
INFO  21:41:48,790 - #40 [
INFO  21:41:48,790 - #46 1
INFO  21:41:48,790 - #41 ]
INFO  21:41:48,790 - #36 ,
INFO  21:41:48,790 - #47 niz
INFO  21:41:48,791 - #40 [
INFO  21:41:48,791 - #46 0
INFO  21:41:48,791 - #41 ]
INFO  21:41:48,791 - #39 )
INFO  21:41:48,791 - #20 *
INFO  21:41:48,791 - #47 a
INFO  21:41:48,791 - #18 +
INFO  21:41:48,791 - #46 1
INFO  21:41:48,791 - #34 ;
INFO  21:41:48,791 - #7 if
INFO  21:41:48,791 - #38 (
INFO  21:41:48,792 - #47 verify
INFO  21:41:48,792 - #38 (
INFO  21:41:48,792 - #39 )
INFO  21:41:48,793 - #30 ||
INFO  21:41:48,793 - #47 niz
INFO  21:41:48,794 - #40 [
INFO  21:41:48,794 - #46 2
INFO  21:41:48,794 - #41 ]
INFO  21:41:48,794 - #23 ==
INFO  21:41:48,794 - #46 4
INFO  21:41:48,794 - #39 )
INFO  21:41:48,795 - #9 print
INFO  21:41:48,795 - #38 (
INFO  21:41:48,796 - #47 ord
INFO  21:41:48,796 - #38 (
INFO  21:41:48,797 - #49 A
INFO  21:41:48,797 - #39 )
INFO  21:41:48,797 - #39 )
INFO  21:41:48,797 - #34 ;
INFO  21:41:48,798 - #5 else
INFO  21:41:48,799 - #9 print
INFO  21:41:48,800 - #38 (
INFO  21:41:48,800 - #47 ord
INFO  21:41:48,801 - #38 (
INFO  21:41:48,801 - #49 a
INFO  21:41:48,802 - #39 )
INFO  21:41:48,802 - #39 )
INFO  21:41:48,802 - #34 ;
INFO  21:41:48,802 - #9 print
INFO  21:41:48,802 - #38 (
INFO  21:41:48,802 - #47 eol
INFO  21:41:48,802 - #39 )
INFO  21:41:48,803 - #34 ;
INFO  21:41:48,803 - #7 if
INFO  21:41:48,803 - #38 (
INFO  21:41:48,803 - #47 i
INFO  21:41:48,803 - #23 ==
INFO  21:41:48,803 - #46 3
INFO  21:41:48,803 - #29 &&
INFO  21:41:48,803 - #47 verify
INFO  21:41:48,803 - #38 (
INFO  21:41:48,804 - #39 )
INFO  21:41:48,804 - #39 )
INFO  21:41:48,804 - #9 print
INFO  21:41:48,804 - #38 (
INFO  21:41:48,804 - #19 -
INFO  21:41:48,805 - #46 4
INFO  21:41:48,805 - #39 )
INFO  21:41:48,805 - #34 ;
INFO  21:41:48,805 - #5 else
INFO  21:41:48,805 - #9 print
INFO  21:41:48,805 - #38 (
INFO  21:41:48,805 - #46 4
INFO  21:41:48,805 - #39 )
INFO  21:41:48,805 - #34 ;
INFO  21:41:48,805 - #10 read
INFO  21:41:48,805 - #38 (
INFO  21:41:48,805 - #47 niz
INFO  21:41:48,806 - #40 [
INFO  21:41:48,806 - #46 0
INFO  21:41:48,806 - #41 ]
INFO  21:41:48,806 - #39 )
INFO  21:41:48,806 - #34 ;
INFO  21:41:48,806 - #10 read
INFO  21:41:48,809 - #38 (
INFO  21:41:48,809 - #47 niz
INFO  21:41:48,809 - #40 [
INFO  21:41:48,810 - #46 1
INFO  21:41:48,810 - #41 ]
INFO  21:41:48,810 - #39 )
INFO  21:41:48,810 - #34 ;
INFO  21:41:48,810 - #10 read
INFO  21:41:48,810 - #38 (
INFO  21:41:48,810 - #47 niz
INFO  21:41:48,810 - #40 [
INFO  21:41:48,810 - #46 2
INFO  21:41:48,810 - #41 ]
INFO  21:41:48,810 - #39 )
INFO  21:41:48,810 - #34 ;
INFO  21:41:48,810 - #9 print
INFO  21:41:48,810 - #38 (
INFO  21:41:48,810 - #47 eol
INFO  21:41:48,811 - #39 )
INFO  21:41:48,811 - #34 ;
INFO  21:41:48,811 - #43 }
INFO  21:41:48,811 - #43 }
INFO  21:41:48,830 - Program(
  ProgName(
   test302
  ) [ProgName]
  NamespaceList(
    NamespaceList(
      NoNamespaceList(
      ) [NoNamespaceList]
      Namespace(
        NamespaceName(
         Addition
        ) [NamespaceName]
        NoNamespaceDecls(
        ) [NoNamespaceDecls]
        MethodDeclarations(
          MethodDeclarations(
            NoMethodDecl(
            ) [NoMethodDecl]
            MethodDecl(
              MethodTypeName(
                MethRetType(
                  Type(
                   int
                  ) [Type]
                ) [MethRetType]
               sum
              ) [MethodTypeName]
              FormParams(
                FormCommaParamDecl(
                  FormParamDecl(
                    FormParamVar(
                      Type(
                       int
                      ) [Type]
                     z
                    ) [FormParamVar]
                  ) [FormParamDecl]
                  FormParamVar(
                    Type(
                     int
                    ) [Type]
                   d
                  ) [FormParamVar]
                ) [FormCommaParamDecl]
              ) [FormParams]
              NoMethVar(
              ) [NoMethVar]
              Statements(
                NoStmt(
                ) [NoStmt]
                ReturnExpr(
                  AddExpr(
                    PosTermExpr(
                      FactorTerm(
                        VarFactor(
                          DesigVar(
                           z
                          ) [DesigVar]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [PosTermExpr]
                    Add(
                    ) [Add]
                    FactorTerm(
                      VarFactor(
                        DesigVar(
                         d
                        ) [DesigVar]
                      ) [VarFactor]
                    ) [FactorTerm]
                  ) [AddExpr]
                ) [ReturnExpr]
              ) [Statements]
            ) [MethodDecl]
          ) [MethodDeclarations]
          MethodDecl(
            MethodTypeName(
              MethRetType(
                Type(
                 int
                ) [Type]
              ) [MethRetType]
             inkrement
            ) [MethodTypeName]
            FormParams(
              FormCommaParamDecl(
                FormParamDecl(
                  FormParamVar(
                    Type(
                     int
                    ) [Type]
                   a
                  ) [FormParamVar]
                ) [FormParamDecl]
                FormParamVar(
                  Type(
                   int
                  ) [Type]
                 inc
                ) [FormParamVar]
              ) [FormCommaParamDecl]
            ) [FormParams]
            MethodVars(
              NoMethVar(
              ) [NoMethVar]
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarNameDecl(
                 pom
                ) [VarNameDecl]
              ) [SingleVarDecl]
            ) [MethodVars]
            Statements(
              Statements(
                NoStmt(
                ) [NoStmt]
                IfElseStmt(
                  ConditionCondTerm(
                    CondTermFact(
                      RelOpCondFact(
                        PosTermExpr(
                          FactorTerm(
                            VarFactor(
                              DesigVar(
                               inc
                              ) [DesigVar]
                            ) [VarFactor]
                          ) [FactorTerm]
                        ) [PosTermExpr]
                        EqlOp(
                        ) [EqlOp]
                        PosTermExpr(
                          FactorTerm(
                            NumFactor(
                             1
                            ) [NumFactor]
                          ) [FactorTerm]
                        ) [PosTermExpr]
                      ) [RelOpCondFact]
                    ) [CondTermFact]
                  ) [ConditionCondTerm]
                  IfStatement(
                    DesignatorStmt(
                      DesigStmtActions(
                        DesigVar(
                         pom
                        ) [DesigVar]
                        AssignExpr(
                          PosTermExpr(
                            FactorTerm(
                              NumFactor(
                               1
                              ) [NumFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [AssignExpr]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [IfStatement]
                  ElseStatement(
                    IfStmt(
                      ConditionCondTerm(
                        CondTermFact(
                          RelOpCondFact(
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  DesigVar(
                                   inc
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                            EqlOp(
                            ) [EqlOp]
                            PosTermExpr(
                              FactorTerm(
                                NumFactor(
                                 2
                                ) [NumFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                          ) [RelOpCondFact]
                        ) [CondTermFact]
                      ) [ConditionCondTerm]
                      IfStatement(
                        DesignatorStmt(
                          DesigStmtActions(
                            DesigVar(
                             pom
                            ) [DesigVar]
                            AssignExpr(
                              PosTermExpr(
                                FactorTerm(
                                  VarFactor(
                                    DesigVar(
                                     a
                                    ) [DesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                              ) [PosTermExpr]
                            ) [AssignExpr]
                          ) [DesigStmtActions]
                        ) [DesignatorStmt]
                      ) [IfStatement]
                    ) [IfStmt]
                  ) [ElseStatement]
                ) [IfElseStmt]
              ) [Statements]
              ReturnExpr(
                PosTermExpr(
                  FactorTerm(
                    FactorFuncCall(
                      DesigVar(
                       sum
                      ) [DesigVar]
                      ActPars(
                        ActualParamsList(
                          ActualParam(
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  DesigVar(
                                   a
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                          ) [ActualParam]
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 pom
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ActualParamsList]
                      ) [ActPars]
                    ) [FactorFuncCall]
                  ) [FactorTerm]
                ) [PosTermExpr]
              ) [ReturnExpr]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDeclarations]
      ) [Namespace]
    ) [NamespaceList]
    Namespace(
      NamespaceName(
       Unpacking
      ) [NamespaceName]
      NamespaceDecls(
        NamespaceDecls(
          NoNamespaceDecls(
          ) [NoNamespaceDecls]
          NamespaceVarDecl(
            Type(
             int
            ) [Type]
            MultipleVarDecls(
              MultipleVarDecls(
                SingleVarDecl(
                  VarArrayNameDecl(
                   niz
                  ) [VarArrayNameDecl]
                ) [SingleVarDecl]
                VarArrayNameDecl(
                 niz2
                ) [VarArrayNameDecl]
              ) [MultipleVarDecls]
              VarArrayNameDecl(
               niz3
              ) [VarArrayNameDecl]
            ) [MultipleVarDecls]
          ) [NamespaceVarDecl]
        ) [NamespaceDecls]
        NamespaceVarDecl(
          Type(
           int
          ) [Type]
          MultipleVarDecls(
            SingleVarDecl(
              VarNameDecl(
               a
              ) [VarNameDecl]
            ) [SingleVarDecl]
            VarNameDecl(
             b
            ) [VarNameDecl]
          ) [MultipleVarDecls]
        ) [NamespaceVarDecl]
      ) [NamespaceDecls]
      NoMethodDecl(
      ) [NoMethodDecl]
    ) [Namespace]
  ) [NamespaceList]
  ProgramDecls(
    ProgramDecls(
      ProgramDecls(
        ProgramDecls(
          ProgramDecls(
            NoProgramDecls(
            ) [NoProgramDecls]
            ProgramVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarNameDecl(
                 i
                ) [VarNameDecl]
              ) [SingleVarDecl]
            ) [ProgramVarDecl]
          ) [ProgramDecls]
          ProgramVarDecl(
            Type(
             bool
            ) [Type]
            SingleVarDecl(
              VarNameDecl(
               ibool
              ) [VarNameDecl]
            ) [SingleVarDecl]
          ) [ProgramVarDecl]
        ) [ProgramDecls]
        ProgramVarDecl(
          Type(
           int
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             niz2
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [ProgramVarDecl]
      ) [ProgramDecls]
      ProgramVarDecl(
        Type(
         int
        ) [Type]
        SingleVarDecl(
          VarArrayNameDecl(
           niz
          ) [VarArrayNameDecl]
        ) [SingleVarDecl]
      ) [ProgramVarDecl]
    ) [ProgramDecls]
    ProgramVarDecl(
      Type(
       int
      ) [Type]
      MultipleVarDecls(
        SingleVarDecl(
          VarNameDecl(
           a
          ) [VarNameDecl]
        ) [SingleVarDecl]
        VarNameDecl(
         curr
        ) [VarNameDecl]
      ) [MultipleVarDecls]
    ) [ProgramVarDecl]
  ) [ProgramDecls]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          MethRetType(
            Type(
             bool
            ) [Type]
          ) [MethRetType]
         verify
        ) [MethodTypeName]
        NoFormParam(
        ) [NoFormParam]
        NoMethVar(
        ) [NoMethVar]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            PrintStmt(
              PosTermExpr(
                FactorTerm(
                  CharFactor(
                   v
                  ) [CharFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
              NoPrintVar(
              ) [NoPrintVar]
            ) [PrintStmt]
          ) [Statements]
          ReturnExpr(
            PosTermExpr(
              FactorTerm(
                BoolFactor(
                 false
                ) [BoolFactor]
              ) [FactorTerm]
            ) [PosTermExpr]
          ) [ReturnExpr]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        MethRetVoid(
        ) [MethRetVoid]
       main
      ) [MethodTypeName]
      NoFormParam(
      ) [NoFormParam]
      NoMethVar(
      ) [NoMethVar]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      NoStmt(
                                      ) [NoStmt]
                                      IfElseStmt(
                                        ConditionCondTerm(
                                          CondTermFact(
                                            RelOpCondFact(
                                              PosTermExpr(
                                                FactorTerm(
                                                  NumFactor(
                                                   1
                                                  ) [NumFactor]
                                                ) [FactorTerm]
                                              ) [PosTermExpr]
                                              NotEqlOp(
                                              ) [NotEqlOp]
                                              PosTermExpr(
                                                FactorTerm(
                                                  NumFactor(
                                                   1
                                                  ) [NumFactor]
                                                ) [FactorTerm]
                                              ) [PosTermExpr]
                                            ) [RelOpCondFact]
                                          ) [CondTermFact]
                                        ) [ConditionCondTerm]
                                        IfStatement(
                                          PrintStmt(
                                            NegTermExpr(
                                              FactorTerm(
                                                NumFactor(
                                                 6
                                                ) [NumFactor]
                                              ) [FactorTerm]
                                            ) [NegTermExpr]
                                            NoPrintVar(
                                            ) [NoPrintVar]
                                          ) [PrintStmt]
                                        ) [IfStatement]
                                        ElseStatement(
                                          PrintStmt(
                                            PosTermExpr(
                                              FactorTerm(
                                                NumFactor(
                                                 0
                                                ) [NumFactor]
                                              ) [FactorTerm]
                                            ) [PosTermExpr]
                                            NoPrintVar(
                                            ) [NoPrintVar]
                                          ) [PrintStmt]
                                        ) [ElseStatement]
                                      ) [IfElseStmt]
                                    ) [Statements]
                                    DesignatorStmt(
                                      DesigStmtActions(
                                        DesigVar(
                                         ibool
                                        ) [DesigVar]
                                        AssignExpr(
                                          PosTermExpr(
                                            FactorTerm(
                                              BoolFactor(
                                               false
                                              ) [BoolFactor]
                                            ) [FactorTerm]
                                          ) [PosTermExpr]
                                        ) [AssignExpr]
                                      ) [DesigStmtActions]
                                    ) [DesignatorStmt]
                                  ) [Statements]
                                  ForLoop(
                                    ForDesigStmts(
                                      SingleDesignatorStmt(
                                        DesigStmtActions(
                                          DesigVar(
                                           i
                                          ) [DesigVar]
                                          AssignExpr(
                                            PosTermExpr(
                                              FactorTerm(
                                                NumFactor(
                                                 0
                                                ) [NumFactor]
                                              ) [FactorTerm]
                                            ) [PosTermExpr]
                                          ) [AssignExpr]
                                        ) [DesigStmtActions]
                                      ) [SingleDesignatorStmt]
                                    ) [ForDesigStmts]
                                    ForCondFactExpr(
                                      RelOpCondFact(
                                        PosTermExpr(
                                          FactorTerm(
                                            VarFactor(
                                              DesigVar(
                                               i
                                              ) [DesigVar]
                                            ) [VarFactor]
                                          ) [FactorTerm]
                                        ) [PosTermExpr]
                                        LssOp(
                                        ) [LssOp]
                                        PosTermExpr(
                                          FactorTerm(
                                            NumFactor(
                                             5
                                            ) [NumFactor]
                                          ) [FactorTerm]
                                        ) [PosTermExpr]
                                      ) [RelOpCondFact]
                                    ) [ForCondFactExpr]
                                    ForLoopStmts(
                                      ForDesigStmts(
                                        SingleDesignatorStmt(
                                          DesigStmtActions(
                                            DesigVar(
                                             i
                                            ) [DesigVar]
                                            DesigInc(
                                            ) [DesigInc]
                                          ) [DesigStmtActions]
                                        ) [SingleDesignatorStmt]
                                      ) [ForDesigStmts]
                                    ) [ForLoopStmts]
                                    ForLoopBody(
                                      ComplexStm(
                                        Statements(
                                          NoStmt(
                                          ) [NoStmt]
                                          IfStmt(
                                            ConditionCondTerm(
                                              CondTermFact(
                                                RelOpCondFact(
                                                  PosTermExpr(
                                                    FactorTerm(
                                                      VarFactor(
                                                        DesigVar(
                                                         i
                                                        ) [DesigVar]
                                                      ) [VarFactor]
                                                    ) [FactorTerm]
                                                  ) [PosTermExpr]
                                                  EqlOp(
                                                  ) [EqlOp]
                                                  PosTermExpr(
                                                    FactorTerm(
                                                      NumFactor(
                                                       2
                                                      ) [NumFactor]
                                                    ) [FactorTerm]
                                                  ) [PosTermExpr]
                                                ) [RelOpCondFact]
                                              ) [CondTermFact]
                                            ) [ConditionCondTerm]
                                            IfStatement(
                                              DesignatorStmt(
                                                DesigStmtActions(
                                                  DesigVar(
                                                   ibool
                                                  ) [DesigVar]
                                                  AssignExpr(
                                                    PosTermExpr(
                                                      FactorTerm(
                                                        BoolFactor(
                                                         true
                                                        ) [BoolFactor]
                                                      ) [FactorTerm]
                                                    ) [PosTermExpr]
                                                  ) [AssignExpr]
                                                ) [DesigStmtActions]
                                              ) [DesignatorStmt]
                                            ) [IfStatement]
                                          ) [IfStmt]
                                        ) [Statements]
                                      ) [ComplexStm]
                                    ) [ForLoopBody]
                                  ) [ForLoop]
                                ) [Statements]
                                IfStmt(
                                  ConditionCondTerm(
                                    CondTermFact(
                                      CondFactExpr(
                                        PosTermExpr(
                                          FactorTerm(
                                            VarFactor(
                                              DesigVar(
                                               ibool
                                              ) [DesigVar]
                                            ) [VarFactor]
                                          ) [FactorTerm]
                                        ) [PosTermExpr]
                                      ) [CondFactExpr]
                                    ) [CondTermFact]
                                  ) [ConditionCondTerm]
                                  IfStatement(
                                    IfElseStmt(
                                      ConditionCondTerm(
                                        CondTermFact(
                                          RelOpCondFact(
                                            PosTermExpr(
                                              FactorTerm(
                                                VarFactor(
                                                  DesigVar(
                                                   i
                                                  ) [DesigVar]
                                                ) [VarFactor]
                                              ) [FactorTerm]
                                            ) [PosTermExpr]
                                            EqlOp(
                                            ) [EqlOp]
                                            PosTermExpr(
                                              FactorTerm(
                                                NumFactor(
                                                 5
                                                ) [NumFactor]
                                              ) [FactorTerm]
                                            ) [PosTermExpr]
                                          ) [RelOpCondFact]
                                        ) [CondTermFact]
                                      ) [ConditionCondTerm]
                                      IfStatement(
                                        PrintStmt(
                                          PosTermExpr(
                                            FactorTerm(
                                              NumFactor(
                                               1
                                              ) [NumFactor]
                                            ) [FactorTerm]
                                          ) [PosTermExpr]
                                          NoPrintVar(
                                          ) [NoPrintVar]
                                        ) [PrintStmt]
                                      ) [IfStatement]
                                      ElseStatement(
                                        PrintStmt(
                                          NegTermExpr(
                                            FactorTerm(
                                              NumFactor(
                                               1
                                              ) [NumFactor]
                                            ) [FactorTerm]
                                          ) [NegTermExpr]
                                          NoPrintVar(
                                          ) [NoPrintVar]
                                        ) [PrintStmt]
                                      ) [ElseStatement]
                                    ) [IfElseStmt]
                                  ) [IfStatement]
                                ) [IfStmt]
                              ) [Statements]
                              DesignatorStmt(
                                DesigStmtActions(
                                  DesigVar(
                                   a
                                  ) [DesigVar]
                                  AssignExpr(
                                    PosTermExpr(
                                      FactorTerm(
                                        NumFactor(
                                         2
                                        ) [NumFactor]
                                      ) [FactorTerm]
                                    ) [PosTermExpr]
                                  ) [AssignExpr]
                                ) [DesigStmtActions]
                              ) [DesignatorStmt]
                            ) [Statements]
                            DesignatorStmt(
                              DesigStmtActions(
                                DesigVar(
                                 niz
                                ) [DesigVar]
                                AssignExpr(
                                  PosTermExpr(
                                    FactorTerm(
                                      NewFactor(
                                        Type(
                                         int
                                        ) [Type]
                                        PosTermExpr(
                                          FactorTerm(
                                            NumFactor(
                                             3
                                            ) [NumFactor]
                                          ) [FactorTerm]
                                        ) [PosTermExpr]
                                      ) [NewFactor]
                                    ) [FactorTerm]
                                  ) [PosTermExpr]
                                ) [AssignExpr]
                              ) [DesigStmtActions]
                            ) [DesignatorStmt]
                          ) [Statements]
                          DesignatorStmt(
                            DesigStmtActions(
                              DesigArrayElem(
                               niz
                                PosTermExpr(
                                  FactorTerm(
                                    NumFactor(
                                     0
                                    ) [NumFactor]
                                  ) [FactorTerm]
                                ) [PosTermExpr]
                              ) [DesigArrayElem]
                              AssignExpr(
                                PosTermExpr(
                                  MulTerm(
                                    FactorTerm(
                                      NumFactor(
                                       1
                                      ) [NumFactor]
                                    ) [FactorTerm]
                                    Mul(
                                    ) [Mul]
                                    VarFactor(
                                      DesigVar(
                                       a
                                      ) [DesigVar]
                                    ) [VarFactor]
                                  ) [MulTerm]
                                ) [PosTermExpr]
                              ) [AssignExpr]
                            ) [DesigStmtActions]
                          ) [DesignatorStmt]
                        ) [Statements]
                        DesignatorStmt(
                          DesigStmtActions(
                            DesigArrayElem(
                             niz
                              PosTermExpr(
                                FactorTerm(
                                  NumFactor(
                                   1
                                  ) [NumFactor]
                                ) [FactorTerm]
                              ) [PosTermExpr]
                            ) [DesigArrayElem]
                            AssignExpr(
                              PosTermExpr(
                                MulTerm(
                                  FactorTerm(
                                    NumFactor(
                                     2
                                    ) [NumFactor]
                                  ) [FactorTerm]
                                  Mul(
                                  ) [Mul]
                                  VarFactor(
                                    DesigVar(
                                     a
                                    ) [DesigVar]
                                  ) [VarFactor]
                                ) [MulTerm]
                              ) [PosTermExpr]
                            ) [AssignExpr]
                          ) [DesigStmtActions]
                        ) [DesignatorStmt]
                      ) [Statements]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigArrayElem(
                           niz
                            PosTermExpr(
                              FactorTerm(
                                NumFactor(
                                 2
                                ) [NumFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                          ) [DesigArrayElem]
                          AssignExpr(
                            AddExpr(
                              PosTermExpr(
                                MulTerm(
                                  FactorTerm(
                                    FactorFuncCall(
                                      ScopeDesigVar(
                                       Addition
                                       sum
                                      ) [ScopeDesigVar]
                                      ActPars(
                                        ActualParamsList(
                                          ActualParam(
                                            PosTermExpr(
                                              FactorTerm(
                                                VarFactor(
                                                  DesigArrayElem(
                                                   niz
                                                    PosTermExpr(
                                                      FactorTerm(
                                                        NumFactor(
                                                         1
                                                        ) [NumFactor]
                                                      ) [FactorTerm]
                                                    ) [PosTermExpr]
                                                  ) [DesigArrayElem]
                                                ) [VarFactor]
                                              ) [FactorTerm]
                                            ) [PosTermExpr]
                                          ) [ActualParam]
                                          PosTermExpr(
                                            FactorTerm(
                                              VarFactor(
                                                DesigArrayElem(
                                                 niz
                                                  PosTermExpr(
                                                    FactorTerm(
                                                      NumFactor(
                                                       0
                                                      ) [NumFactor]
                                                    ) [FactorTerm]
                                                  ) [PosTermExpr]
                                                ) [DesigArrayElem]
                                              ) [VarFactor]
                                            ) [FactorTerm]
                                          ) [PosTermExpr]
                                        ) [ActualParamsList]
                                      ) [ActPars]
                                    ) [FactorFuncCall]
                                  ) [FactorTerm]
                                  Mul(
                                  ) [Mul]
                                  VarFactor(
                                    DesigVar(
                                     a
                                    ) [DesigVar]
                                  ) [VarFactor]
                                ) [MulTerm]
                              ) [PosTermExpr]
                              Add(
                              ) [Add]
                              FactorTerm(
                                NumFactor(
                                 1
                                ) [NumFactor]
                              ) [FactorTerm]
                            ) [AddExpr]
                          ) [AssignExpr]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    IfElseStmt(
                      OrCondition(
                        ConditionCondTerm(
                          CondTermFact(
                            CondFactExpr(
                              PosTermExpr(
                                FactorTerm(
                                  FactorFuncCall(
                                    DesigVar(
                                     verify
                                    ) [DesigVar]
                                    NoActPars(
                                    ) [NoActPars]
                                  ) [FactorFuncCall]
                                ) [FactorTerm]
                              ) [PosTermExpr]
                            ) [CondFactExpr]
                          ) [CondTermFact]
                        ) [ConditionCondTerm]
                        CondTermFact(
                          RelOpCondFact(
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  DesigArrayElem(
                                   niz
                                    PosTermExpr(
                                      FactorTerm(
                                        NumFactor(
                                         2
                                        ) [NumFactor]
                                      ) [FactorTerm]
                                    ) [PosTermExpr]
                                  ) [DesigArrayElem]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                            EqlOp(
                            ) [EqlOp]
                            PosTermExpr(
                              FactorTerm(
                                NumFactor(
                                 4
                                ) [NumFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                          ) [RelOpCondFact]
                        ) [CondTermFact]
                      ) [OrCondition]
                      IfStatement(
                        PrintStmt(
                          PosTermExpr(
                            FactorTerm(
                              FactorFuncCall(
                                DesigVar(
                                 ord
                                ) [DesigVar]
                                ActPars(
                                  ActualParam(
                                    PosTermExpr(
                                      FactorTerm(
                                        CharFactor(
                                         A
                                        ) [CharFactor]
                                      ) [FactorTerm]
                                    ) [PosTermExpr]
                                  ) [ActualParam]
                                ) [ActPars]
                              ) [FactorFuncCall]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                          NoPrintVar(
                          ) [NoPrintVar]
                        ) [PrintStmt]
                      ) [IfStatement]
                      ElseStatement(
                        PrintStmt(
                          PosTermExpr(
                            FactorTerm(
                              FactorFuncCall(
                                DesigVar(
                                 ord
                                ) [DesigVar]
                                ActPars(
                                  ActualParam(
                                    PosTermExpr(
                                      FactorTerm(
                                        CharFactor(
                                         a
                                        ) [CharFactor]
                                      ) [FactorTerm]
                                    ) [PosTermExpr]
                                  ) [ActualParam]
                                ) [ActPars]
                              ) [FactorFuncCall]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                          NoPrintVar(
                          ) [NoPrintVar]
                        ) [PrintStmt]
                      ) [ElseStatement]
                    ) [IfElseStmt]
                  ) [Statements]
                  PrintStmt(
                    PosTermExpr(
                      FactorTerm(
                        VarFactor(
                          DesigVar(
                           eol
                          ) [DesigVar]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [PosTermExpr]
                    NoPrintVar(
                    ) [NoPrintVar]
                  ) [PrintStmt]
                ) [Statements]
                IfElseStmt(
                  ConditionCondTerm(
                    AndCondTerm(
                      CondTermFact(
                        RelOpCondFact(
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 i
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                          EqlOp(
                          ) [EqlOp]
                          PosTermExpr(
                            FactorTerm(
                              NumFactor(
                               3
                              ) [NumFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [RelOpCondFact]
                      ) [CondTermFact]
                      CondFactExpr(
                        PosTermExpr(
                          FactorTerm(
                            FactorFuncCall(
                              DesigVar(
                               verify
                              ) [DesigVar]
                              NoActPars(
                              ) [NoActPars]
                            ) [FactorFuncCall]
                          ) [FactorTerm]
                        ) [PosTermExpr]
                      ) [CondFactExpr]
                    ) [AndCondTerm]
                  ) [ConditionCondTerm]
                  IfStatement(
                    PrintStmt(
                      NegTermExpr(
                        FactorTerm(
                          NumFactor(
                           4
                          ) [NumFactor]
                        ) [FactorTerm]
                      ) [NegTermExpr]
                      NoPrintVar(
                      ) [NoPrintVar]
                    ) [PrintStmt]
                  ) [IfStatement]
                  ElseStatement(
                    PrintStmt(
                      PosTermExpr(
                        FactorTerm(
                          NumFactor(
                           4
                          ) [NumFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                      NoPrintVar(
                      ) [NoPrintVar]
                    ) [PrintStmt]
                  ) [ElseStatement]
                ) [IfElseStmt]
              ) [Statements]
              ReadExpr(
                DesigArrayElem(
                 niz
                  PosTermExpr(
                    FactorTerm(
                      NumFactor(
                       0
                      ) [NumFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                ) [DesigArrayElem]
              ) [ReadExpr]
            ) [Statements]
            ReadExpr(
              DesigArrayElem(
               niz
                PosTermExpr(
                  FactorTerm(
                    NumFactor(
                     1
                    ) [NumFactor]
                  ) [FactorTerm]
                ) [PosTermExpr]
              ) [DesigArrayElem]
            ) [ReadExpr]
          ) [Statements]
          ReadExpr(
            DesigArrayElem(
             niz
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   2
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [DesigArrayElem]
          ) [ReadExpr]
        ) [Statements]
        PrintStmt(
          PosTermExpr(
            FactorTerm(
              VarFactor(
                DesigVar(
                 eol
                ) [DesigVar]
              ) [VarFactor]
            ) [FactorTerm]
          ) [PosTermExpr]
          NoPrintVar(
          ) [NoPrintVar]
        ) [PrintStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:41:48,845 - Obradjuje se funkcija sum na liniji 9
INFO  21:41:48,846 - Deklarisan parametar z metode: Addition::sum. na liniji 9
INFO  21:41:48,846 - Deklarisan parametar d metode: Addition::sum. na liniji 9
INFO  21:41:48,846 - Obradjuje se funkcija inkrement na liniji 15
INFO  21:41:48,846 - Deklarisan parametar a metode: Addition::inkrement. na liniji 15
INFO  21:41:48,846 - Deklarisan parametar inc metode: Addition::inkrement. na liniji 15
INFO  21:41:48,847 - Deklarisana promenljiva Addition::pom na liniji 16
INFO  21:41:48,868 - Deklarisana promenljiva Unpacking::niz na liniji 28
INFO  21:41:48,870 - Deklarisana promenljiva Unpacking::niz2 na liniji 28
INFO  21:41:48,871 - Deklarisana promenljiva Unpacking::niz3 na liniji 28
INFO  21:41:48,871 - Deklarisana promenljiva Unpacking::a na liniji 29
INFO  21:41:48,871 - Deklarisana promenljiva Unpacking::b na liniji 29
INFO  21:41:48,872 - Deklarisana promenljiva i na liniji 34
INFO  21:41:48,872 - Deklarisana promenljiva ibool na liniji 35
INFO  21:41:48,873 - Deklarisana promenljiva niz2 na liniji 37
INFO  21:41:48,873 - Deklarisana promenljiva niz na liniji 39
INFO  21:41:48,873 - Deklarisana promenljiva a na liniji 40
INFO  21:41:48,873 - Deklarisana promenljiva curr na liniji 40
INFO  21:41:48,873 - Obradjuje se funkcija verify na liniji 45
INFO  21:41:48,874 - Obradjuje se funkcija main na liniji 50
INFO  21:41:48,874 - Obradjuje se for petlja na liniji: 57 na liniji 57
INFO  21:41:48,875 - Pretraga na 66(niz), nadjeno Var niz: Arr of int, 8, 0  na liniji 66
INFO  21:41:48,875 - Pretraga na 67(niz), nadjeno Var niz: Arr of int, 8, 0  na liniji 67
INFO  21:41:48,876 - Pretraga na 68(niz), nadjeno Var niz: Arr of int, 8, 0  na liniji 68
INFO  21:41:48,876 - Pretraga na 68(niz), nadjeno Var niz: Arr of int, 8, 0  na liniji 68
INFO  21:41:48,876 - Pretraga na 68(niz), nadjeno Var niz: Arr of int, 8, 0  na liniji 68
INFO  21:41:48,876 - Pretraga na 69(niz), nadjeno Var niz: Arr of int, 8, 0  na liniji 69
INFO  21:41:48,877 - Pretraga na 77(niz), nadjeno Var niz: Arr of int, 8, 0  na liniji 77
INFO  21:41:48,877 - Pretraga na 78(niz), nadjeno Var niz: Arr of int, 8, 0  na liniji 78
INFO  21:41:48,877 - Pretraga na 79(niz), nadjeno Var niz: Arr of int, 8, 0  na liniji 79
INFO  21:41:48,878 -  Print count calls = 0
INFO  21:41:48,878 -  Deklarisanih promenljivih ima = 0
INFO  21:41:48,901 - Uspesna semanticka analiza!!
