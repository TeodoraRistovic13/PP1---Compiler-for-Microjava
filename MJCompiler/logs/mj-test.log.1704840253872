INFO  23:41:50,802 - Compiling source file: C:\Users\Zoki\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:41:51,042 - #2 program
INFO  23:41:51,042 - #47 test302
INFO  23:41:51,042 - #17 namespace
INFO  23:41:51,046 - #47 Unpacking
INFO  23:41:51,047 - #42 {
INFO  23:41:51,049 - #47 int
INFO  23:41:51,051 - #47 a
INFO  23:41:51,055 - #36 ,
INFO  23:41:51,056 - #47 b
INFO  23:41:51,056 - #34 ;
INFO  23:41:51,057 - #47 int
INFO  23:41:51,058 - #47 niz
INFO  23:41:51,059 - #40 [
INFO  23:41:51,059 - #41 ]
INFO  23:41:51,059 - #34 ;
INFO  23:41:51,060 - #47 int
INFO  23:41:51,061 - #47 arr
INFO  23:41:51,061 - #40 [
INFO  23:41:51,062 - #41 ]
INFO  23:41:51,062 - #34 ;
INFO  23:41:51,062 - #47 bool
INFO  23:41:51,065 - #47 buarr
INFO  23:41:51,065 - #40 [
INFO  23:41:51,065 - #41 ]
INFO  23:41:51,065 - #34 ;
INFO  23:41:51,066 - #42 {
INFO  23:41:51,066 - #47 int
INFO  23:41:51,070 - #47 main
INFO  23:41:51,072 - #38 (
INFO  23:41:51,075 - #39 )
INFO  23:41:51,077 - #42 {
INFO  23:41:51,080 - #11 return
INFO  23:41:51,082 - #46 2
INFO  23:41:51,082 - #34 ;
INFO  23:41:51,083 - #43 }
INFO  23:41:51,086 - #43 }
INFO  23:41:51,090 - #43 }
INFO  23:41:51,090 - #47 int
INFO  23:41:51,096 - #47 nizic
INFO  23:41:51,097 - #40 [
INFO  23:41:51,098 - #41 ]
INFO  23:41:51,098 - #34 ;
INFO  23:41:51,102 - #6 const
INFO  23:41:51,103 - #47 bool
INFO  23:41:51,103 - #47 ok
INFO  23:41:51,104 - #31 =
INFO  23:41:51,105 - #48 false
INFO  23:41:51,105 - #34 ;
INFO  23:41:51,109 - #47 bool
INFO  23:41:51,111 - #47 pokusaj
INFO  23:41:51,112 - #34 ;
INFO  23:41:51,114 - #47 int
INFO  23:41:51,114 - #47 dd
INFO  23:41:51,114 - #34 ;
INFO  23:41:51,115 - #47 char
INFO  23:41:51,115 - #47 slovo
INFO  23:41:51,115 - #34 ;
INFO  23:41:51,118 - #42 {
INFO  23:41:51,118 - #12 void
INFO  23:41:51,119 - #47 funkcija
INFO  23:41:51,123 - #38 (
INFO  23:41:51,124 - #39 )
INFO  23:41:51,124 - #47 int
INFO  23:41:51,126 - #47 c
INFO  23:41:51,127 - #36 ,
INFO  23:41:51,127 - #47 d
INFO  23:41:51,127 - #34 ;
INFO  23:41:51,127 - #42 {
INFO  23:41:51,128 - #47 nizic
INFO  23:41:51,128 - #40 [
INFO  23:41:51,128 - #46 3
INFO  23:41:51,129 - #41 ]
INFO  23:41:51,129 - #32 ++
INFO  23:41:51,129 - #34 ;
INFO  23:41:51,132 - #47 nizic
INFO  23:41:51,132 - #40 [
INFO  23:41:51,132 - #46 3
INFO  23:41:51,132 - #41 ]
INFO  23:41:51,133 - #33 --
INFO  23:41:51,133 - #34 ;
INFO  23:41:51,136 - #47 dd
INFO  23:41:51,136 - #32 ++
INFO  23:41:51,136 - #34 ;
INFO  23:41:51,137 - #47 dd
INFO  23:41:51,138 - #33 --
INFO  23:41:51,138 - #34 ;
INFO  23:41:51,140 - #47 Unpacking
INFO  23:41:51,141 - #45 ::
INFO  23:41:51,141 - #47 niz
INFO  23:41:51,141 - #40 [
INFO  23:41:51,141 - #47 dd
INFO  23:41:51,141 - #41 ]
INFO  23:41:51,143 - #32 ++
INFO  23:41:51,144 - #34 ;
INFO  23:41:51,144 - #10 read
INFO  23:41:51,144 - #38 (
INFO  23:41:51,144 - #47 pokusaj
INFO  23:41:51,145 - #39 )
INFO  23:41:51,145 - #34 ;
INFO  23:41:51,146 - #10 read
INFO  23:41:51,147 - #38 (
INFO  23:41:51,148 - #47 Unpacking
INFO  23:41:51,148 - #45 ::
INFO  23:41:51,148 - #47 a
INFO  23:41:51,148 - #39 )
INFO  23:41:51,149 - #34 ;
INFO  23:41:51,152 - #9 print
INFO  23:41:51,152 - #38 (
INFO  23:41:51,152 - #46 3
INFO  23:41:51,152 - #36 ,
INFO  23:41:51,153 - #46 2
INFO  23:41:51,153 - #39 )
INFO  23:41:51,153 - #34 ;
INFO  23:41:51,154 - #43 }
INFO  23:41:51,155 - #47 bool
INFO  23:41:51,156 - #47 testtest
INFO  23:41:51,157 - #38 (
INFO  23:41:51,157 - #47 int
INFO  23:41:51,158 - #47 param1
INFO  23:41:51,158 - #36 ,
INFO  23:41:51,159 - #47 int
INFO  23:41:51,160 - #47 param2
INFO  23:41:51,160 - #36 ,
INFO  23:41:51,161 - #47 char
INFO  23:41:51,161 - #47 param3
INFO  23:41:51,161 - #39 )
INFO  23:41:51,162 - #47 bool
INFO  23:41:51,163 - #47 c
INFO  23:41:51,163 - #36 ,
INFO  23:41:51,163 - #47 d
INFO  23:41:51,164 - #34 ;
INFO  23:41:51,164 - #42 {
INFO  23:41:51,164 - #11 return
INFO  23:41:51,164 - #47 c
INFO  23:41:51,164 - #34 ;
INFO  23:41:51,165 - #43 }
INFO  23:41:51,165 - #47 int
INFO  23:41:51,165 - #47 test
INFO  23:41:51,165 - #38 (
INFO  23:41:51,166 - #39 )
INFO  23:41:51,166 - #47 bool
INFO  23:41:51,166 - #47 c
INFO  23:41:51,166 - #34 ;
INFO  23:41:51,166 - #42 {
INFO  23:41:51,166 - #47 dd
INFO  23:41:51,166 - #31 =
INFO  23:41:51,167 - #47 Unpacking
INFO  23:41:51,167 - #45 ::
INFO  23:41:51,167 - #47 a
INFO  23:41:51,168 - #20 *
INFO  23:41:51,168 - #47 dd
INFO  23:41:51,171 - #34 ;
INFO  23:41:51,173 - #47 Unpacking
INFO  23:41:51,173 - #45 ::
INFO  23:41:51,174 - #47 a
INFO  23:41:51,174 - #31 =
INFO  23:41:51,174 - #47 Unpacking
INFO  23:41:51,174 - #45 ::
INFO  23:41:51,174 - #47 a
INFO  23:41:51,175 - #18 +
INFO  23:41:51,175 - #47 Unpacking
INFO  23:41:51,187 - #45 ::
INFO  23:41:51,187 - #47 a
INFO  23:41:51,187 - #20 *
INFO  23:41:51,188 - #47 dd
INFO  23:41:51,188 - #34 ;
INFO  23:41:51,189 - #47 Unpacking
INFO  23:41:51,189 - #45 ::
INFO  23:41:51,189 - #47 a
INFO  23:41:51,189 - #31 =
INFO  23:41:51,189 - #19 -
INFO  23:41:51,190 - #47 dd
INFO  23:41:51,190 - #34 ;
INFO  23:41:51,191 - #47 dd
INFO  23:41:51,191 - #31 =
INFO  23:41:51,191 - #46 3
INFO  23:41:51,192 - #34 ;
INFO  23:41:51,192 - #47 dd
INFO  23:41:51,192 - #31 =
INFO  23:41:51,192 - #19 -
INFO  23:41:51,193 - #46 9
INFO  23:41:51,193 - #34 ;
INFO  23:41:51,193 - #11 return
INFO  23:41:51,193 - #46 3
INFO  23:41:51,193 - #34 ;
INFO  23:41:51,194 - #7 if
INFO  23:41:51,194 - #38 (
INFO  23:41:51,194 - #47 pokusaj
INFO  23:41:51,195 - #23 ==
INFO  23:41:51,195 - #48 true
INFO  23:41:51,198 - #39 )
INFO  23:41:51,202 - #42 {
INFO  23:41:51,202 - #47 dd
INFO  23:41:51,202 - #32 ++
INFO  23:41:51,202 - #34 ;
INFO  23:41:51,202 - #43 }
INFO  23:41:51,203 - #5 else
INFO  23:41:51,203 - #42 {
INFO  23:41:51,204 - #47 c
INFO  23:41:51,204 - #31 =
INFO  23:41:51,204 - #48 true
INFO  23:41:51,204 - #34 ;
INFO  23:41:51,204 - #43 }
INFO  23:41:51,205 - #43 }
INFO  23:41:51,206 - #47 int
INFO  23:41:51,206 - #47 main
INFO  23:41:51,206 - #38 (
INFO  23:41:51,207 - #39 )
INFO  23:41:51,207 - #47 int
INFO  23:41:51,207 - #47 prvi
INFO  23:41:51,207 - #36 ,
INFO  23:41:51,207 - #47 drugi
INFO  23:41:51,207 - #34 ;
INFO  23:41:51,208 - #47 char
INFO  23:41:51,208 - #47 treci
INFO  23:41:51,208 - #34 ;
INFO  23:41:51,208 - #42 {
INFO  23:41:51,208 - #47 treci
INFO  23:41:51,208 - #31 =
INFO  23:41:51,209 - #47 testtest
INFO  23:41:51,209 - #38 (
INFO  23:41:51,209 - #47 prvi
INFO  23:41:51,209 - #36 ,
INFO  23:41:51,210 - #47 drugi
INFO  23:41:51,210 - #36 ,
INFO  23:41:51,210 - #47 treci
INFO  23:41:51,210 - #39 )
INFO  23:41:51,211 - #34 ;
INFO  23:41:51,211 - #11 return
INFO  23:41:51,212 - #46 2
INFO  23:41:51,212 - #34 ;
INFO  23:41:51,212 - #43 }
INFO  23:41:51,212 - #43 }
INFO  23:41:51,234 - Program(
  ProgName(
   test302
  ) [ProgName]
  NamespaceList(
    NoNamespaceList(
    ) [NoNamespaceList]
    Namespace(
      NamespaceName(
       Unpacking
      ) [NamespaceName]
      NamespaceDecls(
        NamespaceDecls(
          NamespaceDecls(
            NamespaceDecls(
              NoNamespaceDecls(
              ) [NoNamespaceDecls]
              NamespaceVarDecl(
                Type(
                 int
                ) [Type]
                MultipleVarDecls(
                  SingleVarDecl(
                    VarNameDecl(
                     a
                    ) [VarNameDecl]
                  ) [SingleVarDecl]
                  VarNameDecl(
                   b
                  ) [VarNameDecl]
                ) [MultipleVarDecls]
              ) [NamespaceVarDecl]
            ) [NamespaceDecls]
            NamespaceVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 niz
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [NamespaceVarDecl]
          ) [NamespaceDecls]
          NamespaceVarDecl(
            Type(
             int
            ) [Type]
            SingleVarDecl(
              VarArrayNameDecl(
               arr
              ) [VarArrayNameDecl]
            ) [SingleVarDecl]
          ) [NamespaceVarDecl]
        ) [NamespaceDecls]
        NamespaceVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarArrayNameDecl(
             buarr
            ) [VarArrayNameDecl]
          ) [SingleVarDecl]
        ) [NamespaceVarDecl]
      ) [NamespaceDecls]
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               int
              ) [Type]
            ) [MethRetType]
           main
          ) [MethodTypeName]
          NoFormParam(
          ) [NoFormParam]
          NoMethVar(
          ) [NoMethVar]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   2
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
    ) [Namespace]
  ) [NamespaceList]
  ProgramDecls(
    ProgramDecls(
      ProgramDecls(
        ProgramDecls(
          ProgramDecls(
            NoProgramDecls(
            ) [NoProgramDecls]
            ProgramVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 nizic
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [ProgramVarDecl]
          ) [ProgramDecls]
          ProgramConstDecl(
            Type(
             bool
            ) [Type]
            SingleConstDecl(
              ConstDecl(
               ok
                BoolConst(
                 false
                ) [BoolConst]
              ) [ConstDecl]
            ) [SingleConstDecl]
          ) [ProgramConstDecl]
        ) [ProgramDecls]
        ProgramVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             pokusaj
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [ProgramVarDecl]
      ) [ProgramDecls]
      ProgramVarDecl(
        Type(
         int
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           dd
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [ProgramVarDecl]
    ) [ProgramDecls]
    ProgramVarDecl(
      Type(
       char
      ) [Type]
      SingleVarDecl(
        VarNameDecl(
         slovo
        ) [VarNameDecl]
      ) [SingleVarDecl]
    ) [ProgramVarDecl]
  ) [ProgramDecls]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecl(
          ) [NoMethodDecl]
          MethodDecl(
            MethodTypeName(
              MethRetVoid(
              ) [MethRetVoid]
             funkcija
            ) [MethodTypeName]
            NoFormParam(
            ) [NoFormParam]
            MethodVars(
              NoMethVar(
              ) [NoMethVar]
              Type(
               int
              ) [Type]
              MultipleVarDecls(
                SingleVarDecl(
                  VarNameDecl(
                   c
                  ) [VarNameDecl]
                ) [SingleVarDecl]
                VarNameDecl(
                 d
                ) [VarNameDecl]
              ) [MultipleVarDecls]
            ) [MethodVars]
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            NoStmt(
                            ) [NoStmt]
                            DesignatorStmt(
                              DesigStmtActions(
                                DesigArray(
                                 nizic
                                  PosTermExpr(
                                    FactorTerm(
                                      NumFactor(
                                       3
                                      ) [NumFactor]
                                    ) [FactorTerm]
                                  ) [PosTermExpr]
                                ) [DesigArray]
                                DesigInc(
                                ) [DesigInc]
                              ) [DesigStmtActions]
                            ) [DesignatorStmt]
                          ) [Statements]
                          DesignatorStmt(
                            DesigStmtActions(
                              DesigArray(
                               nizic
                                PosTermExpr(
                                  FactorTerm(
                                    NumFactor(
                                     3
                                    ) [NumFactor]
                                  ) [FactorTerm]
                                ) [PosTermExpr]
                              ) [DesigArray]
                              DesigDec(
                              ) [DesigDec]
                            ) [DesigStmtActions]
                          ) [DesignatorStmt]
                        ) [Statements]
                        DesignatorStmt(
                          DesigStmtActions(
                            DesigVar(
                             dd
                            ) [DesigVar]
                            DesigInc(
                            ) [DesigInc]
                          ) [DesigStmtActions]
                        ) [DesignatorStmt]
                      ) [Statements]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          DesigDec(
                          ) [DesigDec]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigArray(
                         Unpacking
                         niz
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ScopeDesigArray]
                        DesigInc(
                        ) [DesigInc]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  ReadExpr(
                    DesigVar(
                     pokusaj
                    ) [DesigVar]
                  ) [ReadExpr]
                ) [Statements]
                ReadExpr(
                  ScopeDesigVar(
                   Unpacking
                   a
                  ) [ScopeDesigVar]
                ) [ReadExpr]
              ) [Statements]
              PrintStmt(
                PosTermExpr(
                  FactorTerm(
                    NumFactor(
                     3
                    ) [NumFactor]
                  ) [FactorTerm]
                ) [PosTermExpr]
                PrintVar(
                 2
                ) [PrintVar]
              ) [PrintStmt]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               bool
              ) [Type]
            ) [MethRetType]
           testtest
          ) [MethodTypeName]
          FormParams(
            FormCommaParamDecl(
              FormCommaParamDecl(
                FormParamDecl(
                  FormParamVar(
                    Type(
                     int
                    ) [Type]
                   param1
                  ) [FormParamVar]
                ) [FormParamDecl]
                FormParamVar(
                  Type(
                   int
                  ) [Type]
                 param2
                ) [FormParamVar]
              ) [FormCommaParamDecl]
              FormParamVar(
                Type(
                 char
                ) [Type]
               param3
              ) [FormParamVar]
            ) [FormCommaParamDecl]
          ) [FormParams]
          MethodVars(
            NoMethVar(
            ) [NoMethVar]
            Type(
             bool
            ) [Type]
            MultipleVarDecls(
              SingleVarDecl(
                VarNameDecl(
                 c
                ) [VarNameDecl]
              ) [SingleVarDecl]
              VarNameDecl(
               d
              ) [VarNameDecl]
            ) [MultipleVarDecls]
          ) [MethodVars]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  VarFactor(
                    DesigVar(
                     c
                    ) [DesigVar]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        MethodTypeName(
          MethRetType(
            Type(
             int
            ) [Type]
          ) [MethRetType]
         test
        ) [MethodTypeName]
        NoFormParam(
        ) [NoFormParam]
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             c
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [MethodVars]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          AssignExpr(
                            PosTermExpr(
                              MulTerm(
                                FactorTerm(
                                  VarFactor(
                                    ScopeDesigVar(
                                     Unpacking
                                     a
                                    ) [ScopeDesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                                Mul(
                                ) [Mul]
                                VarFactor(
                                  DesigVar(
                                   dd
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [MulTerm]
                            ) [PosTermExpr]
                          ) [AssignExpr]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigVar(
                         Unpacking
                         a
                        ) [ScopeDesigVar]
                        AssignExpr(
                          AddExpr(
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                            Add(
                            ) [Add]
                            MulTerm(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                              Mul(
                              ) [Mul]
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [MulTerm]
                          ) [AddExpr]
                        ) [AssignExpr]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    DesigStmtActions(
                      ScopeDesigVar(
                       Unpacking
                       a
                      ) [ScopeDesigVar]
                      AssignExpr(
                        NegTermeExpr(
                          FactorTerm(
                            VarFactor(
                              DesigVar(
                               dd
                              ) [DesigVar]
                            ) [VarFactor]
                          ) [FactorTerm]
                        ) [NegTermeExpr]
                      ) [AssignExpr]
                    ) [DesigStmtActions]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          NumFactor(
                           3
                          ) [NumFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                DesigStmtActions(
                  DesigVar(
                   dd
                  ) [DesigVar]
                  AssignExpr(
                    NegTermeExpr(
                      FactorTerm(
                        NumFactor(
                         9
                        ) [NumFactor]
                      ) [FactorTerm]
                    ) [NegTermeExpr]
                  ) [AssignExpr]
                ) [DesigStmtActions]
              ) [DesignatorStmt]
            ) [Statements]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   3
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
          IfElseStmt(
            ConditionCondTerm(
              CondTermFact(
                RelOpCondFact(
                  PosTermExpr(
                    FactorTerm(
                      VarFactor(
                        DesigVar(
                         pokusaj
                        ) [DesigVar]
                      ) [VarFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                  EqlOp(
                  ) [EqlOp]
                  PosTermExpr(
                    FactorTerm(
                      BoolFactor(
                       true
                      ) [BoolFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                ) [RelOpCondFact]
              ) [CondTermFact]
            ) [ConditionCondTerm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    DesigInc(
                    ) [DesigInc]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     c
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          BoolFactor(
                           true
                          ) [BoolFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
          ) [IfElseStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        MethRetType(
          Type(
           int
          ) [Type]
        ) [MethRetType]
       main
      ) [MethodTypeName]
      NoFormParam(
      ) [NoFormParam]
      MethodVars(
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           int
          ) [Type]
          MultipleVarDecls(
            SingleVarDecl(
              VarNameDecl(
               prvi
              ) [VarNameDecl]
            ) [SingleVarDecl]
            VarNameDecl(
             drugi
            ) [VarNameDecl]
          ) [MultipleVarDecls]
        ) [MethodVars]
        Type(
         char
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           treci
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [MethodVars]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          DesignatorStmt(
            DesigStmtActions(
              DesigVar(
               treci
              ) [DesigVar]
              AssignExpr(
                PosTermExpr(
                  FactorTerm(
                    FactorFuncCall(
                      DesigVar(
                       testtest
                      ) [DesigVar]
                      ActPars(
                        ActualParamsList(
                          ActualParamsList(
                            ActualParam(
                              PosTermExpr(
                                FactorTerm(
                                  VarFactor(
                                    DesigVar(
                                     prvi
                                    ) [DesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                              ) [PosTermExpr]
                            ) [ActualParam]
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  DesigVar(
                                   drugi
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                          ) [ActualParamsList]
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 treci
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ActualParamsList]
                      ) [ActPars]
                    ) [FactorFuncCall]
                  ) [FactorTerm]
                ) [PosTermExpr]
              ) [AssignExpr]
            ) [DesigStmtActions]
          ) [DesignatorStmt]
        ) [Statements]
        ReturnExpr(
          PosTermExpr(
            FactorTerm(
              NumFactor(
               2
              ) [NumFactor]
            ) [FactorTerm]
          ) [PosTermExpr]
        ) [ReturnExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:41:51,257 - Deklarisana promenljiva Unpacking::a na liniji 6
INFO  23:41:51,257 - Deklarisana promenljiva Unpacking::b na liniji 6
INFO  23:41:51,258 - Deklarisana promenljiva Unpacking::niz na liniji 7
INFO  23:41:51,258 - Deklarisana promenljiva Unpacking::arr na liniji 8
INFO  23:41:51,258 - Deklarisana promenljiva Unpacking::buarr na liniji 9
INFO  23:41:51,258 - Obradjuje se funkcija main na liniji 11
INFO  23:41:51,259 - Deklarisana promenljiva nizic na liniji 16
INFO  23:41:51,259 - Deklarisana konstanta ok na liniji 17
INFO  23:41:51,260 - Deklarisana promenljiva pokusaj na liniji 18
INFO  23:41:51,261 - Deklarisana promenljiva dd na liniji 19
INFO  23:41:51,261 - Deklarisana promenljiva slovo na liniji 20
INFO  23:41:51,261 - Obradjuje se funkcija funkcija na liniji 23
INFO  23:41:51,262 - Deklarisana promenljiva c na liniji 23
INFO  23:41:51,263 - Deklarisana promenljiva d na liniji 23
INFO  23:41:51,264 - Pretraga na 25(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 25
INFO  23:41:51,266 - Pretraga na 26(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 26
INFO  23:41:51,269 - Pretraga na 29(Unpacking::niz), nadjeno Var Unpacking::niz: Arr of int, 2, 0  na liniji 29
INFO  23:41:51,273 - Obradjuje se funkcija testtest na liniji 38
INFO  23:41:51,275 - Deklarisan parametar param1 metode: testtest. na liniji 38
INFO  23:41:51,277 - Deklarisan parametar param2 metode: testtest. na liniji 38
INFO  23:41:51,279 - Deklarisan parametar param3 metode: testtest. na liniji 38
INFO  23:41:51,281 - Deklarisana promenljiva c na liniji 38
INFO  23:41:51,283 - Deklarisana promenljiva d na liniji 38
INFO  23:41:51,285 - Obradjuje se funkcija test na liniji 42
INFO  23:41:51,287 - Deklarisana promenljiva c na liniji 42
INFO  23:41:51,291 - Obradjuje se funkcija main na liniji 61
INFO  23:41:51,292 - Deklarisana promenljiva prvi na liniji 62
INFO  23:41:51,294 - Deklarisana promenljiva drugi na liniji 62
INFO  23:41:51,294 - Deklarisana promenljiva treci na liniji 63
ERROR 23:41:51,295 - Greska na liniji 65broj stvarnih parametara je manji od broja formalnih parametara!
ERROR 23:41:51,295 - Greska na liniji 65src i dst nisu kompatibilni pri dodeli! 
INFO  23:41:51,296 -  Print count calls = 0
INFO  23:41:51,296 -  Deklarisanih promenljivih ima = 0
INFO  23:41:51,298 - Neuspesna semanticka analiza!!
