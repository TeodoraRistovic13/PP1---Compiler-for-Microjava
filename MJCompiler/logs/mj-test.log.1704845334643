INFO  01:08:44,267 - Compiling source file: C:\Users\Zoki\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  01:08:44,273 - #2 program
INFO  01:08:44,274 - #47 test302
INFO  01:08:44,274 - #17 namespace
INFO  01:08:44,274 - #47 Unpacking
INFO  01:08:44,274 - #42 {
INFO  01:08:44,274 - #47 int
INFO  01:08:44,275 - #47 a
INFO  01:08:44,275 - #36 ,
INFO  01:08:44,275 - #47 b
INFO  01:08:44,275 - #34 ;
INFO  01:08:44,276 - #47 int
INFO  01:08:44,276 - #47 niz
INFO  01:08:44,276 - #40 [
INFO  01:08:44,276 - #41 ]
INFO  01:08:44,276 - #34 ;
INFO  01:08:44,276 - #47 int
INFO  01:08:44,277 - #47 arr
INFO  01:08:44,277 - #40 [
INFO  01:08:44,277 - #41 ]
INFO  01:08:44,277 - #34 ;
INFO  01:08:44,277 - #47 bool
INFO  01:08:44,277 - #47 buarr
INFO  01:08:44,278 - #40 [
INFO  01:08:44,278 - #41 ]
INFO  01:08:44,278 - #34 ;
INFO  01:08:44,278 - #42 {
INFO  01:08:44,278 - #47 int
INFO  01:08:44,278 - #47 main
INFO  01:08:44,278 - #38 (
INFO  01:08:44,279 - #39 )
INFO  01:08:44,279 - #42 {
INFO  01:08:44,279 - #11 return
INFO  01:08:44,279 - #46 2
INFO  01:08:44,279 - #34 ;
INFO  01:08:44,279 - #43 }
INFO  01:08:44,279 - #43 }
INFO  01:08:44,279 - #43 }
INFO  01:08:44,280 - #47 int
INFO  01:08:44,280 - #47 nizic
INFO  01:08:44,280 - #40 [
INFO  01:08:44,280 - #41 ]
INFO  01:08:44,280 - #34 ;
INFO  01:08:44,280 - #6 const
INFO  01:08:44,280 - #47 bool
INFO  01:08:44,281 - #47 ok
INFO  01:08:44,281 - #31 =
INFO  01:08:44,281 - #48 false
INFO  01:08:44,281 - #34 ;
INFO  01:08:44,281 - #47 bool
INFO  01:08:44,281 - #47 pokusaj
INFO  01:08:44,281 - #34 ;
INFO  01:08:44,282 - #47 int
INFO  01:08:44,282 - #47 dd
INFO  01:08:44,282 - #34 ;
INFO  01:08:44,282 - #47 char
INFO  01:08:44,282 - #47 slovo
INFO  01:08:44,282 - #34 ;
INFO  01:08:44,282 - #42 {
INFO  01:08:44,283 - #12 void
INFO  01:08:44,283 - #47 funkcija
INFO  01:08:44,283 - #38 (
INFO  01:08:44,283 - #39 )
INFO  01:08:44,284 - #47 int
INFO  01:08:44,284 - #47 c
INFO  01:08:44,284 - #36 ,
INFO  01:08:44,284 - #47 d
INFO  01:08:44,285 - #34 ;
INFO  01:08:44,285 - #42 {
INFO  01:08:44,285 - #47 nizic
INFO  01:08:44,285 - #40 [
INFO  01:08:44,285 - #46 3
INFO  01:08:44,285 - #41 ]
INFO  01:08:44,285 - #32 ++
INFO  01:08:44,286 - #34 ;
INFO  01:08:44,286 - #47 nizic
INFO  01:08:44,286 - #40 [
INFO  01:08:44,286 - #46 3
INFO  01:08:44,286 - #41 ]
INFO  01:08:44,286 - #33 --
INFO  01:08:44,286 - #34 ;
INFO  01:08:44,287 - #47 dd
INFO  01:08:44,287 - #32 ++
INFO  01:08:44,287 - #34 ;
INFO  01:08:44,287 - #47 dd
INFO  01:08:44,287 - #33 --
INFO  01:08:44,287 - #34 ;
INFO  01:08:44,288 - #47 Unpacking
INFO  01:08:44,288 - #45 ::
INFO  01:08:44,288 - #47 niz
INFO  01:08:44,289 - #40 [
INFO  01:08:44,289 - #47 dd
INFO  01:08:44,291 - #41 ]
INFO  01:08:44,291 - #32 ++
INFO  01:08:44,291 - #34 ;
INFO  01:08:44,291 - #10 read
INFO  01:08:44,292 - #38 (
INFO  01:08:44,292 - #47 pokusaj
INFO  01:08:44,292 - #39 )
INFO  01:08:44,293 - #34 ;
INFO  01:08:44,293 - #10 read
INFO  01:08:44,293 - #38 (
INFO  01:08:44,293 - #47 Unpacking
INFO  01:08:44,294 - #45 ::
INFO  01:08:44,294 - #47 a
INFO  01:08:44,294 - #39 )
INFO  01:08:44,295 - #34 ;
INFO  01:08:44,295 - #9 print
INFO  01:08:44,295 - #38 (
INFO  01:08:44,295 - #46 3
INFO  01:08:44,295 - #36 ,
INFO  01:08:44,296 - #46 2
INFO  01:08:44,297 - #39 )
INFO  01:08:44,297 - #34 ;
INFO  01:08:44,297 - #43 }
INFO  01:08:44,297 - #47 bool
INFO  01:08:44,298 - #47 testtest2
INFO  01:08:44,298 - #38 (
INFO  01:08:44,298 - #47 int
INFO  01:08:44,298 - #47 param1
INFO  01:08:44,298 - #36 ,
INFO  01:08:44,298 - #47 int
INFO  01:08:44,298 - #47 param2
INFO  01:08:44,299 - #36 ,
INFO  01:08:44,299 - #47 char
INFO  01:08:44,299 - #47 param3
INFO  01:08:44,299 - #39 )
INFO  01:08:44,299 - #47 bool
INFO  01:08:44,299 - #47 c
INFO  01:08:44,300 - #36 ,
INFO  01:08:44,300 - #47 d
INFO  01:08:44,300 - #34 ;
INFO  01:08:44,300 - #42 {
INFO  01:08:44,300 - #11 return
INFO  01:08:44,300 - #47 c
INFO  01:08:44,300 - #34 ;
INFO  01:08:44,300 - #43 }
INFO  01:08:44,300 - #47 bool
INFO  01:08:44,301 - #47 testtest
INFO  01:08:44,301 - #38 (
INFO  01:08:44,301 - #47 int
INFO  01:08:44,301 - #47 param1
INFO  01:08:44,301 - #36 ,
INFO  01:08:44,301 - #47 int
INFO  01:08:44,301 - #47 param2
INFO  01:08:44,301 - #36 ,
INFO  01:08:44,301 - #47 char
INFO  01:08:44,301 - #47 param3
INFO  01:08:44,302 - #39 )
INFO  01:08:44,302 - #47 bool
INFO  01:08:44,302 - #47 c
INFO  01:08:44,302 - #36 ,
INFO  01:08:44,302 - #47 d
INFO  01:08:44,302 - #34 ;
INFO  01:08:44,302 - #42 {
INFO  01:08:44,302 - #11 return
INFO  01:08:44,302 - #47 c
INFO  01:08:44,302 - #34 ;
INFO  01:08:44,302 - #43 }
INFO  01:08:44,303 - #47 int
INFO  01:08:44,303 - #47 test
INFO  01:08:44,303 - #38 (
INFO  01:08:44,303 - #39 )
INFO  01:08:44,303 - #47 bool
INFO  01:08:44,303 - #47 c
INFO  01:08:44,303 - #34 ;
INFO  01:08:44,304 - #42 {
INFO  01:08:44,304 - #47 dd
INFO  01:08:44,304 - #31 =
INFO  01:08:44,304 - #47 Unpacking
INFO  01:08:44,304 - #45 ::
INFO  01:08:44,304 - #47 a
INFO  01:08:44,304 - #20 *
INFO  01:08:44,304 - #47 dd
INFO  01:08:44,304 - #34 ;
INFO  01:08:44,305 - #47 Unpacking
INFO  01:08:44,305 - #45 ::
INFO  01:08:44,305 - #47 a
INFO  01:08:44,305 - #31 =
INFO  01:08:44,305 - #47 Unpacking
INFO  01:08:44,305 - #45 ::
INFO  01:08:44,305 - #47 a
INFO  01:08:44,305 - #18 +
INFO  01:08:44,305 - #47 Unpacking
INFO  01:08:44,306 - #45 ::
INFO  01:08:44,306 - #47 a
INFO  01:08:44,306 - #20 *
INFO  01:08:44,306 - #47 dd
INFO  01:08:44,306 - #34 ;
INFO  01:08:44,306 - #47 Unpacking
INFO  01:08:44,306 - #45 ::
INFO  01:08:44,306 - #47 a
INFO  01:08:44,307 - #31 =
INFO  01:08:44,307 - #19 -
INFO  01:08:44,307 - #47 dd
INFO  01:08:44,307 - #34 ;
INFO  01:08:44,307 - #47 dd
INFO  01:08:44,307 - #31 =
INFO  01:08:44,307 - #46 3
INFO  01:08:44,307 - #34 ;
INFO  01:08:44,307 - #47 dd
INFO  01:08:44,307 - #31 =
INFO  01:08:44,308 - #19 -
INFO  01:08:44,308 - #46 9
INFO  01:08:44,308 - #34 ;
INFO  01:08:44,308 - #11 return
INFO  01:08:44,308 - #46 3
INFO  01:08:44,308 - #34 ;
INFO  01:08:44,308 - #7 if
INFO  01:08:44,308 - #38 (
INFO  01:08:44,308 - #47 pokusaj
INFO  01:08:44,309 - #23 ==
INFO  01:08:44,309 - #48 true
INFO  01:08:44,309 - #39 )
INFO  01:08:44,309 - #42 {
INFO  01:08:44,309 - #47 dd
INFO  01:08:44,309 - #32 ++
INFO  01:08:44,309 - #34 ;
INFO  01:08:44,309 - #43 }
INFO  01:08:44,309 - #5 else
INFO  01:08:44,309 - #42 {
INFO  01:08:44,309 - #47 c
INFO  01:08:44,310 - #31 =
INFO  01:08:44,310 - #48 true
INFO  01:08:44,310 - #34 ;
INFO  01:08:44,310 - #43 }
INFO  01:08:44,310 - #43 }
INFO  01:08:44,310 - #47 int
INFO  01:08:44,310 - #47 main
INFO  01:08:44,310 - #38 (
INFO  01:08:44,310 - #39 )
INFO  01:08:44,311 - #47 int
INFO  01:08:44,311 - #47 prvi
INFO  01:08:44,311 - #36 ,
INFO  01:08:44,311 - #47 drugi
INFO  01:08:44,311 - #34 ;
INFO  01:08:44,311 - #47 char
INFO  01:08:44,311 - #47 treci
INFO  01:08:44,311 - #34 ;
INFO  01:08:44,311 - #47 bool
INFO  01:08:44,311 - #47 cetvrti
INFO  01:08:44,312 - #34 ;
INFO  01:08:44,312 - #42 {
INFO  01:08:44,312 - #47 cetvrti
INFO  01:08:44,312 - #31 =
INFO  01:08:44,312 - #47 testtest2
INFO  01:08:44,312 - #38 (
INFO  01:08:44,312 - #47 prvi
INFO  01:08:44,312 - #36 ,
INFO  01:08:44,312 - #47 drugi
INFO  01:08:44,312 - #36 ,
INFO  01:08:44,313 - #47 treci
INFO  01:08:44,313 - #39 )
INFO  01:08:44,313 - #34 ;
INFO  01:08:44,313 - #11 return
INFO  01:08:44,313 - #46 2
INFO  01:08:44,314 - #34 ;
INFO  01:08:44,314 - #43 }
INFO  01:08:44,314 - #43 }
