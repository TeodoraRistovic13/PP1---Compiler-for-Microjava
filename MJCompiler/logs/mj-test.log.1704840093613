INFO  23:19:21,886 - Compiling source file: C:\Users\Zoki\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:19:21,960 - #2 program
INFO  23:19:21,960 - #47 test302
INFO  23:19:21,961 - #17 namespace
INFO  23:19:21,963 - #47 Unpacking
INFO  23:19:21,963 - #42 {
INFO  23:19:21,964 - #47 int
INFO  23:19:21,966 - #47 a
INFO  23:19:21,967 - #36 ,
INFO  23:19:21,968 - #47 b
INFO  23:19:21,968 - #34 ;
INFO  23:19:21,968 - #47 int
INFO  23:19:21,969 - #47 niz
INFO  23:19:21,969 - #40 [
INFO  23:19:21,969 - #41 ]
INFO  23:19:21,969 - #34 ;
INFO  23:19:21,970 - #47 int
INFO  23:19:21,970 - #47 arr
INFO  23:19:21,970 - #40 [
INFO  23:19:21,970 - #41 ]
INFO  23:19:21,970 - #34 ;
INFO  23:19:21,971 - #47 bool
INFO  23:19:21,971 - #47 buarr
INFO  23:19:21,971 - #40 [
INFO  23:19:21,972 - #41 ]
INFO  23:19:21,972 - #34 ;
INFO  23:19:21,972 - #42 {
INFO  23:19:21,973 - #47 int
INFO  23:19:21,974 - #47 main
INFO  23:19:21,975 - #38 (
INFO  23:19:21,977 - #39 )
INFO  23:19:21,978 - #42 {
INFO  23:19:21,979 - #11 return
INFO  23:19:21,981 - #46 2
INFO  23:19:21,981 - #34 ;
INFO  23:19:21,982 - #43 }
INFO  23:19:21,982 - #43 }
INFO  23:19:21,984 - #43 }
INFO  23:19:21,984 - #47 int
INFO  23:19:21,986 - #47 nizic
INFO  23:19:21,986 - #40 [
INFO  23:19:21,986 - #41 ]
INFO  23:19:21,986 - #34 ;
INFO  23:19:21,986 - #6 const
INFO  23:19:21,987 - #47 bool
INFO  23:19:21,987 - #47 ok
INFO  23:19:21,987 - #31 =
INFO  23:19:21,988 - #48 false
INFO  23:19:21,988 - #34 ;
INFO  23:19:21,990 - #47 bool
INFO  23:19:21,990 - #47 pokusaj
INFO  23:19:21,991 - #34 ;
INFO  23:19:21,991 - #47 int
INFO  23:19:21,991 - #47 dd
INFO  23:19:21,991 - #34 ;
INFO  23:19:21,991 - #47 char
INFO  23:19:21,992 - #47 slovo
INFO  23:19:21,992 - #34 ;
INFO  23:19:21,992 - #42 {
INFO  23:19:21,992 - #12 void
INFO  23:19:21,992 - #47 funkcija
INFO  23:19:21,994 - #38 (
INFO  23:19:21,994 - #39 )
INFO  23:19:21,994 - #47 int
INFO  23:19:21,994 - #47 c
INFO  23:19:21,995 - #36 ,
INFO  23:19:21,995 - #47 d
INFO  23:19:21,995 - #34 ;
INFO  23:19:21,996 - #42 {
INFO  23:19:21,996 - #47 nizic
INFO  23:19:21,997 - #40 [
INFO  23:19:21,997 - #46 3
INFO  23:19:21,997 - #41 ]
INFO  23:19:21,997 - #32 ++
INFO  23:19:21,997 - #34 ;
INFO  23:19:21,998 - #47 nizic
INFO  23:19:21,998 - #40 [
INFO  23:19:21,999 - #46 3
INFO  23:19:21,999 - #41 ]
INFO  23:19:21,999 - #33 --
INFO  23:19:21,999 - #34 ;
INFO  23:19:22,000 - #47 dd
INFO  23:19:22,000 - #32 ++
INFO  23:19:22,001 - #34 ;
INFO  23:19:22,001 - #47 dd
INFO  23:19:22,001 - #33 --
INFO  23:19:22,002 - #34 ;
INFO  23:19:22,002 - #47 Unpacking
INFO  23:19:22,002 - #45 ::
INFO  23:19:22,002 - #47 niz
INFO  23:19:22,002 - #40 [
INFO  23:19:22,002 - #47 dd
INFO  23:19:22,004 - #41 ]
INFO  23:19:22,004 - #32 ++
INFO  23:19:22,005 - #34 ;
INFO  23:19:22,005 - #10 read
INFO  23:19:22,006 - #38 (
INFO  23:19:22,006 - #47 pokusaj
INFO  23:19:22,006 - #39 )
INFO  23:19:22,006 - #34 ;
INFO  23:19:22,006 - #10 read
INFO  23:19:22,007 - #38 (
INFO  23:19:22,007 - #47 Unpacking
INFO  23:19:22,007 - #45 ::
INFO  23:19:22,007 - #47 a
INFO  23:19:22,007 - #39 )
INFO  23:19:22,007 - #34 ;
INFO  23:19:22,008 - #9 print
INFO  23:19:22,008 - #38 (
INFO  23:19:22,008 - #46 3
INFO  23:19:22,008 - #36 ,
INFO  23:19:22,008 - #46 2
INFO  23:19:22,008 - #39 )
INFO  23:19:22,009 - #34 ;
INFO  23:19:22,009 - #43 }
INFO  23:19:22,009 - #47 bool
INFO  23:19:22,009 - #47 testtest
INFO  23:19:22,010 - #38 (
INFO  23:19:22,010 - #47 int
INFO  23:19:22,010 - #47 param1
INFO  23:19:22,010 - #36 ,
INFO  23:19:22,011 - #47 int
INFO  23:19:22,011 - #47 param2
INFO  23:19:22,011 - #36 ,
INFO  23:19:22,012 - #47 char
INFO  23:19:22,012 - #47 param3
INFO  23:19:22,012 - #39 )
INFO  23:19:22,012 - #47 bool
INFO  23:19:22,013 - #47 c
INFO  23:19:22,013 - #36 ,
INFO  23:19:22,013 - #47 d
INFO  23:19:22,013 - #34 ;
INFO  23:19:22,013 - #42 {
INFO  23:19:22,014 - #11 return
INFO  23:19:22,014 - #47 c
INFO  23:19:22,014 - #34 ;
INFO  23:19:22,014 - #43 }
INFO  23:19:22,014 - #47 int
INFO  23:19:22,014 - #47 test
INFO  23:19:22,014 - #38 (
INFO  23:19:22,014 - #39 )
INFO  23:19:22,015 - #47 bool
INFO  23:19:22,015 - #47 c
INFO  23:19:22,015 - #34 ;
INFO  23:19:22,015 - #42 {
INFO  23:19:22,015 - #47 dd
INFO  23:19:22,015 - #31 =
INFO  23:19:22,016 - #47 Unpacking
INFO  23:19:22,016 - #45 ::
INFO  23:19:22,016 - #47 a
INFO  23:19:22,016 - #20 *
INFO  23:19:22,016 - #47 dd
INFO  23:19:22,018 - #34 ;
INFO  23:19:22,018 - #47 Unpacking
INFO  23:19:22,018 - #45 ::
INFO  23:19:22,018 - #47 a
INFO  23:19:22,018 - #31 =
INFO  23:19:22,018 - #47 Unpacking
INFO  23:19:22,019 - #45 ::
INFO  23:19:22,019 - #47 a
INFO  23:19:22,019 - #18 +
INFO  23:19:22,019 - #47 Unpacking
INFO  23:19:22,020 - #45 ::
INFO  23:19:22,020 - #47 a
INFO  23:19:22,020 - #20 *
INFO  23:19:22,021 - #47 dd
INFO  23:19:22,021 - #34 ;
INFO  23:19:22,021 - #47 Unpacking
INFO  23:19:22,021 - #45 ::
INFO  23:19:22,021 - #47 a
INFO  23:19:22,021 - #31 =
INFO  23:19:22,022 - #19 -
INFO  23:19:22,022 - #47 dd
INFO  23:19:22,022 - #34 ;
INFO  23:19:22,022 - #47 dd
INFO  23:19:22,022 - #31 =
INFO  23:19:22,023 - #46 3
INFO  23:19:22,023 - #34 ;
INFO  23:19:22,023 - #47 dd
INFO  23:19:22,023 - #31 =
INFO  23:19:22,023 - #19 -
INFO  23:19:22,023 - #46 9
INFO  23:19:22,024 - #34 ;
INFO  23:19:22,024 - #11 return
INFO  23:19:22,024 - #46 3
INFO  23:19:22,024 - #34 ;
INFO  23:19:22,024 - #7 if
INFO  23:19:22,024 - #38 (
INFO  23:19:22,024 - #47 pokusaj
INFO  23:19:22,024 - #23 ==
INFO  23:19:22,025 - #48 true
INFO  23:19:22,026 - #39 )
INFO  23:19:22,027 - #42 {
INFO  23:19:22,027 - #47 dd
INFO  23:19:22,027 - #32 ++
INFO  23:19:22,028 - #34 ;
INFO  23:19:22,028 - #43 }
INFO  23:19:22,028 - #5 else
INFO  23:19:22,028 - #42 {
INFO  23:19:22,029 - #47 c
INFO  23:19:22,029 - #31 =
INFO  23:19:22,029 - #48 true
INFO  23:19:22,029 - #34 ;
INFO  23:19:22,030 - #43 }
INFO  23:19:22,030 - #43 }
INFO  23:19:22,030 - #47 int
INFO  23:19:22,031 - #47 main
INFO  23:19:22,031 - #38 (
INFO  23:19:22,031 - #39 )
INFO  23:19:22,031 - #47 int
INFO  23:19:22,031 - #47 prvi
INFO  23:19:22,031 - #36 ,
INFO  23:19:22,031 - #47 drugi
INFO  23:19:22,031 - #34 ;
INFO  23:19:22,032 - #47 bool
INFO  23:19:22,032 - #47 treci
INFO  23:19:22,032 - #34 ;
INFO  23:19:22,032 - #42 {
INFO  23:19:22,032 - #47 treci
INFO  23:19:22,032 - #31 =
INFO  23:19:22,032 - #47 testtest
INFO  23:19:22,032 - #38 (
INFO  23:19:22,032 - #47 prvi
INFO  23:19:22,033 - #36 ,
INFO  23:19:22,033 - #47 drugi
INFO  23:19:22,033 - #36 ,
INFO  23:19:22,033 - #47 treci
INFO  23:19:22,033 - #39 )
INFO  23:19:22,034 - #34 ;
INFO  23:19:22,034 - #11 return
INFO  23:19:22,034 - #46 2
INFO  23:19:22,034 - #34 ;
INFO  23:19:22,034 - #43 }
INFO  23:19:22,034 - #43 }
INFO  23:19:22,043 - Program(
  ProgName(
   test302
  ) [ProgName]
  NamespaceList(
    NoNamespaceList(
    ) [NoNamespaceList]
    Namespace(
      NamespaceName(
       Unpacking
      ) [NamespaceName]
      NamespaceDecls(
        NamespaceDecls(
          NamespaceDecls(
            NamespaceDecls(
              NoNamespaceDecls(
              ) [NoNamespaceDecls]
              NamespaceVarDecl(
                Type(
                 int
                ) [Type]
                MultipleVarDecls(
                  SingleVarDecl(
                    VarNameDecl(
                     a
                    ) [VarNameDecl]
                  ) [SingleVarDecl]
                  VarNameDecl(
                   b
                  ) [VarNameDecl]
                ) [MultipleVarDecls]
              ) [NamespaceVarDecl]
            ) [NamespaceDecls]
            NamespaceVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 niz
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [NamespaceVarDecl]
          ) [NamespaceDecls]
          NamespaceVarDecl(
            Type(
             int
            ) [Type]
            SingleVarDecl(
              VarArrayNameDecl(
               arr
              ) [VarArrayNameDecl]
            ) [SingleVarDecl]
          ) [NamespaceVarDecl]
        ) [NamespaceDecls]
        NamespaceVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarArrayNameDecl(
             buarr
            ) [VarArrayNameDecl]
          ) [SingleVarDecl]
        ) [NamespaceVarDecl]
      ) [NamespaceDecls]
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               int
              ) [Type]
            ) [MethRetType]
           main
          ) [MethodTypeName]
          NoFormParam(
          ) [NoFormParam]
          NoMethVar(
          ) [NoMethVar]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   2
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
    ) [Namespace]
  ) [NamespaceList]
  ProgramDecls(
    ProgramDecls(
      ProgramDecls(
        ProgramDecls(
          ProgramDecls(
            NoProgramDecls(
            ) [NoProgramDecls]
            ProgramVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 nizic
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [ProgramVarDecl]
          ) [ProgramDecls]
          ProgramConstDecl(
            Type(
             bool
            ) [Type]
            SingleConstDecl(
              ConstDecl(
               ok
                BoolConst(
                 false
                ) [BoolConst]
              ) [ConstDecl]
            ) [SingleConstDecl]
          ) [ProgramConstDecl]
        ) [ProgramDecls]
        ProgramVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             pokusaj
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [ProgramVarDecl]
      ) [ProgramDecls]
      ProgramVarDecl(
        Type(
         int
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           dd
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [ProgramVarDecl]
    ) [ProgramDecls]
    ProgramVarDecl(
      Type(
       char
      ) [Type]
      SingleVarDecl(
        VarNameDecl(
         slovo
        ) [VarNameDecl]
      ) [SingleVarDecl]
    ) [ProgramVarDecl]
  ) [ProgramDecls]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecl(
          ) [NoMethodDecl]
          MethodDecl(
            MethodTypeName(
              MethRetVoid(
              ) [MethRetVoid]
             funkcija
            ) [MethodTypeName]
            NoFormParam(
            ) [NoFormParam]
            MethodVars(
              NoMethVar(
              ) [NoMethVar]
              Type(
               int
              ) [Type]
              MultipleVarDecls(
                SingleVarDecl(
                  VarNameDecl(
                   c
                  ) [VarNameDecl]
                ) [SingleVarDecl]
                VarNameDecl(
                 d
                ) [VarNameDecl]
              ) [MultipleVarDecls]
            ) [MethodVars]
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            NoStmt(
                            ) [NoStmt]
                            DesignatorStmt(
                              DesigStmtActions(
                                DesigArray(
                                 nizic
                                  PosTermExpr(
                                    FactorTerm(
                                      NumFactor(
                                       3
                                      ) [NumFactor]
                                    ) [FactorTerm]
                                  ) [PosTermExpr]
                                ) [DesigArray]
                                DesigInc(
                                ) [DesigInc]
                              ) [DesigStmtActions]
                            ) [DesignatorStmt]
                          ) [Statements]
                          DesignatorStmt(
                            DesigStmtActions(
                              DesigArray(
                               nizic
                                PosTermExpr(
                                  FactorTerm(
                                    NumFactor(
                                     3
                                    ) [NumFactor]
                                  ) [FactorTerm]
                                ) [PosTermExpr]
                              ) [DesigArray]
                              DesigDec(
                              ) [DesigDec]
                            ) [DesigStmtActions]
                          ) [DesignatorStmt]
                        ) [Statements]
                        DesignatorStmt(
                          DesigStmtActions(
                            DesigVar(
                             dd
                            ) [DesigVar]
                            DesigInc(
                            ) [DesigInc]
                          ) [DesigStmtActions]
                        ) [DesignatorStmt]
                      ) [Statements]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          DesigDec(
                          ) [DesigDec]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigArray(
                         Unpacking
                         niz
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ScopeDesigArray]
                        DesigInc(
                        ) [DesigInc]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  ReadExpr(
                    DesigVar(
                     pokusaj
                    ) [DesigVar]
                  ) [ReadExpr]
                ) [Statements]
                ReadExpr(
                  ScopeDesigVar(
                   Unpacking
                   a
                  ) [ScopeDesigVar]
                ) [ReadExpr]
              ) [Statements]
              PrintStmt(
                PosTermExpr(
                  FactorTerm(
                    NumFactor(
                     3
                    ) [NumFactor]
                  ) [FactorTerm]
                ) [PosTermExpr]
                PrintVar(
                 2
                ) [PrintVar]
              ) [PrintStmt]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               bool
              ) [Type]
            ) [MethRetType]
           testtest
          ) [MethodTypeName]
          FormParams(
            FormCommaParamDecl(
              FormCommaParamDecl(
                FormParamDecl(
                  FormParamVar(
                    Type(
                     int
                    ) [Type]
                   param1
                  ) [FormParamVar]
                ) [FormParamDecl]
                FormParamVar(
                  Type(
                   int
                  ) [Type]
                 param2
                ) [FormParamVar]
              ) [FormCommaParamDecl]
              FormParamVar(
                Type(
                 char
                ) [Type]
               param3
              ) [FormParamVar]
            ) [FormCommaParamDecl]
          ) [FormParams]
          MethodVars(
            NoMethVar(
            ) [NoMethVar]
            Type(
             bool
            ) [Type]
            MultipleVarDecls(
              SingleVarDecl(
                VarNameDecl(
                 c
                ) [VarNameDecl]
              ) [SingleVarDecl]
              VarNameDecl(
               d
              ) [VarNameDecl]
            ) [MultipleVarDecls]
          ) [MethodVars]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  VarFactor(
                    DesigVar(
                     c
                    ) [DesigVar]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        MethodTypeName(
          MethRetType(
            Type(
             int
            ) [Type]
          ) [MethRetType]
         test
        ) [MethodTypeName]
        NoFormParam(
        ) [NoFormParam]
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             c
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [MethodVars]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          AssignExpr(
                            PosTermExpr(
                              MulTerm(
                                FactorTerm(
                                  VarFactor(
                                    ScopeDesigVar(
                                     Unpacking
                                     a
                                    ) [ScopeDesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                                Mul(
                                ) [Mul]
                                VarFactor(
                                  DesigVar(
                                   dd
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [MulTerm]
                            ) [PosTermExpr]
                          ) [AssignExpr]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigVar(
                         Unpacking
                         a
                        ) [ScopeDesigVar]
                        AssignExpr(
                          AddExpr(
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                            Add(
                            ) [Add]
                            MulTerm(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                              Mul(
                              ) [Mul]
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [MulTerm]
                          ) [AddExpr]
                        ) [AssignExpr]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    DesigStmtActions(
                      ScopeDesigVar(
                       Unpacking
                       a
                      ) [ScopeDesigVar]
                      AssignExpr(
                        NegTermeExpr(
                          FactorTerm(
                            VarFactor(
                              DesigVar(
                               dd
                              ) [DesigVar]
                            ) [VarFactor]
                          ) [FactorTerm]
                        ) [NegTermeExpr]
                      ) [AssignExpr]
                    ) [DesigStmtActions]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          NumFactor(
                           3
                          ) [NumFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                DesigStmtActions(
                  DesigVar(
                   dd
                  ) [DesigVar]
                  AssignExpr(
                    NegTermeExpr(
                      FactorTerm(
                        NumFactor(
                         9
                        ) [NumFactor]
                      ) [FactorTerm]
                    ) [NegTermeExpr]
                  ) [AssignExpr]
                ) [DesigStmtActions]
              ) [DesignatorStmt]
            ) [Statements]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   3
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
          IfElseStmt(
            ConditionCondTerm(
              CondTermFact(
                RelOpCondFact(
                  PosTermExpr(
                    FactorTerm(
                      VarFactor(
                        DesigVar(
                         pokusaj
                        ) [DesigVar]
                      ) [VarFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                  EqlOp(
                  ) [EqlOp]
                  PosTermExpr(
                    FactorTerm(
                      BoolFactor(
                       true
                      ) [BoolFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                ) [RelOpCondFact]
              ) [CondTermFact]
            ) [ConditionCondTerm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    DesigInc(
                    ) [DesigInc]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     c
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          BoolFactor(
                           true
                          ) [BoolFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
          ) [IfElseStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        MethRetType(
          Type(
           int
          ) [Type]
        ) [MethRetType]
       main
      ) [MethodTypeName]
      NoFormParam(
      ) [NoFormParam]
      MethodVars(
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           int
          ) [Type]
          MultipleVarDecls(
            SingleVarDecl(
              VarNameDecl(
               prvi
              ) [VarNameDecl]
            ) [SingleVarDecl]
            VarNameDecl(
             drugi
            ) [VarNameDecl]
          ) [MultipleVarDecls]
        ) [MethodVars]
        Type(
         bool
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           treci
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [MethodVars]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          DesignatorStmt(
            DesigStmtActions(
              DesigVar(
               treci
              ) [DesigVar]
              AssignExpr(
                PosTermExpr(
                  FactorTerm(
                    FactorFuncCall(
                      DesigVar(
                       testtest
                      ) [DesigVar]
                      ActPars(
                        ActualParamsList(
                          ActualParamsList(
                            ActualParam(
                              PosTermExpr(
                                FactorTerm(
                                  VarFactor(
                                    DesigVar(
                                     prvi
                                    ) [DesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                              ) [PosTermExpr]
                            ) [ActualParam]
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  DesigVar(
                                   drugi
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                          ) [ActualParamsList]
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 treci
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ActualParamsList]
                      ) [ActPars]
                    ) [FactorFuncCall]
                  ) [FactorTerm]
                ) [PosTermExpr]
              ) [AssignExpr]
            ) [DesigStmtActions]
          ) [DesignatorStmt]
        ) [Statements]
        ReturnExpr(
          PosTermExpr(
            FactorTerm(
              NumFactor(
               2
              ) [NumFactor]
            ) [FactorTerm]
          ) [PosTermExpr]
        ) [ReturnExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:19:22,051 - Deklarisana promenljiva Unpacking::a na liniji 6
INFO  23:19:22,052 - Deklarisana promenljiva Unpacking::b na liniji 6
INFO  23:19:22,052 - Deklarisana promenljiva Unpacking::niz na liniji 7
INFO  23:19:22,052 - Deklarisana promenljiva Unpacking::arr na liniji 8
INFO  23:19:22,052 - Deklarisana promenljiva Unpacking::buarr na liniji 9
INFO  23:19:22,052 - Obradjuje se funkcija main na liniji 11
INFO  23:19:22,053 - Deklarisana promenljiva nizic na liniji 16
INFO  23:19:22,053 - Deklarisana konstanta ok na liniji 17
INFO  23:19:22,053 - Deklarisana promenljiva pokusaj na liniji 18
INFO  23:19:22,053 - Deklarisana promenljiva dd na liniji 19
INFO  23:19:22,053 - Deklarisana promenljiva slovo na liniji 20
INFO  23:19:22,054 - Obradjuje se funkcija funkcija na liniji 23
INFO  23:19:22,054 - Deklarisana promenljiva c na liniji 23
INFO  23:19:22,054 - Deklarisana promenljiva d na liniji 23
INFO  23:19:22,054 - Pretraga na 25(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 25
INFO  23:19:22,056 - Pretraga na 26(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 26
INFO  23:19:22,056 - Pretraga na 29(Unpacking::niz), nadjeno Var Unpacking::niz: Arr of int, 2, 0  na liniji 29
INFO  23:19:22,057 - Pretraga na 32(Unpacking::a), nadjeno Var Unpacking::a: int, 0, 0  na liniji 32
INFO  23:19:22,058 - Obradjuje se funkcija testtest na liniji 38
INFO  23:19:22,058 - Deklarisan parametar param1 metode: testtest. na liniji 38
INFO  23:19:22,058 - Deklarisan parametar param2 metode: testtest. na liniji 38
INFO  23:19:22,059 - Deklarisan parametar param3 metode: testtest. na liniji 38
INFO  23:19:22,059 - Deklarisana promenljiva c na liniji 38
INFO  23:19:22,060 - Deklarisana promenljiva d na liniji 38
INFO  23:19:22,060 - Obradjuje se funkcija test na liniji 42
INFO  23:19:22,060 - Deklarisana promenljiva c na liniji 42
INFO  23:19:22,061 - Pretraga na 45(Unpacking::a), nadjeno Var Unpacking::a: int, 0, 0  na liniji 45
INFO  23:19:22,061 - Pretraga na 46(Unpacking::a), nadjeno Var Unpacking::a: int, 0, 0  na liniji 46
INFO  23:19:22,062 - Pretraga na 46(Unpacking::a), nadjeno Var Unpacking::a: int, 0, 0  na liniji 46
INFO  23:19:22,063 - Pretraga na 46(Unpacking::a), nadjeno Var Unpacking::a: int, 0, 0  na liniji 46
INFO  23:19:22,063 - Pretraga na 47(Unpacking::a), nadjeno Var Unpacking::a: int, 0, 0  na liniji 47
INFO  23:19:22,065 - Obradjuje se funkcija main na liniji 61
INFO  23:19:22,065 - Deklarisana promenljiva prvi na liniji 62
INFO  23:19:22,065 - Deklarisana promenljiva drugi na liniji 62
INFO  23:19:22,065 - Deklarisana promenljiva treci na liniji 63
INFO  23:21:15,119 - Compiling source file: C:\Users\Zoki\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:21:15,195 - #2 program
INFO  23:21:15,196 - #47 test302
INFO  23:21:15,197 - #17 namespace
INFO  23:21:15,200 - #47 Unpacking
INFO  23:21:15,200 - #42 {
INFO  23:21:15,202 - #47 int
INFO  23:21:15,204 - #47 a
INFO  23:21:15,205 - #36 ,
INFO  23:21:15,205 - #47 b
INFO  23:21:15,206 - #34 ;
INFO  23:21:15,206 - #47 int
INFO  23:21:15,206 - #47 niz
INFO  23:21:15,206 - #40 [
INFO  23:21:15,207 - #41 ]
INFO  23:21:15,207 - #34 ;
INFO  23:21:15,207 - #47 int
INFO  23:21:15,207 - #47 arr
INFO  23:21:15,207 - #40 [
INFO  23:21:15,207 - #41 ]
INFO  23:21:15,207 - #34 ;
INFO  23:21:15,208 - #47 bool
INFO  23:21:15,208 - #47 buarr
INFO  23:21:15,208 - #40 [
INFO  23:21:15,208 - #41 ]
INFO  23:21:15,208 - #34 ;
INFO  23:21:15,209 - #42 {
INFO  23:21:15,209 - #47 int
INFO  23:21:15,210 - #47 main
INFO  23:21:15,211 - #38 (
INFO  23:21:15,212 - #39 )
INFO  23:21:15,213 - #42 {
INFO  23:21:15,214 - #11 return
INFO  23:21:15,215 - #46 2
INFO  23:21:15,216 - #34 ;
INFO  23:21:15,216 - #43 }
INFO  23:21:15,217 - #43 }
INFO  23:21:15,218 - #43 }
INFO  23:21:15,218 - #47 int
INFO  23:21:15,220 - #47 nizic
INFO  23:21:15,220 - #40 [
INFO  23:21:15,221 - #41 ]
INFO  23:21:15,221 - #34 ;
INFO  23:21:15,221 - #6 const
INFO  23:21:15,221 - #47 bool
INFO  23:21:15,222 - #47 ok
INFO  23:21:15,222 - #31 =
INFO  23:21:15,222 - #48 false
INFO  23:21:15,222 - #34 ;
INFO  23:21:15,224 - #47 bool
INFO  23:21:15,224 - #47 pokusaj
INFO  23:21:15,224 - #34 ;
INFO  23:21:15,225 - #47 int
INFO  23:21:15,225 - #47 dd
INFO  23:21:15,225 - #34 ;
INFO  23:21:15,225 - #47 char
INFO  23:21:15,225 - #47 slovo
INFO  23:21:15,225 - #34 ;
INFO  23:21:15,225 - #42 {
INFO  23:21:15,226 - #12 void
INFO  23:21:15,226 - #47 funkcija
INFO  23:21:15,227 - #38 (
INFO  23:21:15,227 - #39 )
INFO  23:21:15,227 - #47 int
INFO  23:21:15,228 - #47 c
INFO  23:21:15,228 - #36 ,
INFO  23:21:15,228 - #47 d
INFO  23:21:15,228 - #34 ;
INFO  23:21:15,228 - #42 {
INFO  23:21:15,229 - #47 nizic
INFO  23:21:15,229 - #40 [
INFO  23:21:15,229 - #46 3
INFO  23:21:15,229 - #41 ]
INFO  23:21:15,229 - #32 ++
INFO  23:21:15,229 - #34 ;
INFO  23:21:15,231 - #47 nizic
INFO  23:21:15,231 - #40 [
INFO  23:21:15,231 - #46 3
INFO  23:21:15,232 - #41 ]
INFO  23:21:15,232 - #33 --
INFO  23:21:15,232 - #34 ;
INFO  23:21:15,233 - #47 dd
INFO  23:21:15,233 - #32 ++
INFO  23:21:15,234 - #34 ;
INFO  23:21:15,234 - #47 dd
INFO  23:21:15,234 - #33 --
INFO  23:21:15,235 - #34 ;
INFO  23:21:15,235 - #47 Unpacking
INFO  23:21:15,235 - #45 ::
INFO  23:21:15,235 - #47 niz
INFO  23:21:15,236 - #40 [
INFO  23:21:15,236 - #47 dd
INFO  23:21:15,238 - #41 ]
INFO  23:21:15,239 - #32 ++
INFO  23:21:15,240 - #34 ;
INFO  23:21:15,240 - #10 read
INFO  23:21:15,241 - #38 (
INFO  23:21:15,241 - #47 pokusaj
INFO  23:21:15,241 - #39 )
INFO  23:21:15,242 - #34 ;
INFO  23:21:15,242 - #10 read
INFO  23:21:15,242 - #38 (
INFO  23:21:15,243 - #47 Unpacking
INFO  23:21:15,243 - #45 ::
INFO  23:21:15,244 - #47 a
INFO  23:21:15,244 - #39 )
INFO  23:21:15,244 - #34 ;
INFO  23:21:15,244 - #9 print
INFO  23:21:15,245 - #38 (
INFO  23:21:15,245 - #46 3
INFO  23:21:15,245 - #36 ,
INFO  23:21:15,246 - #46 2
INFO  23:21:15,246 - #39 )
INFO  23:21:15,246 - #34 ;
INFO  23:21:15,247 - #43 }
INFO  23:21:15,247 - #47 bool
INFO  23:21:15,248 - #47 testtest
INFO  23:21:15,248 - #38 (
INFO  23:21:15,249 - #47 int
INFO  23:21:15,249 - #47 param1
INFO  23:21:15,250 - #36 ,
INFO  23:21:15,250 - #47 int
INFO  23:21:15,251 - #47 param2
INFO  23:21:15,251 - #36 ,
INFO  23:21:15,251 - #47 char
INFO  23:21:15,251 - #47 param3
INFO  23:21:15,251 - #39 )
INFO  23:21:15,252 - #47 bool
INFO  23:21:15,252 - #47 c
INFO  23:21:15,252 - #36 ,
INFO  23:21:15,252 - #47 d
INFO  23:21:15,252 - #34 ;
INFO  23:21:15,253 - #42 {
INFO  23:21:15,253 - #11 return
INFO  23:21:15,253 - #47 c
INFO  23:21:15,253 - #34 ;
INFO  23:21:15,253 - #43 }
INFO  23:21:15,253 - #47 int
INFO  23:21:15,253 - #47 test
INFO  23:21:15,253 - #38 (
INFO  23:21:15,253 - #39 )
INFO  23:21:15,253 - #47 bool
INFO  23:21:15,254 - #47 c
INFO  23:21:15,254 - #34 ;
INFO  23:21:15,254 - #42 {
INFO  23:21:15,254 - #47 dd
INFO  23:21:15,254 - #31 =
INFO  23:21:15,254 - #47 Unpacking
INFO  23:21:15,254 - #45 ::
INFO  23:21:15,254 - #47 a
INFO  23:21:15,254 - #20 *
INFO  23:21:15,254 - #47 dd
INFO  23:21:15,256 - #34 ;
INFO  23:21:15,256 - #47 Unpacking
INFO  23:21:15,256 - #45 ::
INFO  23:21:15,257 - #47 a
INFO  23:21:15,257 - #31 =
INFO  23:21:15,257 - #47 Unpacking
INFO  23:21:15,257 - #45 ::
INFO  23:21:15,257 - #47 a
INFO  23:21:15,257 - #18 +
INFO  23:21:15,257 - #47 Unpacking
INFO  23:21:15,259 - #45 ::
INFO  23:21:15,259 - #47 a
INFO  23:21:15,259 - #20 *
INFO  23:21:15,259 - #47 dd
INFO  23:21:15,260 - #34 ;
INFO  23:21:15,260 - #47 Unpacking
INFO  23:21:15,260 - #45 ::
INFO  23:21:15,260 - #47 a
INFO  23:21:15,260 - #31 =
INFO  23:21:15,261 - #19 -
INFO  23:21:15,261 - #47 dd
INFO  23:21:15,261 - #34 ;
INFO  23:21:15,261 - #47 dd
INFO  23:21:15,262 - #31 =
INFO  23:21:15,262 - #46 3
INFO  23:21:15,262 - #34 ;
INFO  23:21:15,262 - #47 dd
INFO  23:21:15,262 - #31 =
INFO  23:21:15,263 - #19 -
INFO  23:21:15,263 - #46 9
INFO  23:21:15,263 - #34 ;
INFO  23:21:15,263 - #11 return
INFO  23:21:15,264 - #46 3
INFO  23:21:15,264 - #34 ;
INFO  23:21:15,264 - #7 if
INFO  23:21:15,264 - #38 (
INFO  23:21:15,264 - #47 pokusaj
INFO  23:21:15,264 - #23 ==
INFO  23:21:15,266 - #48 true
INFO  23:21:15,268 - #39 )
INFO  23:21:15,269 - #42 {
INFO  23:21:15,269 - #47 dd
INFO  23:21:15,269 - #32 ++
INFO  23:21:15,269 - #34 ;
INFO  23:21:15,270 - #43 }
INFO  23:21:15,270 - #5 else
INFO  23:21:15,270 - #42 {
INFO  23:21:15,270 - #47 c
INFO  23:21:15,270 - #31 =
INFO  23:21:15,270 - #48 true
INFO  23:21:15,271 - #34 ;
INFO  23:21:15,271 - #43 }
INFO  23:21:15,271 - #43 }
INFO  23:21:15,271 - #47 int
INFO  23:21:15,272 - #47 main
INFO  23:21:15,272 - #38 (
INFO  23:21:15,272 - #39 )
INFO  23:21:15,272 - #47 int
INFO  23:21:15,272 - #47 prvi
INFO  23:21:15,273 - #36 ,
INFO  23:21:15,273 - #47 drugi
INFO  23:21:15,273 - #34 ;
INFO  23:21:15,273 - #47 bool
INFO  23:21:15,274 - #47 treci
INFO  23:21:15,274 - #34 ;
INFO  23:21:15,274 - #42 {
INFO  23:21:15,274 - #47 treci
INFO  23:21:15,274 - #31 =
INFO  23:21:15,274 - #47 testtest
INFO  23:21:15,274 - #38 (
INFO  23:21:15,274 - #47 prvi
INFO  23:21:15,274 - #36 ,
INFO  23:21:15,275 - #47 drugi
INFO  23:21:15,275 - #36 ,
INFO  23:21:15,275 - #47 treci
INFO  23:21:15,276 - #39 )
INFO  23:21:15,276 - #34 ;
INFO  23:21:15,276 - #11 return
INFO  23:21:15,276 - #46 2
INFO  23:21:15,276 - #34 ;
INFO  23:21:15,276 - #43 }
INFO  23:21:15,277 - #43 }
INFO  23:21:15,286 - Program(
  ProgName(
   test302
  ) [ProgName]
  NamespaceList(
    NoNamespaceList(
    ) [NoNamespaceList]
    Namespace(
      NamespaceName(
       Unpacking
      ) [NamespaceName]
      NamespaceDecls(
        NamespaceDecls(
          NamespaceDecls(
            NamespaceDecls(
              NoNamespaceDecls(
              ) [NoNamespaceDecls]
              NamespaceVarDecl(
                Type(
                 int
                ) [Type]
                MultipleVarDecls(
                  SingleVarDecl(
                    VarNameDecl(
                     a
                    ) [VarNameDecl]
                  ) [SingleVarDecl]
                  VarNameDecl(
                   b
                  ) [VarNameDecl]
                ) [MultipleVarDecls]
              ) [NamespaceVarDecl]
            ) [NamespaceDecls]
            NamespaceVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 niz
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [NamespaceVarDecl]
          ) [NamespaceDecls]
          NamespaceVarDecl(
            Type(
             int
            ) [Type]
            SingleVarDecl(
              VarArrayNameDecl(
               arr
              ) [VarArrayNameDecl]
            ) [SingleVarDecl]
          ) [NamespaceVarDecl]
        ) [NamespaceDecls]
        NamespaceVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarArrayNameDecl(
             buarr
            ) [VarArrayNameDecl]
          ) [SingleVarDecl]
        ) [NamespaceVarDecl]
      ) [NamespaceDecls]
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               int
              ) [Type]
            ) [MethRetType]
           main
          ) [MethodTypeName]
          NoFormParam(
          ) [NoFormParam]
          NoMethVar(
          ) [NoMethVar]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   2
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
    ) [Namespace]
  ) [NamespaceList]
  ProgramDecls(
    ProgramDecls(
      ProgramDecls(
        ProgramDecls(
          ProgramDecls(
            NoProgramDecls(
            ) [NoProgramDecls]
            ProgramVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 nizic
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [ProgramVarDecl]
          ) [ProgramDecls]
          ProgramConstDecl(
            Type(
             bool
            ) [Type]
            SingleConstDecl(
              ConstDecl(
               ok
                BoolConst(
                 false
                ) [BoolConst]
              ) [ConstDecl]
            ) [SingleConstDecl]
          ) [ProgramConstDecl]
        ) [ProgramDecls]
        ProgramVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             pokusaj
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [ProgramVarDecl]
      ) [ProgramDecls]
      ProgramVarDecl(
        Type(
         int
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           dd
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [ProgramVarDecl]
    ) [ProgramDecls]
    ProgramVarDecl(
      Type(
       char
      ) [Type]
      SingleVarDecl(
        VarNameDecl(
         slovo
        ) [VarNameDecl]
      ) [SingleVarDecl]
    ) [ProgramVarDecl]
  ) [ProgramDecls]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecl(
          ) [NoMethodDecl]
          MethodDecl(
            MethodTypeName(
              MethRetVoid(
              ) [MethRetVoid]
             funkcija
            ) [MethodTypeName]
            NoFormParam(
            ) [NoFormParam]
            MethodVars(
              NoMethVar(
              ) [NoMethVar]
              Type(
               int
              ) [Type]
              MultipleVarDecls(
                SingleVarDecl(
                  VarNameDecl(
                   c
                  ) [VarNameDecl]
                ) [SingleVarDecl]
                VarNameDecl(
                 d
                ) [VarNameDecl]
              ) [MultipleVarDecls]
            ) [MethodVars]
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            NoStmt(
                            ) [NoStmt]
                            DesignatorStmt(
                              DesigStmtActions(
                                DesigArray(
                                 nizic
                                  PosTermExpr(
                                    FactorTerm(
                                      NumFactor(
                                       3
                                      ) [NumFactor]
                                    ) [FactorTerm]
                                  ) [PosTermExpr]
                                ) [DesigArray]
                                DesigInc(
                                ) [DesigInc]
                              ) [DesigStmtActions]
                            ) [DesignatorStmt]
                          ) [Statements]
                          DesignatorStmt(
                            DesigStmtActions(
                              DesigArray(
                               nizic
                                PosTermExpr(
                                  FactorTerm(
                                    NumFactor(
                                     3
                                    ) [NumFactor]
                                  ) [FactorTerm]
                                ) [PosTermExpr]
                              ) [DesigArray]
                              DesigDec(
                              ) [DesigDec]
                            ) [DesigStmtActions]
                          ) [DesignatorStmt]
                        ) [Statements]
                        DesignatorStmt(
                          DesigStmtActions(
                            DesigVar(
                             dd
                            ) [DesigVar]
                            DesigInc(
                            ) [DesigInc]
                          ) [DesigStmtActions]
                        ) [DesignatorStmt]
                      ) [Statements]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          DesigDec(
                          ) [DesigDec]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigArray(
                         Unpacking
                         niz
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ScopeDesigArray]
                        DesigInc(
                        ) [DesigInc]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  ReadExpr(
                    DesigVar(
                     pokusaj
                    ) [DesigVar]
                  ) [ReadExpr]
                ) [Statements]
                ReadExpr(
                  ScopeDesigVar(
                   Unpacking
                   a
                  ) [ScopeDesigVar]
                ) [ReadExpr]
              ) [Statements]
              PrintStmt(
                PosTermExpr(
                  FactorTerm(
                    NumFactor(
                     3
                    ) [NumFactor]
                  ) [FactorTerm]
                ) [PosTermExpr]
                PrintVar(
                 2
                ) [PrintVar]
              ) [PrintStmt]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               bool
              ) [Type]
            ) [MethRetType]
           testtest
          ) [MethodTypeName]
          FormParams(
            FormCommaParamDecl(
              FormCommaParamDecl(
                FormParamDecl(
                  FormParamVar(
                    Type(
                     int
                    ) [Type]
                   param1
                  ) [FormParamVar]
                ) [FormParamDecl]
                FormParamVar(
                  Type(
                   int
                  ) [Type]
                 param2
                ) [FormParamVar]
              ) [FormCommaParamDecl]
              FormParamVar(
                Type(
                 char
                ) [Type]
               param3
              ) [FormParamVar]
            ) [FormCommaParamDecl]
          ) [FormParams]
          MethodVars(
            NoMethVar(
            ) [NoMethVar]
            Type(
             bool
            ) [Type]
            MultipleVarDecls(
              SingleVarDecl(
                VarNameDecl(
                 c
                ) [VarNameDecl]
              ) [SingleVarDecl]
              VarNameDecl(
               d
              ) [VarNameDecl]
            ) [MultipleVarDecls]
          ) [MethodVars]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  VarFactor(
                    DesigVar(
                     c
                    ) [DesigVar]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        MethodTypeName(
          MethRetType(
            Type(
             int
            ) [Type]
          ) [MethRetType]
         test
        ) [MethodTypeName]
        NoFormParam(
        ) [NoFormParam]
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             c
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [MethodVars]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          AssignExpr(
                            PosTermExpr(
                              MulTerm(
                                FactorTerm(
                                  VarFactor(
                                    ScopeDesigVar(
                                     Unpacking
                                     a
                                    ) [ScopeDesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                                Mul(
                                ) [Mul]
                                VarFactor(
                                  DesigVar(
                                   dd
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [MulTerm]
                            ) [PosTermExpr]
                          ) [AssignExpr]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigVar(
                         Unpacking
                         a
                        ) [ScopeDesigVar]
                        AssignExpr(
                          AddExpr(
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                            Add(
                            ) [Add]
                            MulTerm(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                              Mul(
                              ) [Mul]
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [MulTerm]
                          ) [AddExpr]
                        ) [AssignExpr]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    DesigStmtActions(
                      ScopeDesigVar(
                       Unpacking
                       a
                      ) [ScopeDesigVar]
                      AssignExpr(
                        NegTermeExpr(
                          FactorTerm(
                            VarFactor(
                              DesigVar(
                               dd
                              ) [DesigVar]
                            ) [VarFactor]
                          ) [FactorTerm]
                        ) [NegTermeExpr]
                      ) [AssignExpr]
                    ) [DesigStmtActions]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          NumFactor(
                           3
                          ) [NumFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                DesigStmtActions(
                  DesigVar(
                   dd
                  ) [DesigVar]
                  AssignExpr(
                    NegTermeExpr(
                      FactorTerm(
                        NumFactor(
                         9
                        ) [NumFactor]
                      ) [FactorTerm]
                    ) [NegTermeExpr]
                  ) [AssignExpr]
                ) [DesigStmtActions]
              ) [DesignatorStmt]
            ) [Statements]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   3
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
          IfElseStmt(
            ConditionCondTerm(
              CondTermFact(
                RelOpCondFact(
                  PosTermExpr(
                    FactorTerm(
                      VarFactor(
                        DesigVar(
                         pokusaj
                        ) [DesigVar]
                      ) [VarFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                  EqlOp(
                  ) [EqlOp]
                  PosTermExpr(
                    FactorTerm(
                      BoolFactor(
                       true
                      ) [BoolFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                ) [RelOpCondFact]
              ) [CondTermFact]
            ) [ConditionCondTerm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    DesigInc(
                    ) [DesigInc]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     c
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          BoolFactor(
                           true
                          ) [BoolFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
          ) [IfElseStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        MethRetType(
          Type(
           int
          ) [Type]
        ) [MethRetType]
       main
      ) [MethodTypeName]
      NoFormParam(
      ) [NoFormParam]
      MethodVars(
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           int
          ) [Type]
          MultipleVarDecls(
            SingleVarDecl(
              VarNameDecl(
               prvi
              ) [VarNameDecl]
            ) [SingleVarDecl]
            VarNameDecl(
             drugi
            ) [VarNameDecl]
          ) [MultipleVarDecls]
        ) [MethodVars]
        Type(
         bool
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           treci
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [MethodVars]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          DesignatorStmt(
            DesigStmtActions(
              DesigVar(
               treci
              ) [DesigVar]
              AssignExpr(
                PosTermExpr(
                  FactorTerm(
                    FactorFuncCall(
                      DesigVar(
                       testtest
                      ) [DesigVar]
                      ActPars(
                        ActualParamsList(
                          ActualParamsList(
                            ActualParam(
                              PosTermExpr(
                                FactorTerm(
                                  VarFactor(
                                    DesigVar(
                                     prvi
                                    ) [DesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                              ) [PosTermExpr]
                            ) [ActualParam]
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  DesigVar(
                                   drugi
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                          ) [ActualParamsList]
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 treci
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ActualParamsList]
                      ) [ActPars]
                    ) [FactorFuncCall]
                  ) [FactorTerm]
                ) [PosTermExpr]
              ) [AssignExpr]
            ) [DesigStmtActions]
          ) [DesignatorStmt]
        ) [Statements]
        ReturnExpr(
          PosTermExpr(
            FactorTerm(
              NumFactor(
               2
              ) [NumFactor]
            ) [FactorTerm]
          ) [PosTermExpr]
        ) [ReturnExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:21:15,294 - Deklarisana promenljiva Unpacking::a na liniji 6
INFO  23:21:15,295 - Deklarisana promenljiva Unpacking::b na liniji 6
INFO  23:21:15,295 - Deklarisana promenljiva Unpacking::niz na liniji 7
INFO  23:21:15,295 - Deklarisana promenljiva Unpacking::arr na liniji 8
INFO  23:21:15,295 - Deklarisana promenljiva Unpacking::buarr na liniji 9
INFO  23:21:15,295 - Obradjuje se funkcija main na liniji 11
INFO  23:21:15,296 - Deklarisana promenljiva nizic na liniji 16
INFO  23:21:15,296 - Deklarisana konstanta ok na liniji 17
INFO  23:21:15,297 - Deklarisana promenljiva pokusaj na liniji 18
INFO  23:21:15,297 - Deklarisana promenljiva dd na liniji 19
INFO  23:21:15,297 - Deklarisana promenljiva slovo na liniji 20
INFO  23:21:15,297 - Obradjuje se funkcija funkcija na liniji 23
INFO  23:21:15,297 - Deklarisana promenljiva c na liniji 23
INFO  23:21:15,299 - Deklarisana promenljiva d na liniji 23
INFO  23:21:15,300 - Pretraga na 25(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 25
INFO  23:21:15,302 - Pretraga na 26(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 26
INFO  23:21:15,302 - Pretraga na 29(Unpacking::niz), nadjeno Var Unpacking::niz: Arr of int, 2, 0  na liniji 29
INFO  23:21:15,303 - Obradjuje se funkcija testtest na liniji 38
INFO  23:21:15,303 - Deklarisan parametar param1 metode: testtest. na liniji 38
INFO  23:21:15,304 - Deklarisan parametar param2 metode: testtest. na liniji 38
INFO  23:21:15,304 - Deklarisan parametar param3 metode: testtest. na liniji 38
INFO  23:21:15,305 - Deklarisana promenljiva c na liniji 38
INFO  23:21:15,305 - Deklarisana promenljiva d na liniji 38
INFO  23:21:15,306 - Obradjuje se funkcija test na liniji 42
INFO  23:21:15,306 - Deklarisana promenljiva c na liniji 42
INFO  23:21:15,308 - Obradjuje se funkcija main na liniji 61
INFO  23:21:15,309 - Deklarisana promenljiva prvi na liniji 62
INFO  23:21:15,309 - Deklarisana promenljiva drugi na liniji 62
INFO  23:21:15,309 - Deklarisana promenljiva treci na liniji 63
INFO  23:22:10,344 - Compiling source file: C:\Users\Zoki\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:22:10,420 - #2 program
INFO  23:22:10,420 - #47 test302
INFO  23:22:10,420 - #17 namespace
INFO  23:22:10,422 - #47 Unpacking
INFO  23:22:10,422 - #42 {
INFO  23:22:10,424 - #47 int
INFO  23:22:10,425 - #47 a
INFO  23:22:10,426 - #36 ,
INFO  23:22:10,427 - #47 b
INFO  23:22:10,427 - #34 ;
INFO  23:22:10,427 - #47 int
INFO  23:22:10,428 - #47 niz
INFO  23:22:10,428 - #40 [
INFO  23:22:10,428 - #41 ]
INFO  23:22:10,428 - #34 ;
INFO  23:22:10,428 - #47 int
INFO  23:22:10,429 - #47 arr
INFO  23:22:10,429 - #40 [
INFO  23:22:10,429 - #41 ]
INFO  23:22:10,429 - #34 ;
INFO  23:22:10,429 - #47 bool
INFO  23:22:10,429 - #47 buarr
INFO  23:22:10,430 - #40 [
INFO  23:22:10,430 - #41 ]
INFO  23:22:10,430 - #34 ;
INFO  23:22:10,431 - #42 {
INFO  23:22:10,431 - #47 int
INFO  23:22:10,432 - #47 main
INFO  23:22:10,432 - #38 (
INFO  23:22:10,434 - #39 )
INFO  23:22:10,435 - #42 {
INFO  23:22:10,436 - #11 return
INFO  23:22:10,438 - #46 2
INFO  23:22:10,438 - #34 ;
INFO  23:22:10,438 - #43 }
INFO  23:22:10,439 - #43 }
INFO  23:22:10,440 - #43 }
INFO  23:22:10,440 - #47 int
INFO  23:22:10,443 - #47 nizic
INFO  23:22:10,443 - #40 [
INFO  23:22:10,443 - #41 ]
INFO  23:22:10,443 - #34 ;
INFO  23:22:10,443 - #6 const
INFO  23:22:10,444 - #47 bool
INFO  23:22:10,444 - #47 ok
INFO  23:22:10,444 - #31 =
INFO  23:22:10,444 - #48 false
INFO  23:22:10,445 - #34 ;
INFO  23:22:10,446 - #47 bool
INFO  23:22:10,447 - #47 pokusaj
INFO  23:22:10,447 - #34 ;
INFO  23:22:10,447 - #47 int
INFO  23:22:10,447 - #47 dd
INFO  23:22:10,447 - #34 ;
INFO  23:22:10,447 - #47 char
INFO  23:22:10,447 - #47 slovo
INFO  23:22:10,447 - #34 ;
INFO  23:22:10,448 - #42 {
INFO  23:22:10,448 - #12 void
INFO  23:22:10,448 - #47 funkcija
INFO  23:22:10,449 - #38 (
INFO  23:22:10,449 - #39 )
INFO  23:22:10,450 - #47 int
INFO  23:22:10,450 - #47 c
INFO  23:22:10,451 - #36 ,
INFO  23:22:10,451 - #47 d
INFO  23:22:10,451 - #34 ;
INFO  23:22:10,451 - #42 {
INFO  23:22:10,452 - #47 nizic
INFO  23:22:10,452 - #40 [
INFO  23:22:10,452 - #46 3
INFO  23:22:10,452 - #41 ]
INFO  23:22:10,452 - #32 ++
INFO  23:22:10,453 - #34 ;
INFO  23:22:10,454 - #47 nizic
INFO  23:22:10,454 - #40 [
INFO  23:22:10,454 - #46 3
INFO  23:22:10,454 - #41 ]
INFO  23:22:10,454 - #33 --
INFO  23:22:10,454 - #34 ;
INFO  23:22:10,456 - #47 dd
INFO  23:22:10,456 - #32 ++
INFO  23:22:10,456 - #34 ;
INFO  23:22:10,456 - #47 dd
INFO  23:22:10,456 - #33 --
INFO  23:22:10,456 - #34 ;
INFO  23:22:10,457 - #47 Unpacking
INFO  23:22:10,457 - #45 ::
INFO  23:22:10,457 - #47 niz
INFO  23:22:10,457 - #40 [
INFO  23:22:10,457 - #47 dd
INFO  23:22:10,459 - #41 ]
INFO  23:22:10,460 - #32 ++
INFO  23:22:10,460 - #34 ;
INFO  23:22:10,460 - #10 read
INFO  23:22:10,461 - #38 (
INFO  23:22:10,461 - #47 pokusaj
INFO  23:22:10,461 - #39 )
INFO  23:22:10,461 - #34 ;
INFO  23:22:10,461 - #10 read
INFO  23:22:10,462 - #38 (
INFO  23:22:10,462 - #47 Unpacking
INFO  23:22:10,462 - #45 ::
INFO  23:22:10,462 - #47 a
INFO  23:22:10,463 - #39 )
INFO  23:22:10,463 - #34 ;
INFO  23:22:10,463 - #9 print
INFO  23:22:10,464 - #38 (
INFO  23:22:10,464 - #46 3
INFO  23:22:10,464 - #36 ,
INFO  23:22:10,464 - #46 2
INFO  23:22:10,464 - #39 )
INFO  23:22:10,465 - #34 ;
INFO  23:22:10,465 - #43 }
INFO  23:22:10,465 - #47 bool
INFO  23:22:10,465 - #47 testtest
INFO  23:22:10,465 - #38 (
INFO  23:22:10,466 - #47 int
INFO  23:22:10,466 - #47 param1
INFO  23:22:10,466 - #36 ,
INFO  23:22:10,467 - #47 int
INFO  23:22:10,467 - #47 param2
INFO  23:22:10,468 - #36 ,
INFO  23:22:10,468 - #47 char
INFO  23:22:10,468 - #47 param3
INFO  23:22:10,469 - #39 )
INFO  23:22:10,469 - #47 bool
INFO  23:22:10,469 - #47 c
INFO  23:22:10,469 - #36 ,
INFO  23:22:10,470 - #47 d
INFO  23:22:10,470 - #34 ;
INFO  23:22:10,470 - #42 {
INFO  23:22:10,470 - #11 return
INFO  23:22:10,470 - #47 c
INFO  23:22:10,470 - #34 ;
INFO  23:22:10,470 - #43 }
INFO  23:22:10,471 - #47 int
INFO  23:22:10,471 - #47 test
INFO  23:22:10,471 - #38 (
INFO  23:22:10,471 - #39 )
INFO  23:22:10,471 - #47 bool
INFO  23:22:10,471 - #47 c
INFO  23:22:10,471 - #34 ;
INFO  23:22:10,471 - #42 {
INFO  23:22:10,471 - #47 dd
INFO  23:22:10,471 - #31 =
INFO  23:22:10,471 - #47 Unpacking
INFO  23:22:10,471 - #45 ::
INFO  23:22:10,472 - #47 a
INFO  23:22:10,472 - #20 *
INFO  23:22:10,472 - #47 dd
INFO  23:22:10,473 - #34 ;
INFO  23:22:10,474 - #47 Unpacking
INFO  23:22:10,474 - #45 ::
INFO  23:22:10,474 - #47 a
INFO  23:22:10,474 - #31 =
INFO  23:22:10,475 - #47 Unpacking
INFO  23:22:10,475 - #45 ::
INFO  23:22:10,475 - #47 a
INFO  23:22:10,475 - #18 +
INFO  23:22:10,475 - #47 Unpacking
INFO  23:22:10,477 - #45 ::
INFO  23:22:10,477 - #47 a
INFO  23:22:10,477 - #20 *
INFO  23:22:10,477 - #47 dd
INFO  23:22:10,477 - #34 ;
INFO  23:22:10,478 - #47 Unpacking
INFO  23:22:10,478 - #45 ::
INFO  23:22:10,478 - #47 a
INFO  23:22:10,478 - #31 =
INFO  23:22:10,478 - #19 -
INFO  23:22:10,479 - #47 dd
INFO  23:22:10,479 - #34 ;
INFO  23:22:10,479 - #47 dd
INFO  23:22:10,479 - #31 =
INFO  23:22:10,479 - #46 3
INFO  23:22:10,480 - #34 ;
INFO  23:22:10,480 - #47 dd
INFO  23:22:10,480 - #31 =
INFO  23:22:10,480 - #19 -
INFO  23:22:10,480 - #46 9
INFO  23:22:10,480 - #34 ;
INFO  23:22:10,480 - #11 return
INFO  23:22:10,481 - #46 3
INFO  23:22:10,481 - #34 ;
INFO  23:22:10,481 - #7 if
INFO  23:22:10,481 - #38 (
INFO  23:22:10,481 - #47 pokusaj
INFO  23:22:10,481 - #23 ==
INFO  23:22:10,481 - #48 true
INFO  23:22:10,483 - #39 )
INFO  23:22:10,485 - #42 {
INFO  23:22:10,485 - #47 dd
INFO  23:22:10,485 - #32 ++
INFO  23:22:10,485 - #34 ;
INFO  23:22:10,485 - #43 }
INFO  23:22:10,485 - #5 else
INFO  23:22:10,486 - #42 {
INFO  23:22:10,486 - #47 c
INFO  23:22:10,486 - #31 =
INFO  23:22:10,486 - #48 true
INFO  23:22:10,486 - #34 ;
INFO  23:22:10,486 - #43 }
INFO  23:22:10,487 - #43 }
INFO  23:22:10,487 - #47 int
INFO  23:22:10,487 - #47 main
INFO  23:22:10,487 - #38 (
INFO  23:22:10,487 - #39 )
INFO  23:22:10,488 - #47 int
INFO  23:22:10,488 - #47 prvi
INFO  23:22:10,488 - #36 ,
INFO  23:22:10,488 - #47 drugi
INFO  23:22:10,488 - #34 ;
INFO  23:22:10,488 - #47 bool
INFO  23:22:10,488 - #47 treci
INFO  23:22:10,488 - #34 ;
INFO  23:22:10,489 - #42 {
INFO  23:22:10,489 - #47 treci
INFO  23:22:10,489 - #31 =
INFO  23:22:10,489 - #47 testtest
INFO  23:22:10,489 - #38 (
INFO  23:22:10,489 - #47 prvi
INFO  23:22:10,489 - #36 ,
INFO  23:22:10,490 - #47 drugi
INFO  23:22:10,490 - #36 ,
INFO  23:22:10,490 - #47 treci
INFO  23:22:10,490 - #39 )
INFO  23:22:10,490 - #34 ;
INFO  23:22:10,491 - #11 return
INFO  23:22:10,491 - #46 2
INFO  23:22:10,491 - #34 ;
INFO  23:22:10,491 - #43 }
INFO  23:22:10,491 - #43 }
INFO  23:22:10,503 - Program(
  ProgName(
   test302
  ) [ProgName]
  NamespaceList(
    NoNamespaceList(
    ) [NoNamespaceList]
    Namespace(
      NamespaceName(
       Unpacking
      ) [NamespaceName]
      NamespaceDecls(
        NamespaceDecls(
          NamespaceDecls(
            NamespaceDecls(
              NoNamespaceDecls(
              ) [NoNamespaceDecls]
              NamespaceVarDecl(
                Type(
                 int
                ) [Type]
                MultipleVarDecls(
                  SingleVarDecl(
                    VarNameDecl(
                     a
                    ) [VarNameDecl]
                  ) [SingleVarDecl]
                  VarNameDecl(
                   b
                  ) [VarNameDecl]
                ) [MultipleVarDecls]
              ) [NamespaceVarDecl]
            ) [NamespaceDecls]
            NamespaceVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 niz
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [NamespaceVarDecl]
          ) [NamespaceDecls]
          NamespaceVarDecl(
            Type(
             int
            ) [Type]
            SingleVarDecl(
              VarArrayNameDecl(
               arr
              ) [VarArrayNameDecl]
            ) [SingleVarDecl]
          ) [NamespaceVarDecl]
        ) [NamespaceDecls]
        NamespaceVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarArrayNameDecl(
             buarr
            ) [VarArrayNameDecl]
          ) [SingleVarDecl]
        ) [NamespaceVarDecl]
      ) [NamespaceDecls]
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               int
              ) [Type]
            ) [MethRetType]
           main
          ) [MethodTypeName]
          NoFormParam(
          ) [NoFormParam]
          NoMethVar(
          ) [NoMethVar]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   2
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
    ) [Namespace]
  ) [NamespaceList]
  ProgramDecls(
    ProgramDecls(
      ProgramDecls(
        ProgramDecls(
          ProgramDecls(
            NoProgramDecls(
            ) [NoProgramDecls]
            ProgramVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 nizic
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [ProgramVarDecl]
          ) [ProgramDecls]
          ProgramConstDecl(
            Type(
             bool
            ) [Type]
            SingleConstDecl(
              ConstDecl(
               ok
                BoolConst(
                 false
                ) [BoolConst]
              ) [ConstDecl]
            ) [SingleConstDecl]
          ) [ProgramConstDecl]
        ) [ProgramDecls]
        ProgramVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             pokusaj
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [ProgramVarDecl]
      ) [ProgramDecls]
      ProgramVarDecl(
        Type(
         int
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           dd
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [ProgramVarDecl]
    ) [ProgramDecls]
    ProgramVarDecl(
      Type(
       char
      ) [Type]
      SingleVarDecl(
        VarNameDecl(
         slovo
        ) [VarNameDecl]
      ) [SingleVarDecl]
    ) [ProgramVarDecl]
  ) [ProgramDecls]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecl(
          ) [NoMethodDecl]
          MethodDecl(
            MethodTypeName(
              MethRetVoid(
              ) [MethRetVoid]
             funkcija
            ) [MethodTypeName]
            NoFormParam(
            ) [NoFormParam]
            MethodVars(
              NoMethVar(
              ) [NoMethVar]
              Type(
               int
              ) [Type]
              MultipleVarDecls(
                SingleVarDecl(
                  VarNameDecl(
                   c
                  ) [VarNameDecl]
                ) [SingleVarDecl]
                VarNameDecl(
                 d
                ) [VarNameDecl]
              ) [MultipleVarDecls]
            ) [MethodVars]
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            NoStmt(
                            ) [NoStmt]
                            DesignatorStmt(
                              DesigStmtActions(
                                DesigArray(
                                 nizic
                                  PosTermExpr(
                                    FactorTerm(
                                      NumFactor(
                                       3
                                      ) [NumFactor]
                                    ) [FactorTerm]
                                  ) [PosTermExpr]
                                ) [DesigArray]
                                DesigInc(
                                ) [DesigInc]
                              ) [DesigStmtActions]
                            ) [DesignatorStmt]
                          ) [Statements]
                          DesignatorStmt(
                            DesigStmtActions(
                              DesigArray(
                               nizic
                                PosTermExpr(
                                  FactorTerm(
                                    NumFactor(
                                     3
                                    ) [NumFactor]
                                  ) [FactorTerm]
                                ) [PosTermExpr]
                              ) [DesigArray]
                              DesigDec(
                              ) [DesigDec]
                            ) [DesigStmtActions]
                          ) [DesignatorStmt]
                        ) [Statements]
                        DesignatorStmt(
                          DesigStmtActions(
                            DesigVar(
                             dd
                            ) [DesigVar]
                            DesigInc(
                            ) [DesigInc]
                          ) [DesigStmtActions]
                        ) [DesignatorStmt]
                      ) [Statements]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          DesigDec(
                          ) [DesigDec]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigArray(
                         Unpacking
                         niz
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ScopeDesigArray]
                        DesigInc(
                        ) [DesigInc]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  ReadExpr(
                    DesigVar(
                     pokusaj
                    ) [DesigVar]
                  ) [ReadExpr]
                ) [Statements]
                ReadExpr(
                  ScopeDesigVar(
                   Unpacking
                   a
                  ) [ScopeDesigVar]
                ) [ReadExpr]
              ) [Statements]
              PrintStmt(
                PosTermExpr(
                  FactorTerm(
                    NumFactor(
                     3
                    ) [NumFactor]
                  ) [FactorTerm]
                ) [PosTermExpr]
                PrintVar(
                 2
                ) [PrintVar]
              ) [PrintStmt]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               bool
              ) [Type]
            ) [MethRetType]
           testtest
          ) [MethodTypeName]
          FormParams(
            FormCommaParamDecl(
              FormCommaParamDecl(
                FormParamDecl(
                  FormParamVar(
                    Type(
                     int
                    ) [Type]
                   param1
                  ) [FormParamVar]
                ) [FormParamDecl]
                FormParamVar(
                  Type(
                   int
                  ) [Type]
                 param2
                ) [FormParamVar]
              ) [FormCommaParamDecl]
              FormParamVar(
                Type(
                 char
                ) [Type]
               param3
              ) [FormParamVar]
            ) [FormCommaParamDecl]
          ) [FormParams]
          MethodVars(
            NoMethVar(
            ) [NoMethVar]
            Type(
             bool
            ) [Type]
            MultipleVarDecls(
              SingleVarDecl(
                VarNameDecl(
                 c
                ) [VarNameDecl]
              ) [SingleVarDecl]
              VarNameDecl(
               d
              ) [VarNameDecl]
            ) [MultipleVarDecls]
          ) [MethodVars]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  VarFactor(
                    DesigVar(
                     c
                    ) [DesigVar]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        MethodTypeName(
          MethRetType(
            Type(
             int
            ) [Type]
          ) [MethRetType]
         test
        ) [MethodTypeName]
        NoFormParam(
        ) [NoFormParam]
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             c
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [MethodVars]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          AssignExpr(
                            PosTermExpr(
                              MulTerm(
                                FactorTerm(
                                  VarFactor(
                                    ScopeDesigVar(
                                     Unpacking
                                     a
                                    ) [ScopeDesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                                Mul(
                                ) [Mul]
                                VarFactor(
                                  DesigVar(
                                   dd
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [MulTerm]
                            ) [PosTermExpr]
                          ) [AssignExpr]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigVar(
                         Unpacking
                         a
                        ) [ScopeDesigVar]
                        AssignExpr(
                          AddExpr(
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                            Add(
                            ) [Add]
                            MulTerm(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                              Mul(
                              ) [Mul]
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [MulTerm]
                          ) [AddExpr]
                        ) [AssignExpr]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    DesigStmtActions(
                      ScopeDesigVar(
                       Unpacking
                       a
                      ) [ScopeDesigVar]
                      AssignExpr(
                        NegTermeExpr(
                          FactorTerm(
                            VarFactor(
                              DesigVar(
                               dd
                              ) [DesigVar]
                            ) [VarFactor]
                          ) [FactorTerm]
                        ) [NegTermeExpr]
                      ) [AssignExpr]
                    ) [DesigStmtActions]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          NumFactor(
                           3
                          ) [NumFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                DesigStmtActions(
                  DesigVar(
                   dd
                  ) [DesigVar]
                  AssignExpr(
                    NegTermeExpr(
                      FactorTerm(
                        NumFactor(
                         9
                        ) [NumFactor]
                      ) [FactorTerm]
                    ) [NegTermeExpr]
                  ) [AssignExpr]
                ) [DesigStmtActions]
              ) [DesignatorStmt]
            ) [Statements]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   3
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
          IfElseStmt(
            ConditionCondTerm(
              CondTermFact(
                RelOpCondFact(
                  PosTermExpr(
                    FactorTerm(
                      VarFactor(
                        DesigVar(
                         pokusaj
                        ) [DesigVar]
                      ) [VarFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                  EqlOp(
                  ) [EqlOp]
                  PosTermExpr(
                    FactorTerm(
                      BoolFactor(
                       true
                      ) [BoolFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                ) [RelOpCondFact]
              ) [CondTermFact]
            ) [ConditionCondTerm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    DesigInc(
                    ) [DesigInc]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     c
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          BoolFactor(
                           true
                          ) [BoolFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
          ) [IfElseStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        MethRetType(
          Type(
           int
          ) [Type]
        ) [MethRetType]
       main
      ) [MethodTypeName]
      NoFormParam(
      ) [NoFormParam]
      MethodVars(
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           int
          ) [Type]
          MultipleVarDecls(
            SingleVarDecl(
              VarNameDecl(
               prvi
              ) [VarNameDecl]
            ) [SingleVarDecl]
            VarNameDecl(
             drugi
            ) [VarNameDecl]
          ) [MultipleVarDecls]
        ) [MethodVars]
        Type(
         bool
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           treci
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [MethodVars]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          DesignatorStmt(
            DesigStmtActions(
              DesigVar(
               treci
              ) [DesigVar]
              AssignExpr(
                PosTermExpr(
                  FactorTerm(
                    FactorFuncCall(
                      DesigVar(
                       testtest
                      ) [DesigVar]
                      ActPars(
                        ActualParamsList(
                          ActualParamsList(
                            ActualParam(
                              PosTermExpr(
                                FactorTerm(
                                  VarFactor(
                                    DesigVar(
                                     prvi
                                    ) [DesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                              ) [PosTermExpr]
                            ) [ActualParam]
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  DesigVar(
                                   drugi
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                          ) [ActualParamsList]
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 treci
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ActualParamsList]
                      ) [ActPars]
                    ) [FactorFuncCall]
                  ) [FactorTerm]
                ) [PosTermExpr]
              ) [AssignExpr]
            ) [DesigStmtActions]
          ) [DesignatorStmt]
        ) [Statements]
        ReturnExpr(
          PosTermExpr(
            FactorTerm(
              NumFactor(
               2
              ) [NumFactor]
            ) [FactorTerm]
          ) [PosTermExpr]
        ) [ReturnExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:22:10,511 - Deklarisana promenljiva Unpacking::a na liniji 6
INFO  23:22:10,511 - Deklarisana promenljiva Unpacking::b na liniji 6
INFO  23:22:10,511 - Deklarisana promenljiva Unpacking::niz na liniji 7
INFO  23:22:10,511 - Deklarisana promenljiva Unpacking::arr na liniji 8
INFO  23:22:10,511 - Deklarisana promenljiva Unpacking::buarr na liniji 9
INFO  23:22:10,512 - Obradjuje se funkcija main na liniji 11
INFO  23:22:10,512 - Deklarisana promenljiva nizic na liniji 16
INFO  23:22:10,513 - Deklarisana konstanta ok na liniji 17
INFO  23:22:10,513 - Deklarisana promenljiva pokusaj na liniji 18
INFO  23:22:10,513 - Deklarisana promenljiva dd na liniji 19
INFO  23:22:10,513 - Deklarisana promenljiva slovo na liniji 20
INFO  23:22:10,513 - Obradjuje se funkcija funkcija na liniji 23
INFO  23:22:10,514 - Deklarisana promenljiva c na liniji 23
INFO  23:22:10,514 - Deklarisana promenljiva d na liniji 23
INFO  23:22:10,514 - Pretraga na 25(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 25
INFO  23:22:10,517 - Pretraga na 26(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 26
INFO  23:22:10,519 - Pretraga na 29(Unpacking::niz), nadjeno Var Unpacking::niz: Arr of int, 2, 0  na liniji 29
INFO  23:22:10,520 - Obradjuje se funkcija testtest na liniji 38
INFO  23:22:10,520 - Deklarisan parametar param1 metode: testtest. na liniji 38
INFO  23:22:10,521 - Deklarisan parametar param2 metode: testtest. na liniji 38
INFO  23:22:10,521 - Deklarisan parametar param3 metode: testtest. na liniji 38
INFO  23:22:10,521 - Deklarisana promenljiva c na liniji 38
INFO  23:22:10,522 - Deklarisana promenljiva d na liniji 38
INFO  23:22:10,522 - Obradjuje se funkcija test na liniji 42
INFO  23:22:10,523 - Deklarisana promenljiva c na liniji 42
INFO  23:22:10,525 - Obradjuje se funkcija main na liniji 61
INFO  23:22:10,526 - Deklarisana promenljiva prvi na liniji 62
INFO  23:22:10,526 - Deklarisana promenljiva drugi na liniji 62
INFO  23:22:10,526 - Deklarisana promenljiva treci na liniji 63
INFO  23:22:10,527 - Pretraga na 65(testtest), nadjeno Meth testtest: bool, 0, 3 
   Var param1: int, 0, 1 
   Var param2: int, 1, 1 
   Var param3: char, 2, 1 
   Var c: bool, 3, 1 
   Var d: bool, 4, 1 
 na liniji 65
INFO  23:24:18,055 - Compiling source file: C:\Users\Zoki\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:24:18,135 - #2 program
INFO  23:24:18,139 - #47 test302
INFO  23:24:18,141 - #17 namespace
INFO  23:24:18,143 - #47 Unpacking
INFO  23:24:18,143 - #42 {
INFO  23:24:18,144 - #47 int
INFO  23:24:18,145 - #47 a
INFO  23:24:18,146 - #36 ,
INFO  23:24:18,147 - #47 b
INFO  23:24:18,147 - #34 ;
INFO  23:24:18,147 - #47 int
INFO  23:24:18,148 - #47 niz
INFO  23:24:18,148 - #40 [
INFO  23:24:18,148 - #41 ]
INFO  23:24:18,149 - #34 ;
INFO  23:24:18,149 - #47 int
INFO  23:24:18,149 - #47 arr
INFO  23:24:18,149 - #40 [
INFO  23:24:18,149 - #41 ]
INFO  23:24:18,150 - #34 ;
INFO  23:24:18,150 - #47 bool
INFO  23:24:18,150 - #47 buarr
INFO  23:24:18,150 - #40 [
INFO  23:24:18,150 - #41 ]
INFO  23:24:18,151 - #34 ;
INFO  23:24:18,151 - #42 {
INFO  23:24:18,151 - #47 int
INFO  23:24:18,153 - #47 main
INFO  23:24:18,153 - #38 (
INFO  23:24:18,155 - #39 )
INFO  23:24:18,157 - #42 {
INFO  23:24:18,158 - #11 return
INFO  23:24:18,159 - #46 2
INFO  23:24:18,159 - #34 ;
INFO  23:24:18,160 - #43 }
INFO  23:24:18,160 - #43 }
INFO  23:24:18,161 - #43 }
INFO  23:24:18,162 - #47 int
INFO  23:24:18,164 - #47 nizic
INFO  23:24:18,164 - #40 [
INFO  23:24:18,164 - #41 ]
INFO  23:24:18,164 - #34 ;
INFO  23:24:18,165 - #6 const
INFO  23:24:18,166 - #47 bool
INFO  23:24:18,166 - #47 ok
INFO  23:24:18,166 - #31 =
INFO  23:24:18,166 - #48 false
INFO  23:24:18,167 - #34 ;
INFO  23:24:18,168 - #47 bool
INFO  23:24:18,168 - #47 pokusaj
INFO  23:24:18,169 - #34 ;
INFO  23:24:18,169 - #47 int
INFO  23:24:18,169 - #47 dd
INFO  23:24:18,169 - #34 ;
INFO  23:24:18,169 - #47 char
INFO  23:24:18,170 - #47 slovo
INFO  23:24:18,170 - #34 ;
INFO  23:24:18,170 - #42 {
INFO  23:24:18,171 - #12 void
INFO  23:24:18,171 - #47 funkcija
INFO  23:24:18,173 - #38 (
INFO  23:24:18,173 - #39 )
INFO  23:24:18,173 - #47 int
INFO  23:24:18,173 - #47 c
INFO  23:24:18,174 - #36 ,
INFO  23:24:18,174 - #47 d
INFO  23:24:18,174 - #34 ;
INFO  23:24:18,174 - #42 {
INFO  23:24:18,175 - #47 nizic
INFO  23:24:18,175 - #40 [
INFO  23:24:18,175 - #46 3
INFO  23:24:18,175 - #41 ]
INFO  23:24:18,175 - #32 ++
INFO  23:24:18,176 - #34 ;
INFO  23:24:18,177 - #47 nizic
INFO  23:24:18,177 - #40 [
INFO  23:24:18,178 - #46 3
INFO  23:24:18,178 - #41 ]
INFO  23:24:18,178 - #33 --
INFO  23:24:18,178 - #34 ;
INFO  23:24:18,180 - #47 dd
INFO  23:24:18,180 - #32 ++
INFO  23:24:18,180 - #34 ;
INFO  23:24:18,180 - #47 dd
INFO  23:24:18,180 - #33 --
INFO  23:24:18,181 - #34 ;
INFO  23:24:18,181 - #47 Unpacking
INFO  23:24:18,181 - #45 ::
INFO  23:24:18,181 - #47 niz
INFO  23:24:18,181 - #40 [
INFO  23:24:18,182 - #47 dd
INFO  23:24:18,183 - #41 ]
INFO  23:24:18,184 - #32 ++
INFO  23:24:18,184 - #34 ;
INFO  23:24:18,184 - #10 read
INFO  23:24:18,185 - #38 (
INFO  23:24:18,185 - #47 pokusaj
INFO  23:24:18,185 - #39 )
INFO  23:24:18,185 - #34 ;
INFO  23:24:18,185 - #10 read
INFO  23:24:18,186 - #38 (
INFO  23:24:18,187 - #47 Unpacking
INFO  23:24:18,187 - #45 ::
INFO  23:24:18,187 - #47 a
INFO  23:24:18,187 - #39 )
INFO  23:24:18,188 - #34 ;
INFO  23:24:18,188 - #9 print
INFO  23:24:18,188 - #38 (
INFO  23:24:18,188 - #46 3
INFO  23:24:18,188 - #36 ,
INFO  23:24:18,189 - #46 2
INFO  23:24:18,189 - #39 )
INFO  23:24:18,189 - #34 ;
INFO  23:24:18,189 - #43 }
INFO  23:24:18,190 - #47 bool
INFO  23:24:18,190 - #47 testtest
INFO  23:24:18,190 - #38 (
INFO  23:24:18,190 - #47 int
INFO  23:24:18,191 - #47 param1
INFO  23:24:18,191 - #36 ,
INFO  23:24:18,192 - #47 int
INFO  23:24:18,192 - #47 param2
INFO  23:24:18,193 - #36 ,
INFO  23:24:18,193 - #47 char
INFO  23:24:18,193 - #47 param3
INFO  23:24:18,194 - #39 )
INFO  23:24:18,194 - #47 bool
INFO  23:24:18,194 - #47 c
INFO  23:24:18,195 - #36 ,
INFO  23:24:18,195 - #47 d
INFO  23:24:18,195 - #34 ;
INFO  23:24:18,195 - #42 {
INFO  23:24:18,196 - #11 return
INFO  23:24:18,196 - #47 c
INFO  23:24:18,196 - #34 ;
INFO  23:24:18,196 - #43 }
INFO  23:24:18,197 - #47 int
INFO  23:24:18,197 - #47 test
INFO  23:24:18,197 - #38 (
INFO  23:24:18,197 - #39 )
INFO  23:24:18,197 - #47 bool
INFO  23:24:18,197 - #47 c
INFO  23:24:18,197 - #34 ;
INFO  23:24:18,197 - #42 {
INFO  23:24:18,197 - #47 dd
INFO  23:24:18,198 - #31 =
INFO  23:24:18,198 - #47 Unpacking
INFO  23:24:18,198 - #45 ::
INFO  23:24:18,198 - #47 a
INFO  23:24:18,198 - #20 *
INFO  23:24:18,198 - #47 dd
INFO  23:24:18,200 - #34 ;
INFO  23:24:18,200 - #47 Unpacking
INFO  23:24:18,201 - #45 ::
INFO  23:24:18,201 - #47 a
INFO  23:24:18,201 - #31 =
INFO  23:24:18,201 - #47 Unpacking
INFO  23:24:18,201 - #45 ::
INFO  23:24:18,201 - #47 a
INFO  23:24:18,201 - #18 +
INFO  23:24:18,201 - #47 Unpacking
INFO  23:24:18,203 - #45 ::
INFO  23:24:18,203 - #47 a
INFO  23:24:18,205 - #20 *
INFO  23:24:18,205 - #47 dd
INFO  23:24:18,205 - #34 ;
INFO  23:24:18,205 - #47 Unpacking
INFO  23:24:18,205 - #45 ::
INFO  23:24:18,206 - #47 a
INFO  23:24:18,206 - #31 =
INFO  23:24:18,206 - #19 -
INFO  23:24:18,206 - #47 dd
INFO  23:24:18,206 - #34 ;
INFO  23:24:18,207 - #47 dd
INFO  23:24:18,207 - #31 =
INFO  23:24:18,207 - #46 3
INFO  23:24:18,208 - #34 ;
INFO  23:24:18,208 - #47 dd
INFO  23:24:18,208 - #31 =
INFO  23:24:18,208 - #19 -
INFO  23:24:18,209 - #46 9
INFO  23:24:18,209 - #34 ;
INFO  23:24:18,209 - #11 return
INFO  23:24:18,209 - #46 3
INFO  23:24:18,210 - #34 ;
INFO  23:24:18,210 - #7 if
INFO  23:24:18,210 - #38 (
INFO  23:24:18,210 - #47 pokusaj
INFO  23:24:18,210 - #23 ==
INFO  23:24:18,210 - #48 true
INFO  23:24:18,213 - #39 )
INFO  23:24:18,213 - #42 {
INFO  23:24:18,214 - #47 dd
INFO  23:24:18,214 - #32 ++
INFO  23:24:18,214 - #34 ;
INFO  23:24:18,214 - #43 }
INFO  23:24:18,214 - #5 else
INFO  23:24:18,214 - #42 {
INFO  23:24:18,214 - #47 c
INFO  23:24:18,215 - #31 =
INFO  23:24:18,215 - #48 true
INFO  23:24:18,215 - #34 ;
INFO  23:24:18,215 - #43 }
INFO  23:24:18,215 - #43 }
INFO  23:24:18,215 - #47 int
INFO  23:24:18,216 - #47 main
INFO  23:24:18,216 - #38 (
INFO  23:24:18,216 - #39 )
INFO  23:24:18,216 - #47 int
INFO  23:24:18,216 - #47 prvi
INFO  23:24:18,216 - #36 ,
INFO  23:24:18,216 - #47 drugi
INFO  23:24:18,216 - #34 ;
INFO  23:24:18,216 - #47 bool
INFO  23:24:18,217 - #47 treci
INFO  23:24:18,217 - #34 ;
INFO  23:24:18,217 - #42 {
INFO  23:24:18,217 - #47 treci
INFO  23:24:18,217 - #31 =
INFO  23:24:18,217 - #47 testtest
INFO  23:24:18,217 - #38 (
INFO  23:24:18,218 - #47 prvi
INFO  23:24:18,218 - #36 ,
INFO  23:24:18,218 - #47 drugi
INFO  23:24:18,218 - #36 ,
INFO  23:24:18,218 - #47 treci
INFO  23:24:18,219 - #39 )
INFO  23:24:18,219 - #34 ;
INFO  23:24:18,219 - #11 return
INFO  23:24:18,219 - #46 2
INFO  23:24:18,219 - #34 ;
INFO  23:24:18,220 - #43 }
INFO  23:24:18,220 - #43 }
INFO  23:24:18,229 - Program(
  ProgName(
   test302
  ) [ProgName]
  NamespaceList(
    NoNamespaceList(
    ) [NoNamespaceList]
    Namespace(
      NamespaceName(
       Unpacking
      ) [NamespaceName]
      NamespaceDecls(
        NamespaceDecls(
          NamespaceDecls(
            NamespaceDecls(
              NoNamespaceDecls(
              ) [NoNamespaceDecls]
              NamespaceVarDecl(
                Type(
                 int
                ) [Type]
                MultipleVarDecls(
                  SingleVarDecl(
                    VarNameDecl(
                     a
                    ) [VarNameDecl]
                  ) [SingleVarDecl]
                  VarNameDecl(
                   b
                  ) [VarNameDecl]
                ) [MultipleVarDecls]
              ) [NamespaceVarDecl]
            ) [NamespaceDecls]
            NamespaceVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 niz
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [NamespaceVarDecl]
          ) [NamespaceDecls]
          NamespaceVarDecl(
            Type(
             int
            ) [Type]
            SingleVarDecl(
              VarArrayNameDecl(
               arr
              ) [VarArrayNameDecl]
            ) [SingleVarDecl]
          ) [NamespaceVarDecl]
        ) [NamespaceDecls]
        NamespaceVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarArrayNameDecl(
             buarr
            ) [VarArrayNameDecl]
          ) [SingleVarDecl]
        ) [NamespaceVarDecl]
      ) [NamespaceDecls]
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               int
              ) [Type]
            ) [MethRetType]
           main
          ) [MethodTypeName]
          NoFormParam(
          ) [NoFormParam]
          NoMethVar(
          ) [NoMethVar]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   2
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
    ) [Namespace]
  ) [NamespaceList]
  ProgramDecls(
    ProgramDecls(
      ProgramDecls(
        ProgramDecls(
          ProgramDecls(
            NoProgramDecls(
            ) [NoProgramDecls]
            ProgramVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 nizic
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [ProgramVarDecl]
          ) [ProgramDecls]
          ProgramConstDecl(
            Type(
             bool
            ) [Type]
            SingleConstDecl(
              ConstDecl(
               ok
                BoolConst(
                 false
                ) [BoolConst]
              ) [ConstDecl]
            ) [SingleConstDecl]
          ) [ProgramConstDecl]
        ) [ProgramDecls]
        ProgramVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             pokusaj
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [ProgramVarDecl]
      ) [ProgramDecls]
      ProgramVarDecl(
        Type(
         int
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           dd
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [ProgramVarDecl]
    ) [ProgramDecls]
    ProgramVarDecl(
      Type(
       char
      ) [Type]
      SingleVarDecl(
        VarNameDecl(
         slovo
        ) [VarNameDecl]
      ) [SingleVarDecl]
    ) [ProgramVarDecl]
  ) [ProgramDecls]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecl(
          ) [NoMethodDecl]
          MethodDecl(
            MethodTypeName(
              MethRetVoid(
              ) [MethRetVoid]
             funkcija
            ) [MethodTypeName]
            NoFormParam(
            ) [NoFormParam]
            MethodVars(
              NoMethVar(
              ) [NoMethVar]
              Type(
               int
              ) [Type]
              MultipleVarDecls(
                SingleVarDecl(
                  VarNameDecl(
                   c
                  ) [VarNameDecl]
                ) [SingleVarDecl]
                VarNameDecl(
                 d
                ) [VarNameDecl]
              ) [MultipleVarDecls]
            ) [MethodVars]
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            NoStmt(
                            ) [NoStmt]
                            DesignatorStmt(
                              DesigStmtActions(
                                DesigArray(
                                 nizic
                                  PosTermExpr(
                                    FactorTerm(
                                      NumFactor(
                                       3
                                      ) [NumFactor]
                                    ) [FactorTerm]
                                  ) [PosTermExpr]
                                ) [DesigArray]
                                DesigInc(
                                ) [DesigInc]
                              ) [DesigStmtActions]
                            ) [DesignatorStmt]
                          ) [Statements]
                          DesignatorStmt(
                            DesigStmtActions(
                              DesigArray(
                               nizic
                                PosTermExpr(
                                  FactorTerm(
                                    NumFactor(
                                     3
                                    ) [NumFactor]
                                  ) [FactorTerm]
                                ) [PosTermExpr]
                              ) [DesigArray]
                              DesigDec(
                              ) [DesigDec]
                            ) [DesigStmtActions]
                          ) [DesignatorStmt]
                        ) [Statements]
                        DesignatorStmt(
                          DesigStmtActions(
                            DesigVar(
                             dd
                            ) [DesigVar]
                            DesigInc(
                            ) [DesigInc]
                          ) [DesigStmtActions]
                        ) [DesignatorStmt]
                      ) [Statements]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          DesigDec(
                          ) [DesigDec]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigArray(
                         Unpacking
                         niz
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ScopeDesigArray]
                        DesigInc(
                        ) [DesigInc]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  ReadExpr(
                    DesigVar(
                     pokusaj
                    ) [DesigVar]
                  ) [ReadExpr]
                ) [Statements]
                ReadExpr(
                  ScopeDesigVar(
                   Unpacking
                   a
                  ) [ScopeDesigVar]
                ) [ReadExpr]
              ) [Statements]
              PrintStmt(
                PosTermExpr(
                  FactorTerm(
                    NumFactor(
                     3
                    ) [NumFactor]
                  ) [FactorTerm]
                ) [PosTermExpr]
                PrintVar(
                 2
                ) [PrintVar]
              ) [PrintStmt]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               bool
              ) [Type]
            ) [MethRetType]
           testtest
          ) [MethodTypeName]
          FormParams(
            FormCommaParamDecl(
              FormCommaParamDecl(
                FormParamDecl(
                  FormParamVar(
                    Type(
                     int
                    ) [Type]
                   param1
                  ) [FormParamVar]
                ) [FormParamDecl]
                FormParamVar(
                  Type(
                   int
                  ) [Type]
                 param2
                ) [FormParamVar]
              ) [FormCommaParamDecl]
              FormParamVar(
                Type(
                 char
                ) [Type]
               param3
              ) [FormParamVar]
            ) [FormCommaParamDecl]
          ) [FormParams]
          MethodVars(
            NoMethVar(
            ) [NoMethVar]
            Type(
             bool
            ) [Type]
            MultipleVarDecls(
              SingleVarDecl(
                VarNameDecl(
                 c
                ) [VarNameDecl]
              ) [SingleVarDecl]
              VarNameDecl(
               d
              ) [VarNameDecl]
            ) [MultipleVarDecls]
          ) [MethodVars]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  VarFactor(
                    DesigVar(
                     c
                    ) [DesigVar]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        MethodTypeName(
          MethRetType(
            Type(
             int
            ) [Type]
          ) [MethRetType]
         test
        ) [MethodTypeName]
        NoFormParam(
        ) [NoFormParam]
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             c
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [MethodVars]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          AssignExpr(
                            PosTermExpr(
                              MulTerm(
                                FactorTerm(
                                  VarFactor(
                                    ScopeDesigVar(
                                     Unpacking
                                     a
                                    ) [ScopeDesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                                Mul(
                                ) [Mul]
                                VarFactor(
                                  DesigVar(
                                   dd
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [MulTerm]
                            ) [PosTermExpr]
                          ) [AssignExpr]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigVar(
                         Unpacking
                         a
                        ) [ScopeDesigVar]
                        AssignExpr(
                          AddExpr(
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                            Add(
                            ) [Add]
                            MulTerm(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                              Mul(
                              ) [Mul]
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [MulTerm]
                          ) [AddExpr]
                        ) [AssignExpr]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    DesigStmtActions(
                      ScopeDesigVar(
                       Unpacking
                       a
                      ) [ScopeDesigVar]
                      AssignExpr(
                        NegTermeExpr(
                          FactorTerm(
                            VarFactor(
                              DesigVar(
                               dd
                              ) [DesigVar]
                            ) [VarFactor]
                          ) [FactorTerm]
                        ) [NegTermeExpr]
                      ) [AssignExpr]
                    ) [DesigStmtActions]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          NumFactor(
                           3
                          ) [NumFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                DesigStmtActions(
                  DesigVar(
                   dd
                  ) [DesigVar]
                  AssignExpr(
                    NegTermeExpr(
                      FactorTerm(
                        NumFactor(
                         9
                        ) [NumFactor]
                      ) [FactorTerm]
                    ) [NegTermeExpr]
                  ) [AssignExpr]
                ) [DesigStmtActions]
              ) [DesignatorStmt]
            ) [Statements]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   3
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
          IfElseStmt(
            ConditionCondTerm(
              CondTermFact(
                RelOpCondFact(
                  PosTermExpr(
                    FactorTerm(
                      VarFactor(
                        DesigVar(
                         pokusaj
                        ) [DesigVar]
                      ) [VarFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                  EqlOp(
                  ) [EqlOp]
                  PosTermExpr(
                    FactorTerm(
                      BoolFactor(
                       true
                      ) [BoolFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                ) [RelOpCondFact]
              ) [CondTermFact]
            ) [ConditionCondTerm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    DesigInc(
                    ) [DesigInc]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     c
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          BoolFactor(
                           true
                          ) [BoolFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
          ) [IfElseStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        MethRetType(
          Type(
           int
          ) [Type]
        ) [MethRetType]
       main
      ) [MethodTypeName]
      NoFormParam(
      ) [NoFormParam]
      MethodVars(
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           int
          ) [Type]
          MultipleVarDecls(
            SingleVarDecl(
              VarNameDecl(
               prvi
              ) [VarNameDecl]
            ) [SingleVarDecl]
            VarNameDecl(
             drugi
            ) [VarNameDecl]
          ) [MultipleVarDecls]
        ) [MethodVars]
        Type(
         bool
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           treci
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [MethodVars]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          DesignatorStmt(
            DesigStmtActions(
              DesigVar(
               treci
              ) [DesigVar]
              AssignExpr(
                PosTermExpr(
                  FactorTerm(
                    FactorFuncCall(
                      DesigVar(
                       testtest
                      ) [DesigVar]
                      ActPars(
                        ActualParamsList(
                          ActualParamsList(
                            ActualParam(
                              PosTermExpr(
                                FactorTerm(
                                  VarFactor(
                                    DesigVar(
                                     prvi
                                    ) [DesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                              ) [PosTermExpr]
                            ) [ActualParam]
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  DesigVar(
                                   drugi
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                          ) [ActualParamsList]
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 treci
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ActualParamsList]
                      ) [ActPars]
                    ) [FactorFuncCall]
                  ) [FactorTerm]
                ) [PosTermExpr]
              ) [AssignExpr]
            ) [DesigStmtActions]
          ) [DesignatorStmt]
        ) [Statements]
        ReturnExpr(
          PosTermExpr(
            FactorTerm(
              NumFactor(
               2
              ) [NumFactor]
            ) [FactorTerm]
          ) [PosTermExpr]
        ) [ReturnExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:24:18,240 - Deklarisana promenljiva Unpacking::a na liniji 6
INFO  23:24:18,243 - Deklarisana promenljiva Unpacking::b na liniji 6
INFO  23:24:18,243 - Deklarisana promenljiva Unpacking::niz na liniji 7
INFO  23:24:18,244 - Deklarisana promenljiva Unpacking::arr na liniji 8
INFO  23:24:18,244 - Deklarisana promenljiva Unpacking::buarr na liniji 9
INFO  23:24:18,244 - Obradjuje se funkcija main na liniji 11
INFO  23:24:18,245 - Deklarisana promenljiva nizic na liniji 16
INFO  23:24:18,245 - Deklarisana konstanta ok na liniji 17
INFO  23:24:18,245 - Deklarisana promenljiva pokusaj na liniji 18
INFO  23:24:18,245 - Deklarisana promenljiva dd na liniji 19
INFO  23:24:18,245 - Deklarisana promenljiva slovo na liniji 20
INFO  23:24:18,246 - Obradjuje se funkcija funkcija na liniji 23
INFO  23:24:18,246 - Deklarisana promenljiva c na liniji 23
INFO  23:24:18,246 - Deklarisana promenljiva d na liniji 23
INFO  23:24:18,247 - Pretraga na 25(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 25
INFO  23:24:18,250 - Pretraga na 26(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 26
INFO  23:24:18,252 - Pretraga na 29(Unpacking::niz), nadjeno Var Unpacking::niz: Arr of int, 2, 0  na liniji 29
INFO  23:24:18,254 - Obradjuje se funkcija testtest na liniji 38
INFO  23:24:18,255 - Deklarisan parametar param1 metode: testtest. na liniji 38
INFO  23:24:18,255 - Deklarisan parametar param2 metode: testtest. na liniji 38
INFO  23:24:18,256 - Deklarisan parametar param3 metode: testtest. na liniji 38
INFO  23:24:18,256 - Deklarisana promenljiva c na liniji 38
INFO  23:24:18,256 - Deklarisana promenljiva d na liniji 38
INFO  23:24:18,257 - Obradjuje se funkcija test na liniji 42
INFO  23:24:18,257 - Deklarisana promenljiva c na liniji 42
INFO  23:24:18,260 - Obradjuje se funkcija main na liniji 61
INFO  23:24:18,260 - Deklarisana promenljiva prvi na liniji 62
INFO  23:24:18,260 - Deklarisana promenljiva drugi na liniji 62
INFO  23:24:18,260 - Deklarisana promenljiva treci na liniji 63
INFO  23:24:18,260 -  Print count calls = 0
INFO  23:24:18,261 -  Deklarisanih promenljivih ima = 0
INFO  23:24:18,262 - Uspesna semanticka analiza!!
INFO  23:31:54,247 - Compiling source file: C:\Users\Zoki\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:31:54,327 - #2 program
INFO  23:31:54,330 - #47 test302
INFO  23:31:54,333 - #17 namespace
INFO  23:31:54,335 - #47 Unpacking
INFO  23:31:54,336 - #42 {
INFO  23:31:54,337 - #47 int
INFO  23:31:54,339 - #47 a
INFO  23:31:54,340 - #36 ,
INFO  23:31:54,342 - #47 b
INFO  23:31:54,342 - #34 ;
INFO  23:31:54,343 - #47 int
INFO  23:31:54,344 - #47 niz
INFO  23:31:54,344 - #40 [
INFO  23:31:54,344 - #41 ]
INFO  23:31:54,345 - #34 ;
INFO  23:31:54,345 - #47 int
INFO  23:31:54,345 - #47 arr
INFO  23:31:54,346 - #40 [
INFO  23:31:54,346 - #41 ]
INFO  23:31:54,346 - #34 ;
INFO  23:31:54,346 - #47 bool
INFO  23:31:54,346 - #47 buarr
INFO  23:31:54,347 - #40 [
INFO  23:31:54,347 - #41 ]
INFO  23:31:54,347 - #34 ;
INFO  23:31:54,347 - #42 {
INFO  23:31:54,347 - #47 int
INFO  23:31:54,349 - #47 main
INFO  23:31:54,350 - #38 (
INFO  23:31:54,352 - #39 )
INFO  23:31:54,353 - #42 {
INFO  23:31:54,354 - #11 return
INFO  23:31:54,357 - #46 2
INFO  23:31:54,358 - #34 ;
INFO  23:31:54,359 - #43 }
INFO  23:31:54,360 - #43 }
INFO  23:31:54,362 - #43 }
INFO  23:31:54,364 - #47 int
INFO  23:31:54,367 - #47 nizic
INFO  23:31:54,368 - #40 [
INFO  23:31:54,368 - #41 ]
INFO  23:31:54,368 - #34 ;
INFO  23:31:54,369 - #6 const
INFO  23:31:54,370 - #47 bool
INFO  23:31:54,370 - #47 ok
INFO  23:31:54,370 - #31 =
INFO  23:31:54,371 - #48 false
INFO  23:31:54,371 - #34 ;
INFO  23:31:54,373 - #47 bool
INFO  23:31:54,374 - #47 pokusaj
INFO  23:31:54,374 - #34 ;
INFO  23:31:54,374 - #47 int
INFO  23:31:54,375 - #47 dd
INFO  23:31:54,375 - #34 ;
INFO  23:31:54,376 - #47 char
INFO  23:31:54,376 - #47 slovo
INFO  23:31:54,376 - #34 ;
INFO  23:31:54,377 - #42 {
INFO  23:31:54,377 - #12 void
INFO  23:31:54,377 - #47 funkcija
INFO  23:31:54,379 - #38 (
INFO  23:31:54,379 - #39 )
INFO  23:31:54,379 - #47 int
INFO  23:31:54,380 - #47 c
INFO  23:31:54,380 - #36 ,
INFO  23:31:54,380 - #47 d
INFO  23:31:54,380 - #34 ;
INFO  23:31:54,381 - #42 {
INFO  23:31:54,382 - #47 nizic
INFO  23:31:54,382 - #40 [
INFO  23:31:54,382 - #46 3
INFO  23:31:54,382 - #41 ]
INFO  23:31:54,382 - #32 ++
INFO  23:31:54,384 - #34 ;
INFO  23:31:54,385 - #47 nizic
INFO  23:31:54,386 - #40 [
INFO  23:31:54,386 - #46 3
INFO  23:31:54,386 - #41 ]
INFO  23:31:54,386 - #33 --
INFO  23:31:54,386 - #34 ;
INFO  23:31:54,388 - #47 dd
INFO  23:31:54,388 - #32 ++
INFO  23:31:54,388 - #34 ;
INFO  23:31:54,388 - #47 dd
INFO  23:31:54,389 - #33 --
INFO  23:31:54,389 - #34 ;
INFO  23:31:54,389 - #47 Unpacking
INFO  23:31:54,389 - #45 ::
INFO  23:31:54,389 - #47 niz
INFO  23:31:54,390 - #40 [
INFO  23:31:54,390 - #47 dd
INFO  23:31:54,392 - #41 ]
INFO  23:31:54,393 - #32 ++
INFO  23:31:54,393 - #34 ;
INFO  23:31:54,394 - #10 read
INFO  23:31:54,394 - #38 (
INFO  23:31:54,394 - #47 pokusaj
INFO  23:31:54,394 - #39 )
INFO  23:31:54,394 - #34 ;
INFO  23:31:54,395 - #10 read
INFO  23:31:54,395 - #38 (
INFO  23:31:54,396 - #47 Unpacking
INFO  23:31:54,396 - #45 ::
INFO  23:31:54,396 - #47 a
INFO  23:31:54,396 - #39 )
INFO  23:31:54,397 - #34 ;
INFO  23:31:54,397 - #9 print
INFO  23:31:54,397 - #38 (
INFO  23:31:54,398 - #46 3
INFO  23:31:54,398 - #36 ,
INFO  23:31:54,398 - #46 2
INFO  23:31:54,398 - #39 )
INFO  23:31:54,398 - #34 ;
INFO  23:31:54,399 - #43 }
INFO  23:31:54,399 - #47 bool
INFO  23:31:54,400 - #47 testtest
INFO  23:31:54,401 - #38 (
INFO  23:31:54,401 - #47 int
INFO  23:31:54,401 - #47 param1
INFO  23:31:54,402 - #36 ,
INFO  23:31:54,404 - #47 int
INFO  23:31:54,405 - #47 param2
INFO  23:31:54,405 - #36 ,
INFO  23:31:54,406 - #47 char
INFO  23:31:54,407 - #47 param3
INFO  23:31:54,407 - #39 )
INFO  23:31:54,408 - #47 bool
INFO  23:31:54,408 - #47 c
INFO  23:31:54,408 - #36 ,
INFO  23:31:54,408 - #47 d
INFO  23:31:54,408 - #34 ;
INFO  23:31:54,409 - #42 {
INFO  23:31:54,409 - #11 return
INFO  23:31:54,409 - #47 c
INFO  23:31:54,409 - #34 ;
INFO  23:31:54,409 - #43 }
INFO  23:31:54,409 - #47 int
INFO  23:31:54,409 - #47 test
INFO  23:31:54,409 - #38 (
INFO  23:31:54,409 - #39 )
INFO  23:31:54,409 - #47 bool
INFO  23:31:54,409 - #47 c
INFO  23:31:54,409 - #34 ;
INFO  23:31:54,409 - #42 {
INFO  23:31:54,410 - #47 dd
INFO  23:31:54,410 - #31 =
INFO  23:31:54,410 - #47 Unpacking
INFO  23:31:54,410 - #45 ::
INFO  23:31:54,410 - #47 a
INFO  23:31:54,410 - #20 *
INFO  23:31:54,410 - #47 dd
INFO  23:31:54,412 - #34 ;
INFO  23:31:54,413 - #47 Unpacking
INFO  23:31:54,413 - #45 ::
INFO  23:31:54,413 - #47 a
INFO  23:31:54,413 - #31 =
INFO  23:31:54,413 - #47 Unpacking
INFO  23:31:54,414 - #45 ::
INFO  23:31:54,414 - #47 a
INFO  23:31:54,414 - #18 +
INFO  23:31:54,414 - #47 Unpacking
INFO  23:31:54,417 - #45 ::
INFO  23:31:54,417 - #47 a
INFO  23:31:54,418 - #20 *
INFO  23:31:54,418 - #47 dd
INFO  23:31:54,418 - #34 ;
INFO  23:31:54,419 - #47 Unpacking
INFO  23:31:54,419 - #45 ::
INFO  23:31:54,419 - #47 a
INFO  23:31:54,419 - #31 =
INFO  23:31:54,419 - #19 -
INFO  23:31:54,419 - #47 dd
INFO  23:31:54,420 - #34 ;
INFO  23:31:54,420 - #47 dd
INFO  23:31:54,421 - #31 =
INFO  23:31:54,421 - #46 3
INFO  23:31:54,421 - #34 ;
INFO  23:31:54,422 - #47 dd
INFO  23:31:54,423 - #31 =
INFO  23:31:54,423 - #19 -
INFO  23:31:54,423 - #46 9
INFO  23:31:54,423 - #34 ;
INFO  23:31:54,423 - #11 return
INFO  23:31:54,423 - #46 3
INFO  23:31:54,424 - #34 ;
INFO  23:31:54,424 - #7 if
INFO  23:31:54,424 - #38 (
INFO  23:31:54,424 - #47 pokusaj
INFO  23:31:54,424 - #23 ==
INFO  23:31:54,425 - #48 true
INFO  23:31:54,428 - #39 )
INFO  23:31:54,429 - #42 {
INFO  23:31:54,430 - #47 dd
INFO  23:31:54,430 - #32 ++
INFO  23:31:54,431 - #34 ;
INFO  23:31:54,431 - #43 }
INFO  23:31:54,431 - #5 else
INFO  23:31:54,432 - #42 {
INFO  23:31:54,432 - #47 c
INFO  23:31:54,432 - #31 =
INFO  23:31:54,432 - #48 true
INFO  23:31:54,432 - #34 ;
INFO  23:31:54,432 - #43 }
INFO  23:31:54,432 - #43 }
INFO  23:31:54,435 - #47 int
INFO  23:31:54,436 - #47 main
INFO  23:31:54,436 - #38 (
INFO  23:31:54,436 - #39 )
INFO  23:31:54,436 - #47 int
INFO  23:31:54,437 - #47 prvi
INFO  23:31:54,437 - #36 ,
INFO  23:31:54,437 - #47 drugi
INFO  23:31:54,437 - #34 ;
INFO  23:31:54,437 - #47 bool
INFO  23:31:54,437 - #47 treci
INFO  23:31:54,437 - #34 ;
INFO  23:31:54,437 - #42 {
INFO  23:31:54,437 - #47 treci
INFO  23:31:54,438 - #31 =
INFO  23:31:54,438 - #47 testtest
INFO  23:31:54,438 - #38 (
INFO  23:31:54,438 - #47 prvi
INFO  23:31:54,438 - #36 ,
INFO  23:31:54,438 - #47 drugi
INFO  23:31:54,438 - #36 ,
INFO  23:31:54,438 - #47 treci
INFO  23:31:54,439 - #39 )
INFO  23:31:54,439 - #34 ;
INFO  23:31:54,439 - #11 return
INFO  23:31:54,439 - #46 2
INFO  23:31:54,439 - #34 ;
INFO  23:31:54,439 - #43 }
INFO  23:31:54,440 - #43 }
INFO  23:31:54,451 - Program(
  ProgName(
   test302
  ) [ProgName]
  NamespaceList(
    NoNamespaceList(
    ) [NoNamespaceList]
    Namespace(
      NamespaceName(
       Unpacking
      ) [NamespaceName]
      NamespaceDecls(
        NamespaceDecls(
          NamespaceDecls(
            NamespaceDecls(
              NoNamespaceDecls(
              ) [NoNamespaceDecls]
              NamespaceVarDecl(
                Type(
                 int
                ) [Type]
                MultipleVarDecls(
                  SingleVarDecl(
                    VarNameDecl(
                     a
                    ) [VarNameDecl]
                  ) [SingleVarDecl]
                  VarNameDecl(
                   b
                  ) [VarNameDecl]
                ) [MultipleVarDecls]
              ) [NamespaceVarDecl]
            ) [NamespaceDecls]
            NamespaceVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 niz
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [NamespaceVarDecl]
          ) [NamespaceDecls]
          NamespaceVarDecl(
            Type(
             int
            ) [Type]
            SingleVarDecl(
              VarArrayNameDecl(
               arr
              ) [VarArrayNameDecl]
            ) [SingleVarDecl]
          ) [NamespaceVarDecl]
        ) [NamespaceDecls]
        NamespaceVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarArrayNameDecl(
             buarr
            ) [VarArrayNameDecl]
          ) [SingleVarDecl]
        ) [NamespaceVarDecl]
      ) [NamespaceDecls]
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               int
              ) [Type]
            ) [MethRetType]
           main
          ) [MethodTypeName]
          NoFormParam(
          ) [NoFormParam]
          NoMethVar(
          ) [NoMethVar]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   2
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
    ) [Namespace]
  ) [NamespaceList]
  ProgramDecls(
    ProgramDecls(
      ProgramDecls(
        ProgramDecls(
          ProgramDecls(
            NoProgramDecls(
            ) [NoProgramDecls]
            ProgramVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 nizic
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [ProgramVarDecl]
          ) [ProgramDecls]
          ProgramConstDecl(
            Type(
             bool
            ) [Type]
            SingleConstDecl(
              ConstDecl(
               ok
                BoolConst(
                 false
                ) [BoolConst]
              ) [ConstDecl]
            ) [SingleConstDecl]
          ) [ProgramConstDecl]
        ) [ProgramDecls]
        ProgramVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             pokusaj
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [ProgramVarDecl]
      ) [ProgramDecls]
      ProgramVarDecl(
        Type(
         int
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           dd
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [ProgramVarDecl]
    ) [ProgramDecls]
    ProgramVarDecl(
      Type(
       char
      ) [Type]
      SingleVarDecl(
        VarNameDecl(
         slovo
        ) [VarNameDecl]
      ) [SingleVarDecl]
    ) [ProgramVarDecl]
  ) [ProgramDecls]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecl(
          ) [NoMethodDecl]
          MethodDecl(
            MethodTypeName(
              MethRetVoid(
              ) [MethRetVoid]
             funkcija
            ) [MethodTypeName]
            NoFormParam(
            ) [NoFormParam]
            MethodVars(
              NoMethVar(
              ) [NoMethVar]
              Type(
               int
              ) [Type]
              MultipleVarDecls(
                SingleVarDecl(
                  VarNameDecl(
                   c
                  ) [VarNameDecl]
                ) [SingleVarDecl]
                VarNameDecl(
                 d
                ) [VarNameDecl]
              ) [MultipleVarDecls]
            ) [MethodVars]
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            NoStmt(
                            ) [NoStmt]
                            DesignatorStmt(
                              DesigStmtActions(
                                DesigArray(
                                 nizic
                                  PosTermExpr(
                                    FactorTerm(
                                      NumFactor(
                                       3
                                      ) [NumFactor]
                                    ) [FactorTerm]
                                  ) [PosTermExpr]
                                ) [DesigArray]
                                DesigInc(
                                ) [DesigInc]
                              ) [DesigStmtActions]
                            ) [DesignatorStmt]
                          ) [Statements]
                          DesignatorStmt(
                            DesigStmtActions(
                              DesigArray(
                               nizic
                                PosTermExpr(
                                  FactorTerm(
                                    NumFactor(
                                     3
                                    ) [NumFactor]
                                  ) [FactorTerm]
                                ) [PosTermExpr]
                              ) [DesigArray]
                              DesigDec(
                              ) [DesigDec]
                            ) [DesigStmtActions]
                          ) [DesignatorStmt]
                        ) [Statements]
                        DesignatorStmt(
                          DesigStmtActions(
                            DesigVar(
                             dd
                            ) [DesigVar]
                            DesigInc(
                            ) [DesigInc]
                          ) [DesigStmtActions]
                        ) [DesignatorStmt]
                      ) [Statements]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          DesigDec(
                          ) [DesigDec]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigArray(
                         Unpacking
                         niz
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ScopeDesigArray]
                        DesigInc(
                        ) [DesigInc]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  ReadExpr(
                    DesigVar(
                     pokusaj
                    ) [DesigVar]
                  ) [ReadExpr]
                ) [Statements]
                ReadExpr(
                  ScopeDesigVar(
                   Unpacking
                   a
                  ) [ScopeDesigVar]
                ) [ReadExpr]
              ) [Statements]
              PrintStmt(
                PosTermExpr(
                  FactorTerm(
                    NumFactor(
                     3
                    ) [NumFactor]
                  ) [FactorTerm]
                ) [PosTermExpr]
                PrintVar(
                 2
                ) [PrintVar]
              ) [PrintStmt]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               bool
              ) [Type]
            ) [MethRetType]
           testtest
          ) [MethodTypeName]
          FormParams(
            FormCommaParamDecl(
              FormCommaParamDecl(
                FormParamDecl(
                  FormParamVar(
                    Type(
                     int
                    ) [Type]
                   param1
                  ) [FormParamVar]
                ) [FormParamDecl]
                FormParamVar(
                  Type(
                   int
                  ) [Type]
                 param2
                ) [FormParamVar]
              ) [FormCommaParamDecl]
              FormParamVar(
                Type(
                 char
                ) [Type]
               param3
              ) [FormParamVar]
            ) [FormCommaParamDecl]
          ) [FormParams]
          MethodVars(
            NoMethVar(
            ) [NoMethVar]
            Type(
             bool
            ) [Type]
            MultipleVarDecls(
              SingleVarDecl(
                VarNameDecl(
                 c
                ) [VarNameDecl]
              ) [SingleVarDecl]
              VarNameDecl(
               d
              ) [VarNameDecl]
            ) [MultipleVarDecls]
          ) [MethodVars]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  VarFactor(
                    DesigVar(
                     c
                    ) [DesigVar]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        MethodTypeName(
          MethRetType(
            Type(
             int
            ) [Type]
          ) [MethRetType]
         test
        ) [MethodTypeName]
        NoFormParam(
        ) [NoFormParam]
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             c
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [MethodVars]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          AssignExpr(
                            PosTermExpr(
                              MulTerm(
                                FactorTerm(
                                  VarFactor(
                                    ScopeDesigVar(
                                     Unpacking
                                     a
                                    ) [ScopeDesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                                Mul(
                                ) [Mul]
                                VarFactor(
                                  DesigVar(
                                   dd
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [MulTerm]
                            ) [PosTermExpr]
                          ) [AssignExpr]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigVar(
                         Unpacking
                         a
                        ) [ScopeDesigVar]
                        AssignExpr(
                          AddExpr(
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                            Add(
                            ) [Add]
                            MulTerm(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                              Mul(
                              ) [Mul]
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [MulTerm]
                          ) [AddExpr]
                        ) [AssignExpr]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    DesigStmtActions(
                      ScopeDesigVar(
                       Unpacking
                       a
                      ) [ScopeDesigVar]
                      AssignExpr(
                        NegTermeExpr(
                          FactorTerm(
                            VarFactor(
                              DesigVar(
                               dd
                              ) [DesigVar]
                            ) [VarFactor]
                          ) [FactorTerm]
                        ) [NegTermeExpr]
                      ) [AssignExpr]
                    ) [DesigStmtActions]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          NumFactor(
                           3
                          ) [NumFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                DesigStmtActions(
                  DesigVar(
                   dd
                  ) [DesigVar]
                  AssignExpr(
                    NegTermeExpr(
                      FactorTerm(
                        NumFactor(
                         9
                        ) [NumFactor]
                      ) [FactorTerm]
                    ) [NegTermeExpr]
                  ) [AssignExpr]
                ) [DesigStmtActions]
              ) [DesignatorStmt]
            ) [Statements]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   3
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
          IfElseStmt(
            ConditionCondTerm(
              CondTermFact(
                RelOpCondFact(
                  PosTermExpr(
                    FactorTerm(
                      VarFactor(
                        DesigVar(
                         pokusaj
                        ) [DesigVar]
                      ) [VarFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                  EqlOp(
                  ) [EqlOp]
                  PosTermExpr(
                    FactorTerm(
                      BoolFactor(
                       true
                      ) [BoolFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                ) [RelOpCondFact]
              ) [CondTermFact]
            ) [ConditionCondTerm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    DesigInc(
                    ) [DesigInc]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     c
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          BoolFactor(
                           true
                          ) [BoolFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
          ) [IfElseStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        MethRetType(
          Type(
           int
          ) [Type]
        ) [MethRetType]
       main
      ) [MethodTypeName]
      NoFormParam(
      ) [NoFormParam]
      MethodVars(
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           int
          ) [Type]
          MultipleVarDecls(
            SingleVarDecl(
              VarNameDecl(
               prvi
              ) [VarNameDecl]
            ) [SingleVarDecl]
            VarNameDecl(
             drugi
            ) [VarNameDecl]
          ) [MultipleVarDecls]
        ) [MethodVars]
        Type(
         bool
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           treci
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [MethodVars]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          DesignatorStmt(
            DesigStmtActions(
              DesigVar(
               treci
              ) [DesigVar]
              AssignExpr(
                PosTermExpr(
                  FactorTerm(
                    FactorFuncCall(
                      DesigVar(
                       testtest
                      ) [DesigVar]
                      ActPars(
                        ActualParamsList(
                          ActualParamsList(
                            ActualParam(
                              PosTermExpr(
                                FactorTerm(
                                  VarFactor(
                                    DesigVar(
                                     prvi
                                    ) [DesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                              ) [PosTermExpr]
                            ) [ActualParam]
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  DesigVar(
                                   drugi
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                          ) [ActualParamsList]
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 treci
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ActualParamsList]
                      ) [ActPars]
                    ) [FactorFuncCall]
                  ) [FactorTerm]
                ) [PosTermExpr]
              ) [AssignExpr]
            ) [DesigStmtActions]
          ) [DesignatorStmt]
        ) [Statements]
        ReturnExpr(
          PosTermExpr(
            FactorTerm(
              NumFactor(
               2
              ) [NumFactor]
            ) [FactorTerm]
          ) [PosTermExpr]
        ) [ReturnExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:31:54,463 - Deklarisana promenljiva Unpacking::a na liniji 6
INFO  23:31:54,463 - Deklarisana promenljiva Unpacking::b na liniji 6
INFO  23:31:54,463 - Deklarisana promenljiva Unpacking::niz na liniji 7
INFO  23:31:54,464 - Deklarisana promenljiva Unpacking::arr na liniji 8
INFO  23:31:54,464 - Deklarisana promenljiva Unpacking::buarr na liniji 9
INFO  23:31:54,464 - Obradjuje se funkcija main na liniji 11
INFO  23:31:54,465 - Deklarisana promenljiva nizic na liniji 16
INFO  23:31:54,465 - Deklarisana konstanta ok na liniji 17
INFO  23:31:54,465 - Deklarisana promenljiva pokusaj na liniji 18
INFO  23:31:54,465 - Deklarisana promenljiva dd na liniji 19
INFO  23:31:54,466 - Deklarisana promenljiva slovo na liniji 20
INFO  23:31:54,468 - Obradjuje se funkcija funkcija na liniji 23
INFO  23:31:54,469 - Deklarisana promenljiva c na liniji 23
INFO  23:31:54,469 - Deklarisana promenljiva d na liniji 23
INFO  23:31:54,470 - Pretraga na 25(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 25
INFO  23:31:54,473 - Pretraga na 26(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 26
INFO  23:31:54,473 - Pretraga na 29(Unpacking::niz), nadjeno Var Unpacking::niz: Arr of int, 2, 0  na liniji 29
INFO  23:31:54,476 - Obradjuje se funkcija testtest na liniji 38
INFO  23:31:54,476 - Deklarisan parametar param1 metode: testtest. na liniji 38
INFO  23:31:54,479 - Deklarisan parametar param2 metode: testtest. na liniji 38
INFO  23:31:54,480 - Deklarisan parametar param3 metode: testtest. na liniji 38
INFO  23:31:54,484 - Deklarisana promenljiva c na liniji 38
INFO  23:31:54,486 - Deklarisana promenljiva d na liniji 38
INFO  23:31:54,486 - Obradjuje se funkcija test na liniji 42
INFO  23:31:54,486 - Deklarisana promenljiva c na liniji 42
INFO  23:31:54,488 - Obradjuje se funkcija main na liniji 61
INFO  23:31:54,488 - Deklarisana promenljiva prvi na liniji 62
INFO  23:31:54,488 - Deklarisana promenljiva drugi na liniji 62
INFO  23:31:54,488 - Deklarisana promenljiva treci na liniji 63
ERROR 23:31:54,489 - Greska na liniji 65stvarni parametar ne odgovara formalnom parametru metode po tipu!
INFO  23:31:54,489 -  Print count calls = 0
INFO  23:31:54,490 -  Deklarisanih promenljivih ima = 0
INFO  23:31:54,491 - Neuspesna semanticka analiza!!
INFO  23:32:46,105 - Compiling source file: C:\Users\Zoki\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:32:46,183 - #2 program
INFO  23:32:46,187 - #47 test302
INFO  23:32:46,189 - #17 namespace
INFO  23:32:46,192 - #47 Unpacking
INFO  23:32:46,192 - #42 {
INFO  23:32:46,194 - #47 int
INFO  23:32:46,197 - #47 a
INFO  23:32:46,198 - #36 ,
INFO  23:32:46,199 - #47 b
INFO  23:32:46,199 - #34 ;
INFO  23:32:46,199 - #47 int
INFO  23:32:46,200 - #47 niz
INFO  23:32:46,201 - #40 [
INFO  23:32:46,201 - #41 ]
INFO  23:32:46,202 - #34 ;
INFO  23:32:46,202 - #47 int
INFO  23:32:46,202 - #47 arr
INFO  23:32:46,202 - #40 [
INFO  23:32:46,202 - #41 ]
INFO  23:32:46,202 - #34 ;
INFO  23:32:46,203 - #47 bool
INFO  23:32:46,203 - #47 buarr
INFO  23:32:46,203 - #40 [
INFO  23:32:46,203 - #41 ]
INFO  23:32:46,203 - #34 ;
INFO  23:32:46,203 - #42 {
INFO  23:32:46,203 - #47 int
INFO  23:32:46,205 - #47 main
INFO  23:32:46,205 - #38 (
INFO  23:32:46,207 - #39 )
INFO  23:32:46,208 - #42 {
INFO  23:32:46,209 - #11 return
INFO  23:32:46,210 - #46 2
INFO  23:32:46,210 - #34 ;
INFO  23:32:46,211 - #43 }
INFO  23:32:46,212 - #43 }
INFO  23:32:46,213 - #43 }
INFO  23:32:46,213 - #47 int
INFO  23:32:46,216 - #47 nizic
INFO  23:32:46,217 - #40 [
INFO  23:32:46,217 - #41 ]
INFO  23:32:46,217 - #34 ;
INFO  23:32:46,219 - #6 const
INFO  23:32:46,220 - #47 bool
INFO  23:32:46,221 - #47 ok
INFO  23:32:46,221 - #31 =
INFO  23:32:46,221 - #48 false
INFO  23:32:46,221 - #34 ;
INFO  23:32:46,223 - #47 bool
INFO  23:32:46,225 - #47 pokusaj
INFO  23:32:46,225 - #34 ;
INFO  23:32:46,225 - #47 int
INFO  23:32:46,226 - #47 dd
INFO  23:32:46,226 - #34 ;
INFO  23:32:46,226 - #47 char
INFO  23:32:46,226 - #47 slovo
INFO  23:32:46,227 - #34 ;
INFO  23:32:46,227 - #42 {
INFO  23:32:46,227 - #12 void
INFO  23:32:46,227 - #47 funkcija
INFO  23:32:46,229 - #38 (
INFO  23:32:46,229 - #39 )
INFO  23:32:46,229 - #47 int
INFO  23:32:46,230 - #47 c
INFO  23:32:46,230 - #36 ,
INFO  23:32:46,230 - #47 d
INFO  23:32:46,230 - #34 ;
INFO  23:32:46,230 - #42 {
INFO  23:32:46,231 - #47 nizic
INFO  23:32:46,231 - #40 [
INFO  23:32:46,231 - #46 3
INFO  23:32:46,231 - #41 ]
INFO  23:32:46,231 - #32 ++
INFO  23:32:46,232 - #34 ;
INFO  23:32:46,233 - #47 nizic
INFO  23:32:46,233 - #40 [
INFO  23:32:46,233 - #46 3
INFO  23:32:46,234 - #41 ]
INFO  23:32:46,234 - #33 --
INFO  23:32:46,234 - #34 ;
INFO  23:32:46,235 - #47 dd
INFO  23:32:46,236 - #32 ++
INFO  23:32:46,236 - #34 ;
INFO  23:32:46,236 - #47 dd
INFO  23:32:46,236 - #33 --
INFO  23:32:46,237 - #34 ;
INFO  23:32:46,237 - #47 Unpacking
INFO  23:32:46,237 - #45 ::
INFO  23:32:46,237 - #47 niz
INFO  23:32:46,237 - #40 [
INFO  23:32:46,237 - #47 dd
INFO  23:32:46,239 - #41 ]
INFO  23:32:46,239 - #32 ++
INFO  23:32:46,239 - #34 ;
INFO  23:32:46,240 - #10 read
INFO  23:32:46,240 - #38 (
INFO  23:32:46,240 - #47 pokusaj
INFO  23:32:46,240 - #39 )
INFO  23:32:46,240 - #34 ;
INFO  23:32:46,240 - #10 read
INFO  23:32:46,241 - #38 (
INFO  23:32:46,241 - #47 Unpacking
INFO  23:32:46,241 - #45 ::
INFO  23:32:46,241 - #47 a
INFO  23:32:46,241 - #39 )
INFO  23:32:46,242 - #34 ;
INFO  23:32:46,242 - #9 print
INFO  23:32:46,242 - #38 (
INFO  23:32:46,242 - #46 3
INFO  23:32:46,242 - #36 ,
INFO  23:32:46,242 - #46 2
INFO  23:32:46,242 - #39 )
INFO  23:32:46,243 - #34 ;
INFO  23:32:46,243 - #43 }
INFO  23:32:46,243 - #47 bool
INFO  23:32:46,243 - #47 testtest
INFO  23:32:46,244 - #38 (
INFO  23:32:46,244 - #47 int
INFO  23:32:46,244 - #47 param1
INFO  23:32:46,244 - #36 ,
INFO  23:32:46,245 - #47 int
INFO  23:32:46,245 - #47 param2
INFO  23:32:46,246 - #36 ,
INFO  23:32:46,246 - #47 char
INFO  23:32:46,246 - #47 param3
INFO  23:32:46,246 - #39 )
INFO  23:32:46,247 - #47 bool
INFO  23:32:46,247 - #47 c
INFO  23:32:46,247 - #36 ,
INFO  23:32:46,248 - #47 d
INFO  23:32:46,248 - #34 ;
INFO  23:32:46,248 - #42 {
INFO  23:32:46,248 - #11 return
INFO  23:32:46,248 - #47 c
INFO  23:32:46,248 - #34 ;
INFO  23:32:46,248 - #43 }
INFO  23:32:46,248 - #47 int
INFO  23:32:46,249 - #47 test
INFO  23:32:46,249 - #38 (
INFO  23:32:46,249 - #39 )
INFO  23:32:46,249 - #47 bool
INFO  23:32:46,249 - #47 c
INFO  23:32:46,249 - #34 ;
INFO  23:32:46,249 - #42 {
INFO  23:32:46,249 - #47 dd
INFO  23:32:46,249 - #31 =
INFO  23:32:46,250 - #47 Unpacking
INFO  23:32:46,250 - #45 ::
INFO  23:32:46,250 - #47 a
INFO  23:32:46,250 - #20 *
INFO  23:32:46,250 - #47 dd
INFO  23:32:46,252 - #34 ;
INFO  23:32:46,253 - #47 Unpacking
INFO  23:32:46,253 - #45 ::
INFO  23:32:46,253 - #47 a
INFO  23:32:46,253 - #31 =
INFO  23:32:46,253 - #47 Unpacking
INFO  23:32:46,254 - #45 ::
INFO  23:32:46,254 - #47 a
INFO  23:32:46,254 - #18 +
INFO  23:32:46,254 - #47 Unpacking
INFO  23:32:46,256 - #45 ::
INFO  23:32:46,256 - #47 a
INFO  23:32:46,256 - #20 *
INFO  23:32:46,256 - #47 dd
INFO  23:32:46,256 - #34 ;
INFO  23:32:46,256 - #47 Unpacking
INFO  23:32:46,257 - #45 ::
INFO  23:32:46,257 - #47 a
INFO  23:32:46,257 - #31 =
INFO  23:32:46,257 - #19 -
INFO  23:32:46,257 - #47 dd
INFO  23:32:46,257 - #34 ;
INFO  23:32:46,257 - #47 dd
INFO  23:32:46,258 - #31 =
INFO  23:32:46,258 - #46 3
INFO  23:32:46,258 - #34 ;
INFO  23:32:46,258 - #47 dd
INFO  23:32:46,259 - #31 =
INFO  23:32:46,259 - #19 -
INFO  23:32:46,259 - #46 9
INFO  23:32:46,259 - #34 ;
INFO  23:32:46,260 - #11 return
INFO  23:32:46,260 - #46 3
INFO  23:32:46,260 - #34 ;
INFO  23:32:46,260 - #7 if
INFO  23:32:46,260 - #38 (
INFO  23:32:46,260 - #47 pokusaj
INFO  23:32:46,261 - #23 ==
INFO  23:32:46,261 - #48 true
INFO  23:32:46,263 - #39 )
INFO  23:32:46,263 - #42 {
INFO  23:32:46,264 - #47 dd
INFO  23:32:46,264 - #32 ++
INFO  23:32:46,264 - #34 ;
INFO  23:32:46,264 - #43 }
INFO  23:32:46,264 - #5 else
INFO  23:32:46,264 - #42 {
INFO  23:32:46,265 - #47 c
INFO  23:32:46,265 - #31 =
INFO  23:32:46,265 - #48 true
INFO  23:32:46,265 - #34 ;
INFO  23:32:46,265 - #43 }
INFO  23:32:46,265 - #43 }
INFO  23:32:46,266 - #47 int
INFO  23:32:46,266 - #47 main
INFO  23:32:46,267 - #38 (
INFO  23:32:46,268 - #39 )
INFO  23:32:46,268 - #47 int
INFO  23:32:46,268 - #47 prvi
INFO  23:32:46,269 - #36 ,
INFO  23:32:46,269 - #47 drugi
INFO  23:32:46,269 - #34 ;
INFO  23:32:46,269 - #47 bool
INFO  23:32:46,269 - #47 treci
INFO  23:32:46,269 - #34 ;
INFO  23:32:46,269 - #42 {
INFO  23:32:46,270 - #47 testtest
INFO  23:32:46,270 - #38 (
INFO  23:32:46,270 - #47 prvi
INFO  23:32:46,270 - #36 ,
INFO  23:32:46,270 - #47 drugi
INFO  23:32:46,270 - #36 ,
INFO  23:32:46,271 - #47 treci
INFO  23:32:46,271 - #39 )
INFO  23:32:46,271 - #34 ;
INFO  23:32:46,272 - #11 return
INFO  23:32:46,272 - #46 2
INFO  23:32:46,272 - #34 ;
INFO  23:32:46,272 - #43 }
INFO  23:32:46,272 - #43 }
INFO  23:32:46,281 - Program(
  ProgName(
   test302
  ) [ProgName]
  NamespaceList(
    NoNamespaceList(
    ) [NoNamespaceList]
    Namespace(
      NamespaceName(
       Unpacking
      ) [NamespaceName]
      NamespaceDecls(
        NamespaceDecls(
          NamespaceDecls(
            NamespaceDecls(
              NoNamespaceDecls(
              ) [NoNamespaceDecls]
              NamespaceVarDecl(
                Type(
                 int
                ) [Type]
                MultipleVarDecls(
                  SingleVarDecl(
                    VarNameDecl(
                     a
                    ) [VarNameDecl]
                  ) [SingleVarDecl]
                  VarNameDecl(
                   b
                  ) [VarNameDecl]
                ) [MultipleVarDecls]
              ) [NamespaceVarDecl]
            ) [NamespaceDecls]
            NamespaceVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 niz
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [NamespaceVarDecl]
          ) [NamespaceDecls]
          NamespaceVarDecl(
            Type(
             int
            ) [Type]
            SingleVarDecl(
              VarArrayNameDecl(
               arr
              ) [VarArrayNameDecl]
            ) [SingleVarDecl]
          ) [NamespaceVarDecl]
        ) [NamespaceDecls]
        NamespaceVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarArrayNameDecl(
             buarr
            ) [VarArrayNameDecl]
          ) [SingleVarDecl]
        ) [NamespaceVarDecl]
      ) [NamespaceDecls]
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               int
              ) [Type]
            ) [MethRetType]
           main
          ) [MethodTypeName]
          NoFormParam(
          ) [NoFormParam]
          NoMethVar(
          ) [NoMethVar]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   2
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
    ) [Namespace]
  ) [NamespaceList]
  ProgramDecls(
    ProgramDecls(
      ProgramDecls(
        ProgramDecls(
          ProgramDecls(
            NoProgramDecls(
            ) [NoProgramDecls]
            ProgramVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 nizic
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [ProgramVarDecl]
          ) [ProgramDecls]
          ProgramConstDecl(
            Type(
             bool
            ) [Type]
            SingleConstDecl(
              ConstDecl(
               ok
                BoolConst(
                 false
                ) [BoolConst]
              ) [ConstDecl]
            ) [SingleConstDecl]
          ) [ProgramConstDecl]
        ) [ProgramDecls]
        ProgramVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             pokusaj
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [ProgramVarDecl]
      ) [ProgramDecls]
      ProgramVarDecl(
        Type(
         int
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           dd
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [ProgramVarDecl]
    ) [ProgramDecls]
    ProgramVarDecl(
      Type(
       char
      ) [Type]
      SingleVarDecl(
        VarNameDecl(
         slovo
        ) [VarNameDecl]
      ) [SingleVarDecl]
    ) [ProgramVarDecl]
  ) [ProgramDecls]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecl(
          ) [NoMethodDecl]
          MethodDecl(
            MethodTypeName(
              MethRetVoid(
              ) [MethRetVoid]
             funkcija
            ) [MethodTypeName]
            NoFormParam(
            ) [NoFormParam]
            MethodVars(
              NoMethVar(
              ) [NoMethVar]
              Type(
               int
              ) [Type]
              MultipleVarDecls(
                SingleVarDecl(
                  VarNameDecl(
                   c
                  ) [VarNameDecl]
                ) [SingleVarDecl]
                VarNameDecl(
                 d
                ) [VarNameDecl]
              ) [MultipleVarDecls]
            ) [MethodVars]
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            NoStmt(
                            ) [NoStmt]
                            DesignatorStmt(
                              DesigStmtActions(
                                DesigArray(
                                 nizic
                                  PosTermExpr(
                                    FactorTerm(
                                      NumFactor(
                                       3
                                      ) [NumFactor]
                                    ) [FactorTerm]
                                  ) [PosTermExpr]
                                ) [DesigArray]
                                DesigInc(
                                ) [DesigInc]
                              ) [DesigStmtActions]
                            ) [DesignatorStmt]
                          ) [Statements]
                          DesignatorStmt(
                            DesigStmtActions(
                              DesigArray(
                               nizic
                                PosTermExpr(
                                  FactorTerm(
                                    NumFactor(
                                     3
                                    ) [NumFactor]
                                  ) [FactorTerm]
                                ) [PosTermExpr]
                              ) [DesigArray]
                              DesigDec(
                              ) [DesigDec]
                            ) [DesigStmtActions]
                          ) [DesignatorStmt]
                        ) [Statements]
                        DesignatorStmt(
                          DesigStmtActions(
                            DesigVar(
                             dd
                            ) [DesigVar]
                            DesigInc(
                            ) [DesigInc]
                          ) [DesigStmtActions]
                        ) [DesignatorStmt]
                      ) [Statements]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          DesigDec(
                          ) [DesigDec]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigArray(
                         Unpacking
                         niz
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ScopeDesigArray]
                        DesigInc(
                        ) [DesigInc]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  ReadExpr(
                    DesigVar(
                     pokusaj
                    ) [DesigVar]
                  ) [ReadExpr]
                ) [Statements]
                ReadExpr(
                  ScopeDesigVar(
                   Unpacking
                   a
                  ) [ScopeDesigVar]
                ) [ReadExpr]
              ) [Statements]
              PrintStmt(
                PosTermExpr(
                  FactorTerm(
                    NumFactor(
                     3
                    ) [NumFactor]
                  ) [FactorTerm]
                ) [PosTermExpr]
                PrintVar(
                 2
                ) [PrintVar]
              ) [PrintStmt]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               bool
              ) [Type]
            ) [MethRetType]
           testtest
          ) [MethodTypeName]
          FormParams(
            FormCommaParamDecl(
              FormCommaParamDecl(
                FormParamDecl(
                  FormParamVar(
                    Type(
                     int
                    ) [Type]
                   param1
                  ) [FormParamVar]
                ) [FormParamDecl]
                FormParamVar(
                  Type(
                   int
                  ) [Type]
                 param2
                ) [FormParamVar]
              ) [FormCommaParamDecl]
              FormParamVar(
                Type(
                 char
                ) [Type]
               param3
              ) [FormParamVar]
            ) [FormCommaParamDecl]
          ) [FormParams]
          MethodVars(
            NoMethVar(
            ) [NoMethVar]
            Type(
             bool
            ) [Type]
            MultipleVarDecls(
              SingleVarDecl(
                VarNameDecl(
                 c
                ) [VarNameDecl]
              ) [SingleVarDecl]
              VarNameDecl(
               d
              ) [VarNameDecl]
            ) [MultipleVarDecls]
          ) [MethodVars]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  VarFactor(
                    DesigVar(
                     c
                    ) [DesigVar]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        MethodTypeName(
          MethRetType(
            Type(
             int
            ) [Type]
          ) [MethRetType]
         test
        ) [MethodTypeName]
        NoFormParam(
        ) [NoFormParam]
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             c
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [MethodVars]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          AssignExpr(
                            PosTermExpr(
                              MulTerm(
                                FactorTerm(
                                  VarFactor(
                                    ScopeDesigVar(
                                     Unpacking
                                     a
                                    ) [ScopeDesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                                Mul(
                                ) [Mul]
                                VarFactor(
                                  DesigVar(
                                   dd
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [MulTerm]
                            ) [PosTermExpr]
                          ) [AssignExpr]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigVar(
                         Unpacking
                         a
                        ) [ScopeDesigVar]
                        AssignExpr(
                          AddExpr(
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                            Add(
                            ) [Add]
                            MulTerm(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                              Mul(
                              ) [Mul]
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [MulTerm]
                          ) [AddExpr]
                        ) [AssignExpr]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    DesigStmtActions(
                      ScopeDesigVar(
                       Unpacking
                       a
                      ) [ScopeDesigVar]
                      AssignExpr(
                        NegTermeExpr(
                          FactorTerm(
                            VarFactor(
                              DesigVar(
                               dd
                              ) [DesigVar]
                            ) [VarFactor]
                          ) [FactorTerm]
                        ) [NegTermeExpr]
                      ) [AssignExpr]
                    ) [DesigStmtActions]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          NumFactor(
                           3
                          ) [NumFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                DesigStmtActions(
                  DesigVar(
                   dd
                  ) [DesigVar]
                  AssignExpr(
                    NegTermeExpr(
                      FactorTerm(
                        NumFactor(
                         9
                        ) [NumFactor]
                      ) [FactorTerm]
                    ) [NegTermeExpr]
                  ) [AssignExpr]
                ) [DesigStmtActions]
              ) [DesignatorStmt]
            ) [Statements]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   3
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
          IfElseStmt(
            ConditionCondTerm(
              CondTermFact(
                RelOpCondFact(
                  PosTermExpr(
                    FactorTerm(
                      VarFactor(
                        DesigVar(
                         pokusaj
                        ) [DesigVar]
                      ) [VarFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                  EqlOp(
                  ) [EqlOp]
                  PosTermExpr(
                    FactorTerm(
                      BoolFactor(
                       true
                      ) [BoolFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                ) [RelOpCondFact]
              ) [CondTermFact]
            ) [ConditionCondTerm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    DesigInc(
                    ) [DesigInc]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     c
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          BoolFactor(
                           true
                          ) [BoolFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
          ) [IfElseStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        MethRetType(
          Type(
           int
          ) [Type]
        ) [MethRetType]
       main
      ) [MethodTypeName]
      NoFormParam(
      ) [NoFormParam]
      MethodVars(
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           int
          ) [Type]
          MultipleVarDecls(
            SingleVarDecl(
              VarNameDecl(
               prvi
              ) [VarNameDecl]
            ) [SingleVarDecl]
            VarNameDecl(
             drugi
            ) [VarNameDecl]
          ) [MultipleVarDecls]
        ) [MethodVars]
        Type(
         bool
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           treci
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [MethodVars]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          DesignatorStmt(
            DesigStmtActions(
              DesigVar(
               testtest
              ) [DesigVar]
              DesigFuncCall(
                ActPars(
                  ActualParamsList(
                    ActualParamsList(
                      ActualParam(
                        PosTermExpr(
                          FactorTerm(
                            VarFactor(
                              DesigVar(
                               prvi
                              ) [DesigVar]
                            ) [VarFactor]
                          ) [FactorTerm]
                        ) [PosTermExpr]
                      ) [ActualParam]
                      PosTermExpr(
                        FactorTerm(
                          VarFactor(
                            DesigVar(
                             drugi
                            ) [DesigVar]
                          ) [VarFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [ActualParamsList]
                    PosTermExpr(
                      FactorTerm(
                        VarFactor(
                          DesigVar(
                           treci
                          ) [DesigVar]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [PosTermExpr]
                  ) [ActualParamsList]
                ) [ActPars]
              ) [DesigFuncCall]
            ) [DesigStmtActions]
          ) [DesignatorStmt]
        ) [Statements]
        ReturnExpr(
          PosTermExpr(
            FactorTerm(
              NumFactor(
               2
              ) [NumFactor]
            ) [FactorTerm]
          ) [PosTermExpr]
        ) [ReturnExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:32:46,289 - Deklarisana promenljiva Unpacking::a na liniji 6
INFO  23:32:46,289 - Deklarisana promenljiva Unpacking::b na liniji 6
INFO  23:32:46,289 - Deklarisana promenljiva Unpacking::niz na liniji 7
INFO  23:32:46,289 - Deklarisana promenljiva Unpacking::arr na liniji 8
INFO  23:32:46,289 - Deklarisana promenljiva Unpacking::buarr na liniji 9
INFO  23:32:46,290 - Obradjuje se funkcija main na liniji 11
INFO  23:32:46,291 - Deklarisana promenljiva nizic na liniji 16
INFO  23:32:46,291 - Deklarisana konstanta ok na liniji 17
INFO  23:32:46,291 - Deklarisana promenljiva pokusaj na liniji 18
INFO  23:32:46,291 - Deklarisana promenljiva dd na liniji 19
INFO  23:32:46,291 - Deklarisana promenljiva slovo na liniji 20
INFO  23:32:46,291 - Obradjuje se funkcija funkcija na liniji 23
INFO  23:32:46,291 - Deklarisana promenljiva c na liniji 23
INFO  23:32:46,291 - Deklarisana promenljiva d na liniji 23
INFO  23:32:46,292 - Pretraga na 25(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 25
INFO  23:32:46,293 - Pretraga na 26(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 26
INFO  23:32:46,293 - Pretraga na 29(Unpacking::niz), nadjeno Var Unpacking::niz: Arr of int, 2, 0  na liniji 29
INFO  23:32:46,294 - Obradjuje se funkcija testtest na liniji 38
INFO  23:32:46,294 - Deklarisan parametar param1 metode: testtest. na liniji 38
INFO  23:32:46,295 - Deklarisan parametar param2 metode: testtest. na liniji 38
INFO  23:32:46,295 - Deklarisan parametar param3 metode: testtest. na liniji 38
INFO  23:32:46,295 - Deklarisana promenljiva c na liniji 38
INFO  23:32:46,296 - Deklarisana promenljiva d na liniji 38
INFO  23:32:46,296 - Obradjuje se funkcija test na liniji 42
INFO  23:32:46,296 - Deklarisana promenljiva c na liniji 42
INFO  23:32:46,299 - Obradjuje se funkcija main na liniji 61
INFO  23:32:46,299 - Deklarisana promenljiva prvi na liniji 62
INFO  23:32:46,299 - Deklarisana promenljiva drugi na liniji 62
INFO  23:32:46,300 - Deklarisana promenljiva treci na liniji 63
ERROR 23:32:46,300 - Greska na liniji 65stvarni parametar ne odgovara formalnom parametru metode po tipu!
ERROR 23:32:46,301 - Greska na liniji 65broj stvarnih parametara je manji od broja formalnih parametara!
ERROR 23:32:46,301 - Greska na liniji 67: izraz koji se vraca ne odgovara povratnom tipu metode testtest!
INFO  23:32:46,302 -  Print count calls = 0
INFO  23:32:46,302 -  Deklarisanih promenljivih ima = 0
INFO  23:32:46,302 - Neuspesna semanticka analiza!!
INFO  23:33:04,361 - Compiling source file: C:\Users\Zoki\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:33:04,446 - #2 program
INFO  23:33:04,446 - #47 test302
INFO  23:33:04,446 - #17 namespace
INFO  23:33:04,449 - #47 Unpacking
INFO  23:33:04,449 - #42 {
INFO  23:33:04,450 - #47 int
INFO  23:33:04,451 - #47 a
INFO  23:33:04,452 - #36 ,
INFO  23:33:04,453 - #47 b
INFO  23:33:04,453 - #34 ;
INFO  23:33:04,453 - #47 int
INFO  23:33:04,454 - #47 niz
INFO  23:33:04,454 - #40 [
INFO  23:33:04,454 - #41 ]
INFO  23:33:04,454 - #34 ;
INFO  23:33:04,454 - #47 int
INFO  23:33:04,454 - #47 arr
INFO  23:33:04,455 - #40 [
INFO  23:33:04,455 - #41 ]
INFO  23:33:04,455 - #34 ;
INFO  23:33:04,455 - #47 bool
INFO  23:33:04,455 - #47 buarr
INFO  23:33:04,457 - #40 [
INFO  23:33:04,457 - #41 ]
INFO  23:33:04,458 - #34 ;
INFO  23:33:04,459 - #42 {
INFO  23:33:04,459 - #47 int
INFO  23:33:04,460 - #47 main
INFO  23:33:04,460 - #38 (
INFO  23:33:04,462 - #39 )
INFO  23:33:04,464 - #42 {
INFO  23:33:04,465 - #11 return
INFO  23:33:04,466 - #46 2
INFO  23:33:04,466 - #34 ;
INFO  23:33:04,467 - #43 }
INFO  23:33:04,467 - #43 }
INFO  23:33:04,469 - #43 }
INFO  23:33:04,469 - #47 int
INFO  23:33:04,471 - #47 nizic
INFO  23:33:04,472 - #40 [
INFO  23:33:04,472 - #41 ]
INFO  23:33:04,472 - #34 ;
INFO  23:33:04,472 - #6 const
INFO  23:33:04,473 - #47 bool
INFO  23:33:04,473 - #47 ok
INFO  23:33:04,473 - #31 =
INFO  23:33:04,473 - #48 false
INFO  23:33:04,473 - #34 ;
INFO  23:33:04,475 - #47 bool
INFO  23:33:04,475 - #47 pokusaj
INFO  23:33:04,476 - #34 ;
INFO  23:33:04,476 - #47 int
INFO  23:33:04,476 - #47 dd
INFO  23:33:04,476 - #34 ;
INFO  23:33:04,476 - #47 char
INFO  23:33:04,476 - #47 slovo
INFO  23:33:04,476 - #34 ;
INFO  23:33:04,477 - #42 {
INFO  23:33:04,477 - #12 void
INFO  23:33:04,477 - #47 funkcija
INFO  23:33:04,478 - #38 (
INFO  23:33:04,478 - #39 )
INFO  23:33:04,478 - #47 int
INFO  23:33:04,479 - #47 c
INFO  23:33:04,479 - #36 ,
INFO  23:33:04,479 - #47 d
INFO  23:33:04,479 - #34 ;
INFO  23:33:04,480 - #42 {
INFO  23:33:04,480 - #47 nizic
INFO  23:33:04,480 - #40 [
INFO  23:33:04,480 - #46 3
INFO  23:33:04,481 - #41 ]
INFO  23:33:04,481 - #32 ++
INFO  23:33:04,481 - #34 ;
INFO  23:33:04,482 - #47 nizic
INFO  23:33:04,483 - #40 [
INFO  23:33:04,483 - #46 3
INFO  23:33:04,483 - #41 ]
INFO  23:33:04,483 - #33 --
INFO  23:33:04,483 - #34 ;
INFO  23:33:04,485 - #47 dd
INFO  23:33:04,485 - #32 ++
INFO  23:33:04,485 - #34 ;
INFO  23:33:04,485 - #47 dd
INFO  23:33:04,485 - #33 --
INFO  23:33:04,486 - #34 ;
INFO  23:33:04,486 - #47 Unpacking
INFO  23:33:04,486 - #45 ::
INFO  23:33:04,486 - #47 niz
INFO  23:33:04,486 - #40 [
INFO  23:33:04,486 - #47 dd
INFO  23:33:04,488 - #41 ]
INFO  23:33:04,488 - #32 ++
INFO  23:33:04,489 - #34 ;
INFO  23:33:04,489 - #10 read
INFO  23:33:04,489 - #38 (
INFO  23:33:04,489 - #47 pokusaj
INFO  23:33:04,489 - #39 )
INFO  23:33:04,490 - #34 ;
INFO  23:33:04,490 - #10 read
INFO  23:33:04,490 - #38 (
INFO  23:33:04,490 - #47 Unpacking
INFO  23:33:04,490 - #45 ::
INFO  23:33:04,491 - #47 a
INFO  23:33:04,491 - #39 )
INFO  23:33:04,491 - #34 ;
INFO  23:33:04,491 - #9 print
INFO  23:33:04,491 - #38 (
INFO  23:33:04,491 - #46 3
INFO  23:33:04,492 - #36 ,
INFO  23:33:04,492 - #46 2
INFO  23:33:04,492 - #39 )
INFO  23:33:04,493 - #34 ;
INFO  23:33:04,493 - #43 }
INFO  23:33:04,494 - #47 bool
INFO  23:33:04,494 - #47 testtest
INFO  23:33:04,494 - #38 (
INFO  23:33:04,494 - #47 int
INFO  23:33:04,495 - #47 param1
INFO  23:33:04,495 - #36 ,
INFO  23:33:04,496 - #47 int
INFO  23:33:04,497 - #47 param2
INFO  23:33:04,497 - #36 ,
INFO  23:33:04,498 - #47 char
INFO  23:33:04,498 - #47 param3
INFO  23:33:04,499 - #39 )
INFO  23:33:04,499 - #47 bool
INFO  23:33:04,500 - #47 c
INFO  23:33:04,500 - #36 ,
INFO  23:33:04,500 - #47 d
INFO  23:33:04,500 - #34 ;
INFO  23:33:04,500 - #42 {
INFO  23:33:04,500 - #11 return
INFO  23:33:04,501 - #47 c
INFO  23:33:04,501 - #34 ;
INFO  23:33:04,501 - #43 }
INFO  23:33:04,501 - #47 int
INFO  23:33:04,502 - #47 test
INFO  23:33:04,502 - #38 (
INFO  23:33:04,502 - #39 )
INFO  23:33:04,503 - #47 bool
INFO  23:33:04,503 - #47 c
INFO  23:33:04,503 - #34 ;
INFO  23:33:04,503 - #42 {
INFO  23:33:04,503 - #47 dd
INFO  23:33:04,504 - #31 =
INFO  23:33:04,504 - #47 Unpacking
INFO  23:33:04,504 - #45 ::
INFO  23:33:04,505 - #47 a
INFO  23:33:04,505 - #20 *
INFO  23:33:04,505 - #47 dd
INFO  23:33:04,507 - #34 ;
INFO  23:33:04,507 - #47 Unpacking
INFO  23:33:04,508 - #45 ::
INFO  23:33:04,508 - #47 a
INFO  23:33:04,508 - #31 =
INFO  23:33:04,508 - #47 Unpacking
INFO  23:33:04,508 - #45 ::
INFO  23:33:04,508 - #47 a
INFO  23:33:04,508 - #18 +
INFO  23:33:04,508 - #47 Unpacking
INFO  23:33:04,510 - #45 ::
INFO  23:33:04,510 - #47 a
INFO  23:33:04,510 - #20 *
INFO  23:33:04,511 - #47 dd
INFO  23:33:04,511 - #34 ;
INFO  23:33:04,511 - #47 Unpacking
INFO  23:33:04,512 - #45 ::
INFO  23:33:04,512 - #47 a
INFO  23:33:04,513 - #31 =
INFO  23:33:04,513 - #19 -
INFO  23:33:04,514 - #47 dd
INFO  23:33:04,514 - #34 ;
INFO  23:33:04,514 - #47 dd
INFO  23:33:04,514 - #31 =
INFO  23:33:04,515 - #46 3
INFO  23:33:04,515 - #34 ;
INFO  23:33:04,515 - #47 dd
INFO  23:33:04,515 - #31 =
INFO  23:33:04,515 - #19 -
INFO  23:33:04,516 - #46 9
INFO  23:33:04,516 - #34 ;
INFO  23:33:04,516 - #11 return
INFO  23:33:04,517 - #46 3
INFO  23:33:04,517 - #34 ;
INFO  23:33:04,517 - #7 if
INFO  23:33:04,517 - #38 (
INFO  23:33:04,517 - #47 pokusaj
INFO  23:33:04,519 - #23 ==
INFO  23:33:04,520 - #48 true
INFO  23:33:04,522 - #39 )
INFO  23:33:04,523 - #42 {
INFO  23:33:04,524 - #47 dd
INFO  23:33:04,524 - #32 ++
INFO  23:33:04,524 - #34 ;
INFO  23:33:04,525 - #43 }
INFO  23:33:04,525 - #5 else
INFO  23:33:04,525 - #42 {
INFO  23:33:04,526 - #47 c
INFO  23:33:04,528 - #31 =
INFO  23:33:04,528 - #48 true
INFO  23:33:04,528 - #34 ;
INFO  23:33:04,529 - #43 }
INFO  23:33:04,529 - #43 }
INFO  23:33:04,529 - #47 int
INFO  23:33:04,530 - #47 main
INFO  23:33:04,530 - #38 (
INFO  23:33:04,530 - #39 )
INFO  23:33:04,530 - #47 int
INFO  23:33:04,531 - #47 prvi
INFO  23:33:04,531 - #36 ,
INFO  23:33:04,531 - #47 drugi
INFO  23:33:04,531 - #34 ;
INFO  23:33:04,532 - #47 bool
INFO  23:33:04,532 - #47 treci
INFO  23:33:04,532 - #34 ;
INFO  23:33:04,532 - #42 {
INFO  23:33:04,533 - #47 treci
INFO  23:33:04,533 - #31 =
INFO  23:33:04,533 - #47 testtest
INFO  23:33:04,533 - #38 (
INFO  23:33:04,533 - #47 prvi
INFO  23:33:04,533 - #36 ,
INFO  23:33:04,534 - #47 drugi
INFO  23:33:04,534 - #36 ,
INFO  23:33:04,534 - #47 treci
INFO  23:33:04,534 - #39 )
INFO  23:33:04,535 - #34 ;
INFO  23:33:04,536 - #11 return
INFO  23:33:04,536 - #46 2
INFO  23:33:04,536 - #34 ;
INFO  23:33:04,537 - #43 }
INFO  23:33:04,537 - #43 }
INFO  23:33:04,548 - Program(
  ProgName(
   test302
  ) [ProgName]
  NamespaceList(
    NoNamespaceList(
    ) [NoNamespaceList]
    Namespace(
      NamespaceName(
       Unpacking
      ) [NamespaceName]
      NamespaceDecls(
        NamespaceDecls(
          NamespaceDecls(
            NamespaceDecls(
              NoNamespaceDecls(
              ) [NoNamespaceDecls]
              NamespaceVarDecl(
                Type(
                 int
                ) [Type]
                MultipleVarDecls(
                  SingleVarDecl(
                    VarNameDecl(
                     a
                    ) [VarNameDecl]
                  ) [SingleVarDecl]
                  VarNameDecl(
                   b
                  ) [VarNameDecl]
                ) [MultipleVarDecls]
              ) [NamespaceVarDecl]
            ) [NamespaceDecls]
            NamespaceVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 niz
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [NamespaceVarDecl]
          ) [NamespaceDecls]
          NamespaceVarDecl(
            Type(
             int
            ) [Type]
            SingleVarDecl(
              VarArrayNameDecl(
               arr
              ) [VarArrayNameDecl]
            ) [SingleVarDecl]
          ) [NamespaceVarDecl]
        ) [NamespaceDecls]
        NamespaceVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarArrayNameDecl(
             buarr
            ) [VarArrayNameDecl]
          ) [SingleVarDecl]
        ) [NamespaceVarDecl]
      ) [NamespaceDecls]
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               int
              ) [Type]
            ) [MethRetType]
           main
          ) [MethodTypeName]
          NoFormParam(
          ) [NoFormParam]
          NoMethVar(
          ) [NoMethVar]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   2
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
    ) [Namespace]
  ) [NamespaceList]
  ProgramDecls(
    ProgramDecls(
      ProgramDecls(
        ProgramDecls(
          ProgramDecls(
            NoProgramDecls(
            ) [NoProgramDecls]
            ProgramVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 nizic
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [ProgramVarDecl]
          ) [ProgramDecls]
          ProgramConstDecl(
            Type(
             bool
            ) [Type]
            SingleConstDecl(
              ConstDecl(
               ok
                BoolConst(
                 false
                ) [BoolConst]
              ) [ConstDecl]
            ) [SingleConstDecl]
          ) [ProgramConstDecl]
        ) [ProgramDecls]
        ProgramVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             pokusaj
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [ProgramVarDecl]
      ) [ProgramDecls]
      ProgramVarDecl(
        Type(
         int
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           dd
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [ProgramVarDecl]
    ) [ProgramDecls]
    ProgramVarDecl(
      Type(
       char
      ) [Type]
      SingleVarDecl(
        VarNameDecl(
         slovo
        ) [VarNameDecl]
      ) [SingleVarDecl]
    ) [ProgramVarDecl]
  ) [ProgramDecls]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecl(
          ) [NoMethodDecl]
          MethodDecl(
            MethodTypeName(
              MethRetVoid(
              ) [MethRetVoid]
             funkcija
            ) [MethodTypeName]
            NoFormParam(
            ) [NoFormParam]
            MethodVars(
              NoMethVar(
              ) [NoMethVar]
              Type(
               int
              ) [Type]
              MultipleVarDecls(
                SingleVarDecl(
                  VarNameDecl(
                   c
                  ) [VarNameDecl]
                ) [SingleVarDecl]
                VarNameDecl(
                 d
                ) [VarNameDecl]
              ) [MultipleVarDecls]
            ) [MethodVars]
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            NoStmt(
                            ) [NoStmt]
                            DesignatorStmt(
                              DesigStmtActions(
                                DesigArray(
                                 nizic
                                  PosTermExpr(
                                    FactorTerm(
                                      NumFactor(
                                       3
                                      ) [NumFactor]
                                    ) [FactorTerm]
                                  ) [PosTermExpr]
                                ) [DesigArray]
                                DesigInc(
                                ) [DesigInc]
                              ) [DesigStmtActions]
                            ) [DesignatorStmt]
                          ) [Statements]
                          DesignatorStmt(
                            DesigStmtActions(
                              DesigArray(
                               nizic
                                PosTermExpr(
                                  FactorTerm(
                                    NumFactor(
                                     3
                                    ) [NumFactor]
                                  ) [FactorTerm]
                                ) [PosTermExpr]
                              ) [DesigArray]
                              DesigDec(
                              ) [DesigDec]
                            ) [DesigStmtActions]
                          ) [DesignatorStmt]
                        ) [Statements]
                        DesignatorStmt(
                          DesigStmtActions(
                            DesigVar(
                             dd
                            ) [DesigVar]
                            DesigInc(
                            ) [DesigInc]
                          ) [DesigStmtActions]
                        ) [DesignatorStmt]
                      ) [Statements]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          DesigDec(
                          ) [DesigDec]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigArray(
                         Unpacking
                         niz
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ScopeDesigArray]
                        DesigInc(
                        ) [DesigInc]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  ReadExpr(
                    DesigVar(
                     pokusaj
                    ) [DesigVar]
                  ) [ReadExpr]
                ) [Statements]
                ReadExpr(
                  ScopeDesigVar(
                   Unpacking
                   a
                  ) [ScopeDesigVar]
                ) [ReadExpr]
              ) [Statements]
              PrintStmt(
                PosTermExpr(
                  FactorTerm(
                    NumFactor(
                     3
                    ) [NumFactor]
                  ) [FactorTerm]
                ) [PosTermExpr]
                PrintVar(
                 2
                ) [PrintVar]
              ) [PrintStmt]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               bool
              ) [Type]
            ) [MethRetType]
           testtest
          ) [MethodTypeName]
          FormParams(
            FormCommaParamDecl(
              FormCommaParamDecl(
                FormParamDecl(
                  FormParamVar(
                    Type(
                     int
                    ) [Type]
                   param1
                  ) [FormParamVar]
                ) [FormParamDecl]
                FormParamVar(
                  Type(
                   int
                  ) [Type]
                 param2
                ) [FormParamVar]
              ) [FormCommaParamDecl]
              FormParamVar(
                Type(
                 char
                ) [Type]
               param3
              ) [FormParamVar]
            ) [FormCommaParamDecl]
          ) [FormParams]
          MethodVars(
            NoMethVar(
            ) [NoMethVar]
            Type(
             bool
            ) [Type]
            MultipleVarDecls(
              SingleVarDecl(
                VarNameDecl(
                 c
                ) [VarNameDecl]
              ) [SingleVarDecl]
              VarNameDecl(
               d
              ) [VarNameDecl]
            ) [MultipleVarDecls]
          ) [MethodVars]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  VarFactor(
                    DesigVar(
                     c
                    ) [DesigVar]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        MethodTypeName(
          MethRetType(
            Type(
             int
            ) [Type]
          ) [MethRetType]
         test
        ) [MethodTypeName]
        NoFormParam(
        ) [NoFormParam]
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             c
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [MethodVars]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          AssignExpr(
                            PosTermExpr(
                              MulTerm(
                                FactorTerm(
                                  VarFactor(
                                    ScopeDesigVar(
                                     Unpacking
                                     a
                                    ) [ScopeDesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                                Mul(
                                ) [Mul]
                                VarFactor(
                                  DesigVar(
                                   dd
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [MulTerm]
                            ) [PosTermExpr]
                          ) [AssignExpr]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigVar(
                         Unpacking
                         a
                        ) [ScopeDesigVar]
                        AssignExpr(
                          AddExpr(
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                            Add(
                            ) [Add]
                            MulTerm(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                              Mul(
                              ) [Mul]
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [MulTerm]
                          ) [AddExpr]
                        ) [AssignExpr]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    DesigStmtActions(
                      ScopeDesigVar(
                       Unpacking
                       a
                      ) [ScopeDesigVar]
                      AssignExpr(
                        NegTermeExpr(
                          FactorTerm(
                            VarFactor(
                              DesigVar(
                               dd
                              ) [DesigVar]
                            ) [VarFactor]
                          ) [FactorTerm]
                        ) [NegTermeExpr]
                      ) [AssignExpr]
                    ) [DesigStmtActions]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          NumFactor(
                           3
                          ) [NumFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                DesigStmtActions(
                  DesigVar(
                   dd
                  ) [DesigVar]
                  AssignExpr(
                    NegTermeExpr(
                      FactorTerm(
                        NumFactor(
                         9
                        ) [NumFactor]
                      ) [FactorTerm]
                    ) [NegTermeExpr]
                  ) [AssignExpr]
                ) [DesigStmtActions]
              ) [DesignatorStmt]
            ) [Statements]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   3
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
          IfElseStmt(
            ConditionCondTerm(
              CondTermFact(
                RelOpCondFact(
                  PosTermExpr(
                    FactorTerm(
                      VarFactor(
                        DesigVar(
                         pokusaj
                        ) [DesigVar]
                      ) [VarFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                  EqlOp(
                  ) [EqlOp]
                  PosTermExpr(
                    FactorTerm(
                      BoolFactor(
                       true
                      ) [BoolFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                ) [RelOpCondFact]
              ) [CondTermFact]
            ) [ConditionCondTerm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    DesigInc(
                    ) [DesigInc]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     c
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          BoolFactor(
                           true
                          ) [BoolFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
          ) [IfElseStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        MethRetType(
          Type(
           int
          ) [Type]
        ) [MethRetType]
       main
      ) [MethodTypeName]
      NoFormParam(
      ) [NoFormParam]
      MethodVars(
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           int
          ) [Type]
          MultipleVarDecls(
            SingleVarDecl(
              VarNameDecl(
               prvi
              ) [VarNameDecl]
            ) [SingleVarDecl]
            VarNameDecl(
             drugi
            ) [VarNameDecl]
          ) [MultipleVarDecls]
        ) [MethodVars]
        Type(
         bool
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           treci
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [MethodVars]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          DesignatorStmt(
            DesigStmtActions(
              DesigVar(
               treci
              ) [DesigVar]
              AssignExpr(
                PosTermExpr(
                  FactorTerm(
                    FactorFuncCall(
                      DesigVar(
                       testtest
                      ) [DesigVar]
                      ActPars(
                        ActualParamsList(
                          ActualParamsList(
                            ActualParam(
                              PosTermExpr(
                                FactorTerm(
                                  VarFactor(
                                    DesigVar(
                                     prvi
                                    ) [DesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                              ) [PosTermExpr]
                            ) [ActualParam]
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  DesigVar(
                                   drugi
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                          ) [ActualParamsList]
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 treci
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ActualParamsList]
                      ) [ActPars]
                    ) [FactorFuncCall]
                  ) [FactorTerm]
                ) [PosTermExpr]
              ) [AssignExpr]
            ) [DesigStmtActions]
          ) [DesignatorStmt]
        ) [Statements]
        ReturnExpr(
          PosTermExpr(
            FactorTerm(
              NumFactor(
               2
              ) [NumFactor]
            ) [FactorTerm]
          ) [PosTermExpr]
        ) [ReturnExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:33:04,560 - Deklarisana promenljiva Unpacking::a na liniji 6
INFO  23:33:04,560 - Deklarisana promenljiva Unpacking::b na liniji 6
INFO  23:33:04,560 - Deklarisana promenljiva Unpacking::niz na liniji 7
INFO  23:33:04,561 - Deklarisana promenljiva Unpacking::arr na liniji 8
INFO  23:33:04,561 - Deklarisana promenljiva Unpacking::buarr na liniji 9
INFO  23:33:04,561 - Obradjuje se funkcija main na liniji 11
INFO  23:33:04,562 - Deklarisana promenljiva nizic na liniji 16
INFO  23:33:04,563 - Deklarisana konstanta ok na liniji 17
INFO  23:33:04,563 - Deklarisana promenljiva pokusaj na liniji 18
INFO  23:33:04,563 - Deklarisana promenljiva dd na liniji 19
INFO  23:33:04,564 - Deklarisana promenljiva slovo na liniji 20
INFO  23:33:04,564 - Obradjuje se funkcija funkcija na liniji 23
INFO  23:33:04,564 - Deklarisana promenljiva c na liniji 23
INFO  23:33:04,565 - Deklarisana promenljiva d na liniji 23
INFO  23:33:04,565 - Pretraga na 25(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 25
INFO  23:33:04,569 - Pretraga na 26(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 26
INFO  23:33:04,569 - Pretraga na 29(Unpacking::niz), nadjeno Var Unpacking::niz: Arr of int, 2, 0  na liniji 29
INFO  23:33:04,571 - Obradjuje se funkcija testtest na liniji 38
INFO  23:33:04,572 - Deklarisan parametar param1 metode: testtest. na liniji 38
INFO  23:33:04,572 - Deklarisan parametar param2 metode: testtest. na liniji 38
INFO  23:33:04,573 - Deklarisan parametar param3 metode: testtest. na liniji 38
INFO  23:33:04,573 - Deklarisana promenljiva c na liniji 38
INFO  23:33:04,574 - Deklarisana promenljiva d na liniji 38
INFO  23:33:04,574 - Obradjuje se funkcija test na liniji 42
INFO  23:33:04,575 - Deklarisana promenljiva c na liniji 42
INFO  23:33:04,580 - Obradjuje se funkcija main na liniji 61
INFO  23:33:04,581 - Deklarisana promenljiva prvi na liniji 62
INFO  23:33:04,583 - Deklarisana promenljiva drugi na liniji 62
INFO  23:33:04,584 - Deklarisana promenljiva treci na liniji 63
ERROR 23:33:04,586 - Greska na liniji 65stvarni parametar ne odgovara formalnom parametru metode po tipu!
INFO  23:33:04,586 -  Print count calls = 0
INFO  23:33:04,586 -  Deklarisanih promenljivih ima = 0
INFO  23:33:04,587 - Neuspesna semanticka analiza!!
INFO  23:33:15,152 - Compiling source file: C:\Users\Zoki\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:33:15,229 - #2 program
INFO  23:33:15,230 - #47 test302
INFO  23:33:15,230 - #17 namespace
INFO  23:33:15,232 - #47 Unpacking
INFO  23:33:15,232 - #42 {
INFO  23:33:15,234 - #47 int
INFO  23:33:15,236 - #47 a
INFO  23:33:15,238 - #36 ,
INFO  23:33:15,238 - #47 b
INFO  23:33:15,238 - #34 ;
INFO  23:33:15,239 - #47 int
INFO  23:33:15,239 - #47 niz
INFO  23:33:15,239 - #40 [
INFO  23:33:15,239 - #41 ]
INFO  23:33:15,240 - #34 ;
INFO  23:33:15,240 - #47 int
INFO  23:33:15,240 - #47 arr
INFO  23:33:15,240 - #40 [
INFO  23:33:15,241 - #41 ]
INFO  23:33:15,241 - #34 ;
INFO  23:33:15,241 - #47 bool
INFO  23:33:15,243 - #47 buarr
INFO  23:33:15,245 - #40 [
INFO  23:33:15,245 - #41 ]
INFO  23:33:15,246 - #34 ;
INFO  23:33:15,246 - #42 {
INFO  23:33:15,246 - #47 int
INFO  23:33:15,248 - #47 main
INFO  23:33:15,248 - #38 (
INFO  23:33:15,253 - #39 )
INFO  23:33:15,255 - #42 {
INFO  23:33:15,257 - #11 return
INFO  23:33:15,258 - #46 2
INFO  23:33:15,258 - #34 ;
INFO  23:33:15,259 - #43 }
INFO  23:33:15,259 - #43 }
INFO  23:33:15,261 - #43 }
INFO  23:33:15,261 - #47 int
INFO  23:33:15,264 - #47 nizic
INFO  23:33:15,265 - #40 [
INFO  23:33:15,265 - #41 ]
INFO  23:33:15,265 - #34 ;
INFO  23:33:15,266 - #6 const
INFO  23:33:15,267 - #47 bool
INFO  23:33:15,267 - #47 ok
INFO  23:33:15,268 - #31 =
INFO  23:33:15,268 - #48 false
INFO  23:33:15,268 - #34 ;
INFO  23:33:15,273 - #47 bool
INFO  23:33:15,274 - #47 pokusaj
INFO  23:33:15,274 - #34 ;
INFO  23:33:15,275 - #47 int
INFO  23:33:15,275 - #47 dd
INFO  23:33:15,275 - #34 ;
INFO  23:33:15,275 - #47 char
INFO  23:33:15,275 - #47 slovo
INFO  23:33:15,275 - #34 ;
INFO  23:33:15,276 - #42 {
INFO  23:33:15,276 - #12 void
INFO  23:33:15,276 - #47 funkcija
INFO  23:33:15,278 - #38 (
INFO  23:33:15,278 - #39 )
INFO  23:33:15,279 - #47 int
INFO  23:33:15,280 - #47 c
INFO  23:33:15,280 - #36 ,
INFO  23:33:15,280 - #47 d
INFO  23:33:15,280 - #34 ;
INFO  23:33:15,280 - #42 {
INFO  23:33:15,281 - #47 nizic
INFO  23:33:15,281 - #40 [
INFO  23:33:15,281 - #46 3
INFO  23:33:15,281 - #41 ]
INFO  23:33:15,281 - #32 ++
INFO  23:33:15,281 - #34 ;
INFO  23:33:15,283 - #47 nizic
INFO  23:33:15,284 - #40 [
INFO  23:33:15,284 - #46 3
INFO  23:33:15,284 - #41 ]
INFO  23:33:15,284 - #33 --
INFO  23:33:15,284 - #34 ;
INFO  23:33:15,286 - #47 dd
INFO  23:33:15,286 - #32 ++
INFO  23:33:15,287 - #34 ;
INFO  23:33:15,287 - #47 dd
INFO  23:33:15,287 - #33 --
INFO  23:33:15,288 - #34 ;
INFO  23:33:15,288 - #47 Unpacking
INFO  23:33:15,288 - #45 ::
INFO  23:33:15,288 - #47 niz
INFO  23:33:15,288 - #40 [
INFO  23:33:15,288 - #47 dd
INFO  23:33:15,290 - #41 ]
INFO  23:33:15,291 - #32 ++
INFO  23:33:15,291 - #34 ;
INFO  23:33:15,292 - #10 read
INFO  23:33:15,292 - #38 (
INFO  23:33:15,292 - #47 pokusaj
INFO  23:33:15,292 - #39 )
INFO  23:33:15,292 - #34 ;
INFO  23:33:15,292 - #10 read
INFO  23:33:15,292 - #38 (
INFO  23:33:15,292 - #47 Unpacking
INFO  23:33:15,292 - #45 ::
INFO  23:33:15,293 - #47 a
INFO  23:33:15,293 - #39 )
INFO  23:33:15,293 - #34 ;
INFO  23:33:15,293 - #9 print
INFO  23:33:15,293 - #38 (
INFO  23:33:15,293 - #46 3
INFO  23:33:15,293 - #36 ,
INFO  23:33:15,293 - #46 2
INFO  23:33:15,293 - #39 )
INFO  23:33:15,294 - #34 ;
INFO  23:33:15,294 - #43 }
INFO  23:33:15,294 - #47 bool
INFO  23:33:15,296 - #47 testtest
INFO  23:33:15,296 - #38 (
INFO  23:33:15,296 - #47 int
INFO  23:33:15,296 - #47 param1
INFO  23:33:15,296 - #36 ,
INFO  23:33:15,297 - #47 int
INFO  23:33:15,298 - #47 param2
INFO  23:33:15,298 - #36 ,
INFO  23:33:15,298 - #47 char
INFO  23:33:15,298 - #47 param3
INFO  23:33:15,298 - #39 )
INFO  23:33:15,299 - #47 bool
INFO  23:33:15,299 - #47 c
INFO  23:33:15,299 - #36 ,
INFO  23:33:15,299 - #47 d
INFO  23:33:15,299 - #34 ;
INFO  23:33:15,299 - #42 {
INFO  23:33:15,299 - #11 return
INFO  23:33:15,300 - #47 c
INFO  23:33:15,300 - #34 ;
INFO  23:33:15,300 - #43 }
INFO  23:33:15,300 - #47 int
INFO  23:33:15,300 - #47 test
INFO  23:33:15,300 - #38 (
INFO  23:33:15,300 - #39 )
INFO  23:33:15,300 - #47 bool
INFO  23:33:15,300 - #47 c
INFO  23:33:15,300 - #34 ;
INFO  23:33:15,300 - #42 {
INFO  23:33:15,301 - #47 dd
INFO  23:33:15,301 - #31 =
INFO  23:33:15,301 - #47 Unpacking
INFO  23:33:15,301 - #45 ::
INFO  23:33:15,301 - #47 a
INFO  23:33:15,301 - #20 *
INFO  23:33:15,301 - #47 dd
INFO  23:33:15,304 - #34 ;
INFO  23:33:15,304 - #47 Unpacking
INFO  23:33:15,304 - #45 ::
INFO  23:33:15,304 - #47 a
INFO  23:33:15,304 - #31 =
INFO  23:33:15,304 - #47 Unpacking
INFO  23:33:15,304 - #45 ::
INFO  23:33:15,304 - #47 a
INFO  23:33:15,304 - #18 +
INFO  23:33:15,304 - #47 Unpacking
INFO  23:33:15,306 - #45 ::
INFO  23:33:15,306 - #47 a
INFO  23:33:15,306 - #20 *
INFO  23:33:15,307 - #47 dd
INFO  23:33:15,307 - #34 ;
INFO  23:33:15,307 - #47 Unpacking
INFO  23:33:15,307 - #45 ::
INFO  23:33:15,307 - #47 a
INFO  23:33:15,307 - #31 =
INFO  23:33:15,307 - #19 -
INFO  23:33:15,307 - #47 dd
INFO  23:33:15,307 - #34 ;
INFO  23:33:15,308 - #47 dd
INFO  23:33:15,308 - #31 =
INFO  23:33:15,308 - #46 3
INFO  23:33:15,308 - #34 ;
INFO  23:33:15,308 - #47 dd
INFO  23:33:15,308 - #31 =
INFO  23:33:15,308 - #19 -
INFO  23:33:15,308 - #46 9
INFO  23:33:15,309 - #34 ;
INFO  23:33:15,309 - #11 return
INFO  23:33:15,309 - #46 3
INFO  23:33:15,309 - #34 ;
INFO  23:33:15,309 - #7 if
INFO  23:33:15,309 - #38 (
INFO  23:33:15,309 - #47 pokusaj
INFO  23:33:15,309 - #23 ==
INFO  23:33:15,309 - #48 true
INFO  23:33:15,311 - #39 )
INFO  23:33:15,311 - #42 {
INFO  23:33:15,311 - #47 dd
INFO  23:33:15,311 - #32 ++
INFO  23:33:15,312 - #34 ;
INFO  23:33:15,312 - #43 }
INFO  23:33:15,312 - #5 else
INFO  23:33:15,312 - #42 {
INFO  23:33:15,312 - #47 c
INFO  23:33:15,312 - #31 =
INFO  23:33:15,312 - #48 true
INFO  23:33:15,312 - #34 ;
INFO  23:33:15,312 - #43 }
INFO  23:33:15,312 - #43 }
INFO  23:33:15,312 - #47 int
INFO  23:33:15,313 - #47 main
INFO  23:33:15,313 - #38 (
INFO  23:33:15,313 - #39 )
INFO  23:33:15,313 - #47 int
INFO  23:33:15,313 - #47 prvi
INFO  23:33:15,313 - #36 ,
INFO  23:33:15,313 - #47 drugi
INFO  23:33:15,313 - #34 ;
INFO  23:33:15,313 - #47 bool
INFO  23:33:15,313 - #47 treci
INFO  23:33:15,313 - #34 ;
INFO  23:33:15,313 - #42 {
INFO  23:33:15,313 - #47 treci
INFO  23:33:15,313 - #31 =
INFO  23:33:15,313 - #47 testtest
INFO  23:33:15,314 - #38 (
INFO  23:33:15,314 - #47 prvi
INFO  23:33:15,314 - #36 ,
INFO  23:33:15,314 - #47 drugi
INFO  23:33:15,314 - #36 ,
INFO  23:33:15,314 - #47 treci
INFO  23:33:15,314 - #39 )
INFO  23:33:15,314 - #34 ;
INFO  23:33:15,315 - #11 return
INFO  23:33:15,315 - #46 2
INFO  23:33:15,315 - #34 ;
INFO  23:33:15,315 - #43 }
INFO  23:33:15,315 - #43 }
INFO  23:33:15,326 - Program(
  ProgName(
   test302
  ) [ProgName]
  NamespaceList(
    NoNamespaceList(
    ) [NoNamespaceList]
    Namespace(
      NamespaceName(
       Unpacking
      ) [NamespaceName]
      NamespaceDecls(
        NamespaceDecls(
          NamespaceDecls(
            NamespaceDecls(
              NoNamespaceDecls(
              ) [NoNamespaceDecls]
              NamespaceVarDecl(
                Type(
                 int
                ) [Type]
                MultipleVarDecls(
                  SingleVarDecl(
                    VarNameDecl(
                     a
                    ) [VarNameDecl]
                  ) [SingleVarDecl]
                  VarNameDecl(
                   b
                  ) [VarNameDecl]
                ) [MultipleVarDecls]
              ) [NamespaceVarDecl]
            ) [NamespaceDecls]
            NamespaceVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 niz
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [NamespaceVarDecl]
          ) [NamespaceDecls]
          NamespaceVarDecl(
            Type(
             int
            ) [Type]
            SingleVarDecl(
              VarArrayNameDecl(
               arr
              ) [VarArrayNameDecl]
            ) [SingleVarDecl]
          ) [NamespaceVarDecl]
        ) [NamespaceDecls]
        NamespaceVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarArrayNameDecl(
             buarr
            ) [VarArrayNameDecl]
          ) [SingleVarDecl]
        ) [NamespaceVarDecl]
      ) [NamespaceDecls]
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               int
              ) [Type]
            ) [MethRetType]
           main
          ) [MethodTypeName]
          NoFormParam(
          ) [NoFormParam]
          NoMethVar(
          ) [NoMethVar]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   2
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
    ) [Namespace]
  ) [NamespaceList]
  ProgramDecls(
    ProgramDecls(
      ProgramDecls(
        ProgramDecls(
          ProgramDecls(
            NoProgramDecls(
            ) [NoProgramDecls]
            ProgramVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 nizic
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [ProgramVarDecl]
          ) [ProgramDecls]
          ProgramConstDecl(
            Type(
             bool
            ) [Type]
            SingleConstDecl(
              ConstDecl(
               ok
                BoolConst(
                 false
                ) [BoolConst]
              ) [ConstDecl]
            ) [SingleConstDecl]
          ) [ProgramConstDecl]
        ) [ProgramDecls]
        ProgramVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             pokusaj
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [ProgramVarDecl]
      ) [ProgramDecls]
      ProgramVarDecl(
        Type(
         int
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           dd
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [ProgramVarDecl]
    ) [ProgramDecls]
    ProgramVarDecl(
      Type(
       char
      ) [Type]
      SingleVarDecl(
        VarNameDecl(
         slovo
        ) [VarNameDecl]
      ) [SingleVarDecl]
    ) [ProgramVarDecl]
  ) [ProgramDecls]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecl(
          ) [NoMethodDecl]
          MethodDecl(
            MethodTypeName(
              MethRetVoid(
              ) [MethRetVoid]
             funkcija
            ) [MethodTypeName]
            NoFormParam(
            ) [NoFormParam]
            MethodVars(
              NoMethVar(
              ) [NoMethVar]
              Type(
               int
              ) [Type]
              MultipleVarDecls(
                SingleVarDecl(
                  VarNameDecl(
                   c
                  ) [VarNameDecl]
                ) [SingleVarDecl]
                VarNameDecl(
                 d
                ) [VarNameDecl]
              ) [MultipleVarDecls]
            ) [MethodVars]
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            NoStmt(
                            ) [NoStmt]
                            DesignatorStmt(
                              DesigStmtActions(
                                DesigArray(
                                 nizic
                                  PosTermExpr(
                                    FactorTerm(
                                      NumFactor(
                                       3
                                      ) [NumFactor]
                                    ) [FactorTerm]
                                  ) [PosTermExpr]
                                ) [DesigArray]
                                DesigInc(
                                ) [DesigInc]
                              ) [DesigStmtActions]
                            ) [DesignatorStmt]
                          ) [Statements]
                          DesignatorStmt(
                            DesigStmtActions(
                              DesigArray(
                               nizic
                                PosTermExpr(
                                  FactorTerm(
                                    NumFactor(
                                     3
                                    ) [NumFactor]
                                  ) [FactorTerm]
                                ) [PosTermExpr]
                              ) [DesigArray]
                              DesigDec(
                              ) [DesigDec]
                            ) [DesigStmtActions]
                          ) [DesignatorStmt]
                        ) [Statements]
                        DesignatorStmt(
                          DesigStmtActions(
                            DesigVar(
                             dd
                            ) [DesigVar]
                            DesigInc(
                            ) [DesigInc]
                          ) [DesigStmtActions]
                        ) [DesignatorStmt]
                      ) [Statements]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          DesigDec(
                          ) [DesigDec]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigArray(
                         Unpacking
                         niz
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ScopeDesigArray]
                        DesigInc(
                        ) [DesigInc]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  ReadExpr(
                    DesigVar(
                     pokusaj
                    ) [DesigVar]
                  ) [ReadExpr]
                ) [Statements]
                ReadExpr(
                  ScopeDesigVar(
                   Unpacking
                   a
                  ) [ScopeDesigVar]
                ) [ReadExpr]
              ) [Statements]
              PrintStmt(
                PosTermExpr(
                  FactorTerm(
                    NumFactor(
                     3
                    ) [NumFactor]
                  ) [FactorTerm]
                ) [PosTermExpr]
                PrintVar(
                 2
                ) [PrintVar]
              ) [PrintStmt]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               bool
              ) [Type]
            ) [MethRetType]
           testtest
          ) [MethodTypeName]
          FormParams(
            FormCommaParamDecl(
              FormCommaParamDecl(
                FormParamDecl(
                  FormParamVar(
                    Type(
                     int
                    ) [Type]
                   param1
                  ) [FormParamVar]
                ) [FormParamDecl]
                FormParamVar(
                  Type(
                   int
                  ) [Type]
                 param2
                ) [FormParamVar]
              ) [FormCommaParamDecl]
              FormParamVar(
                Type(
                 char
                ) [Type]
               param3
              ) [FormParamVar]
            ) [FormCommaParamDecl]
          ) [FormParams]
          MethodVars(
            NoMethVar(
            ) [NoMethVar]
            Type(
             bool
            ) [Type]
            MultipleVarDecls(
              SingleVarDecl(
                VarNameDecl(
                 c
                ) [VarNameDecl]
              ) [SingleVarDecl]
              VarNameDecl(
               d
              ) [VarNameDecl]
            ) [MultipleVarDecls]
          ) [MethodVars]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  VarFactor(
                    DesigVar(
                     c
                    ) [DesigVar]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        MethodTypeName(
          MethRetType(
            Type(
             int
            ) [Type]
          ) [MethRetType]
         test
        ) [MethodTypeName]
        NoFormParam(
        ) [NoFormParam]
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             c
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [MethodVars]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          AssignExpr(
                            PosTermExpr(
                              MulTerm(
                                FactorTerm(
                                  VarFactor(
                                    ScopeDesigVar(
                                     Unpacking
                                     a
                                    ) [ScopeDesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                                Mul(
                                ) [Mul]
                                VarFactor(
                                  DesigVar(
                                   dd
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [MulTerm]
                            ) [PosTermExpr]
                          ) [AssignExpr]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigVar(
                         Unpacking
                         a
                        ) [ScopeDesigVar]
                        AssignExpr(
                          AddExpr(
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                            Add(
                            ) [Add]
                            MulTerm(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                              Mul(
                              ) [Mul]
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [MulTerm]
                          ) [AddExpr]
                        ) [AssignExpr]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    DesigStmtActions(
                      ScopeDesigVar(
                       Unpacking
                       a
                      ) [ScopeDesigVar]
                      AssignExpr(
                        NegTermeExpr(
                          FactorTerm(
                            VarFactor(
                              DesigVar(
                               dd
                              ) [DesigVar]
                            ) [VarFactor]
                          ) [FactorTerm]
                        ) [NegTermeExpr]
                      ) [AssignExpr]
                    ) [DesigStmtActions]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          NumFactor(
                           3
                          ) [NumFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                DesigStmtActions(
                  DesigVar(
                   dd
                  ) [DesigVar]
                  AssignExpr(
                    NegTermeExpr(
                      FactorTerm(
                        NumFactor(
                         9
                        ) [NumFactor]
                      ) [FactorTerm]
                    ) [NegTermeExpr]
                  ) [AssignExpr]
                ) [DesigStmtActions]
              ) [DesignatorStmt]
            ) [Statements]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   3
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
          IfElseStmt(
            ConditionCondTerm(
              CondTermFact(
                RelOpCondFact(
                  PosTermExpr(
                    FactorTerm(
                      VarFactor(
                        DesigVar(
                         pokusaj
                        ) [DesigVar]
                      ) [VarFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                  EqlOp(
                  ) [EqlOp]
                  PosTermExpr(
                    FactorTerm(
                      BoolFactor(
                       true
                      ) [BoolFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                ) [RelOpCondFact]
              ) [CondTermFact]
            ) [ConditionCondTerm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    DesigInc(
                    ) [DesigInc]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     c
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          BoolFactor(
                           true
                          ) [BoolFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
          ) [IfElseStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        MethRetType(
          Type(
           int
          ) [Type]
        ) [MethRetType]
       main
      ) [MethodTypeName]
      NoFormParam(
      ) [NoFormParam]
      MethodVars(
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           int
          ) [Type]
          MultipleVarDecls(
            SingleVarDecl(
              VarNameDecl(
               prvi
              ) [VarNameDecl]
            ) [SingleVarDecl]
            VarNameDecl(
             drugi
            ) [VarNameDecl]
          ) [MultipleVarDecls]
        ) [MethodVars]
        Type(
         bool
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           treci
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [MethodVars]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          DesignatorStmt(
            DesigStmtActions(
              DesigVar(
               treci
              ) [DesigVar]
              AssignExpr(
                PosTermExpr(
                  FactorTerm(
                    FactorFuncCall(
                      DesigVar(
                       testtest
                      ) [DesigVar]
                      ActPars(
                        ActualParamsList(
                          ActualParamsList(
                            ActualParam(
                              PosTermExpr(
                                FactorTerm(
                                  VarFactor(
                                    DesigVar(
                                     prvi
                                    ) [DesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                              ) [PosTermExpr]
                            ) [ActualParam]
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  DesigVar(
                                   drugi
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                          ) [ActualParamsList]
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 treci
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ActualParamsList]
                      ) [ActPars]
                    ) [FactorFuncCall]
                  ) [FactorTerm]
                ) [PosTermExpr]
              ) [AssignExpr]
            ) [DesigStmtActions]
          ) [DesignatorStmt]
        ) [Statements]
        ReturnExpr(
          PosTermExpr(
            FactorTerm(
              NumFactor(
               2
              ) [NumFactor]
            ) [FactorTerm]
          ) [PosTermExpr]
        ) [ReturnExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:33:15,334 - Deklarisana promenljiva Unpacking::a na liniji 6
INFO  23:33:15,336 - Deklarisana promenljiva Unpacking::b na liniji 6
INFO  23:33:15,336 - Deklarisana promenljiva Unpacking::niz na liniji 7
INFO  23:33:15,337 - Deklarisana promenljiva Unpacking::arr na liniji 8
INFO  23:33:15,337 - Deklarisana promenljiva Unpacking::buarr na liniji 9
INFO  23:33:15,337 - Obradjuje se funkcija main na liniji 11
INFO  23:33:15,337 - Deklarisana promenljiva nizic na liniji 16
INFO  23:33:15,338 - Deklarisana konstanta ok na liniji 17
INFO  23:33:15,338 - Deklarisana promenljiva pokusaj na liniji 18
INFO  23:33:15,338 - Deklarisana promenljiva dd na liniji 19
INFO  23:33:15,338 - Deklarisana promenljiva slovo na liniji 20
INFO  23:33:15,339 - Obradjuje se funkcija funkcija na liniji 23
INFO  23:33:15,339 - Deklarisana promenljiva c na liniji 23
INFO  23:33:15,339 - Deklarisana promenljiva d na liniji 23
INFO  23:33:15,339 - Pretraga na 25(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 25
INFO  23:33:15,343 - Pretraga na 26(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 26
INFO  23:33:15,344 - Pretraga na 29(Unpacking::niz), nadjeno Var Unpacking::niz: Arr of int, 2, 0  na liniji 29
INFO  23:33:15,347 - Obradjuje se funkcija testtest na liniji 38
INFO  23:33:15,347 - Deklarisan parametar param1 metode: testtest. na liniji 38
INFO  23:33:15,349 - Deklarisan parametar param2 metode: testtest. na liniji 38
INFO  23:33:15,351 - Deklarisan parametar param3 metode: testtest. na liniji 38
INFO  23:33:15,361 - Deklarisana promenljiva c na liniji 38
INFO  23:33:15,362 - Deklarisana promenljiva d na liniji 38
INFO  23:33:15,362 - Obradjuje se funkcija test na liniji 42
INFO  23:33:15,363 - Deklarisana promenljiva c na liniji 42
INFO  23:33:15,367 - Obradjuje se funkcija main na liniji 61
INFO  23:33:15,370 - Deklarisana promenljiva prvi na liniji 62
INFO  23:33:15,371 - Deklarisana promenljiva drugi na liniji 62
INFO  23:33:15,371 - Deklarisana promenljiva treci na liniji 63
ERROR 23:33:15,372 - Greska na liniji 65stvarni parametar ne odgovara formalnom parametru metode po tipu!
INFO  23:33:15,373 -  Print count calls = 0
INFO  23:33:15,373 -  Deklarisanih promenljivih ima = 0
INFO  23:33:15,375 - Neuspesna semanticka analiza!!
INFO  23:33:52,779 - Compiling source file: C:\Users\Zoki\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:33:52,860 - #2 program
INFO  23:33:52,863 - #47 test302
INFO  23:33:52,865 - #17 namespace
INFO  23:33:52,867 - #47 Unpacking
INFO  23:33:52,867 - #42 {
INFO  23:33:52,868 - #47 int
INFO  23:33:52,870 - #47 a
INFO  23:33:52,872 - #36 ,
INFO  23:33:52,872 - #47 b
INFO  23:33:52,873 - #34 ;
INFO  23:33:52,873 - #47 int
INFO  23:33:52,874 - #47 niz
INFO  23:33:52,874 - #40 [
INFO  23:33:52,874 - #41 ]
INFO  23:33:52,875 - #34 ;
INFO  23:33:52,875 - #47 int
INFO  23:33:52,876 - #47 arr
INFO  23:33:52,876 - #40 [
INFO  23:33:52,876 - #41 ]
INFO  23:33:52,877 - #34 ;
INFO  23:33:52,877 - #47 bool
INFO  23:33:52,877 - #47 buarr
INFO  23:33:52,878 - #40 [
INFO  23:33:52,878 - #41 ]
INFO  23:33:52,878 - #34 ;
INFO  23:33:52,878 - #42 {
INFO  23:33:52,878 - #47 int
INFO  23:33:52,880 - #47 main
INFO  23:33:52,880 - #38 (
INFO  23:33:52,882 - #39 )
INFO  23:33:52,883 - #42 {
INFO  23:33:52,884 - #11 return
INFO  23:33:52,886 - #46 2
INFO  23:33:52,887 - #34 ;
INFO  23:33:52,888 - #43 }
INFO  23:33:52,888 - #43 }
INFO  23:33:52,890 - #43 }
INFO  23:33:52,890 - #47 int
INFO  23:33:52,892 - #47 nizic
INFO  23:33:52,892 - #40 [
INFO  23:33:52,893 - #41 ]
INFO  23:33:52,893 - #34 ;
INFO  23:33:52,893 - #6 const
INFO  23:33:52,894 - #47 bool
INFO  23:33:52,894 - #47 ok
INFO  23:33:52,894 - #31 =
INFO  23:33:52,894 - #48 false
INFO  23:33:52,894 - #34 ;
INFO  23:33:52,896 - #47 bool
INFO  23:33:52,897 - #47 pokusaj
INFO  23:33:52,897 - #34 ;
INFO  23:33:52,897 - #47 int
INFO  23:33:52,897 - #47 dd
INFO  23:33:52,897 - #34 ;
INFO  23:33:52,897 - #47 char
INFO  23:33:52,898 - #47 slovo
INFO  23:33:52,898 - #34 ;
INFO  23:33:52,898 - #42 {
INFO  23:33:52,898 - #12 void
INFO  23:33:52,898 - #47 funkcija
INFO  23:33:52,899 - #38 (
INFO  23:33:52,900 - #39 )
INFO  23:33:52,900 - #47 int
INFO  23:33:52,900 - #47 c
INFO  23:33:52,901 - #36 ,
INFO  23:33:52,901 - #47 d
INFO  23:33:52,901 - #34 ;
INFO  23:33:52,901 - #42 {
INFO  23:33:52,901 - #47 nizic
INFO  23:33:52,902 - #40 [
INFO  23:33:52,902 - #46 3
INFO  23:33:52,902 - #41 ]
INFO  23:33:52,902 - #32 ++
INFO  23:33:52,903 - #34 ;
INFO  23:33:52,906 - #47 nizic
INFO  23:33:52,906 - #40 [
INFO  23:33:52,907 - #46 3
INFO  23:33:52,907 - #41 ]
INFO  23:33:52,907 - #33 --
INFO  23:33:52,907 - #34 ;
INFO  23:33:52,909 - #47 dd
INFO  23:33:52,909 - #32 ++
INFO  23:33:52,909 - #34 ;
INFO  23:33:52,910 - #47 dd
INFO  23:33:52,910 - #33 --
INFO  23:33:52,911 - #34 ;
INFO  23:33:52,911 - #47 Unpacking
INFO  23:33:52,911 - #45 ::
INFO  23:33:52,911 - #47 niz
INFO  23:33:52,912 - #40 [
INFO  23:33:52,912 - #47 dd
INFO  23:33:52,914 - #41 ]
INFO  23:33:52,915 - #32 ++
INFO  23:33:52,915 - #34 ;
INFO  23:33:52,915 - #10 read
INFO  23:33:52,916 - #38 (
INFO  23:33:52,917 - #47 pokusaj
INFO  23:33:52,917 - #39 )
INFO  23:33:52,917 - #34 ;
INFO  23:33:52,917 - #10 read
INFO  23:33:52,918 - #38 (
INFO  23:33:52,919 - #47 Unpacking
INFO  23:33:52,919 - #45 ::
INFO  23:33:52,919 - #47 a
INFO  23:33:52,920 - #39 )
INFO  23:33:52,921 - #34 ;
INFO  23:33:52,921 - #9 print
INFO  23:33:52,922 - #38 (
INFO  23:33:52,922 - #46 3
INFO  23:33:52,923 - #36 ,
INFO  23:33:52,923 - #46 2
INFO  23:33:52,923 - #39 )
INFO  23:33:52,923 - #34 ;
INFO  23:33:52,924 - #43 }
INFO  23:33:52,924 - #47 bool
INFO  23:33:52,925 - #47 testtest
INFO  23:33:52,926 - #38 (
INFO  23:33:52,926 - #47 int
INFO  23:33:52,926 - #47 param1
INFO  23:33:52,926 - #36 ,
INFO  23:33:52,927 - #47 int
INFO  23:33:52,927 - #47 param2
INFO  23:33:52,928 - #36 ,
INFO  23:33:52,928 - #47 char
INFO  23:33:52,928 - #47 param3
INFO  23:33:52,928 - #39 )
INFO  23:33:52,929 - #47 bool
INFO  23:33:52,929 - #47 c
INFO  23:33:52,929 - #36 ,
INFO  23:33:52,929 - #47 d
INFO  23:33:52,930 - #34 ;
INFO  23:33:52,930 - #42 {
INFO  23:33:52,930 - #11 return
INFO  23:33:52,930 - #47 c
INFO  23:33:52,930 - #34 ;
INFO  23:33:52,930 - #43 }
INFO  23:33:52,930 - #47 int
INFO  23:33:52,930 - #47 test
INFO  23:33:52,931 - #38 (
INFO  23:33:52,931 - #39 )
INFO  23:33:52,931 - #47 bool
INFO  23:33:52,931 - #47 c
INFO  23:33:52,931 - #34 ;
INFO  23:33:52,931 - #42 {
INFO  23:33:52,931 - #47 dd
INFO  23:33:52,931 - #31 =
INFO  23:33:52,932 - #47 Unpacking
INFO  23:33:52,932 - #45 ::
INFO  23:33:52,932 - #47 a
INFO  23:33:52,932 - #20 *
INFO  23:33:52,932 - #47 dd
INFO  23:33:52,934 - #34 ;
INFO  23:33:52,934 - #47 Unpacking
INFO  23:33:52,934 - #45 ::
INFO  23:33:52,935 - #47 a
INFO  23:33:52,935 - #31 =
INFO  23:33:52,935 - #47 Unpacking
INFO  23:33:52,935 - #45 ::
INFO  23:33:52,935 - #47 a
INFO  23:33:52,935 - #18 +
INFO  23:33:52,935 - #47 Unpacking
INFO  23:33:52,937 - #45 ::
INFO  23:33:52,938 - #47 a
INFO  23:33:52,938 - #20 *
INFO  23:33:52,938 - #47 dd
INFO  23:33:52,938 - #34 ;
INFO  23:33:52,938 - #47 Unpacking
INFO  23:33:52,938 - #45 ::
INFO  23:33:52,939 - #47 a
INFO  23:33:52,939 - #31 =
INFO  23:33:52,939 - #19 -
INFO  23:33:52,939 - #47 dd
INFO  23:33:52,939 - #34 ;
INFO  23:33:52,939 - #47 dd
INFO  23:33:52,939 - #31 =
INFO  23:33:52,940 - #46 3
INFO  23:33:52,940 - #34 ;
INFO  23:33:52,941 - #47 dd
INFO  23:33:52,941 - #31 =
INFO  23:33:52,941 - #19 -
INFO  23:33:52,941 - #46 9
INFO  23:33:52,941 - #34 ;
INFO  23:33:52,941 - #11 return
INFO  23:33:52,941 - #46 3
INFO  23:33:52,941 - #34 ;
INFO  23:33:52,941 - #7 if
INFO  23:33:52,942 - #38 (
INFO  23:33:52,942 - #47 pokusaj
INFO  23:33:52,942 - #23 ==
INFO  23:33:52,942 - #48 true
INFO  23:33:52,944 - #39 )
INFO  23:33:52,945 - #42 {
INFO  23:33:52,945 - #47 dd
INFO  23:33:52,945 - #32 ++
INFO  23:33:52,945 - #34 ;
INFO  23:33:52,946 - #43 }
INFO  23:33:52,946 - #5 else
INFO  23:33:52,946 - #42 {
INFO  23:33:52,946 - #47 c
INFO  23:33:52,946 - #31 =
INFO  23:33:52,946 - #48 true
INFO  23:33:52,946 - #34 ;
INFO  23:33:52,947 - #43 }
INFO  23:33:52,947 - #43 }
INFO  23:33:52,947 - #47 int
INFO  23:33:52,948 - #47 main
INFO  23:33:52,948 - #38 (
INFO  23:33:52,948 - #39 )
INFO  23:33:52,948 - #47 int
INFO  23:33:52,948 - #47 prvi
INFO  23:33:52,949 - #36 ,
INFO  23:33:52,949 - #47 drugi
INFO  23:33:52,949 - #34 ;
INFO  23:33:52,949 - #47 bool
INFO  23:33:52,949 - #47 treci
INFO  23:33:52,949 - #34 ;
INFO  23:33:52,949 - #42 {
INFO  23:33:52,950 - #47 testtest
INFO  23:33:52,950 - #38 (
INFO  23:33:52,950 - #47 prvi
INFO  23:33:52,950 - #36 ,
INFO  23:33:52,951 - #47 drugi
INFO  23:33:52,951 - #36 ,
INFO  23:33:52,951 - #47 treci
INFO  23:33:52,951 - #39 )
INFO  23:33:52,952 - #34 ;
INFO  23:33:52,952 - #11 return
INFO  23:33:52,953 - #46 2
INFO  23:33:52,953 - #34 ;
INFO  23:33:52,953 - #43 }
INFO  23:33:52,954 - #43 }
INFO  23:33:52,964 - Program(
  ProgName(
   test302
  ) [ProgName]
  NamespaceList(
    NoNamespaceList(
    ) [NoNamespaceList]
    Namespace(
      NamespaceName(
       Unpacking
      ) [NamespaceName]
      NamespaceDecls(
        NamespaceDecls(
          NamespaceDecls(
            NamespaceDecls(
              NoNamespaceDecls(
              ) [NoNamespaceDecls]
              NamespaceVarDecl(
                Type(
                 int
                ) [Type]
                MultipleVarDecls(
                  SingleVarDecl(
                    VarNameDecl(
                     a
                    ) [VarNameDecl]
                  ) [SingleVarDecl]
                  VarNameDecl(
                   b
                  ) [VarNameDecl]
                ) [MultipleVarDecls]
              ) [NamespaceVarDecl]
            ) [NamespaceDecls]
            NamespaceVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 niz
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [NamespaceVarDecl]
          ) [NamespaceDecls]
          NamespaceVarDecl(
            Type(
             int
            ) [Type]
            SingleVarDecl(
              VarArrayNameDecl(
               arr
              ) [VarArrayNameDecl]
            ) [SingleVarDecl]
          ) [NamespaceVarDecl]
        ) [NamespaceDecls]
        NamespaceVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarArrayNameDecl(
             buarr
            ) [VarArrayNameDecl]
          ) [SingleVarDecl]
        ) [NamespaceVarDecl]
      ) [NamespaceDecls]
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               int
              ) [Type]
            ) [MethRetType]
           main
          ) [MethodTypeName]
          NoFormParam(
          ) [NoFormParam]
          NoMethVar(
          ) [NoMethVar]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   2
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
    ) [Namespace]
  ) [NamespaceList]
  ProgramDecls(
    ProgramDecls(
      ProgramDecls(
        ProgramDecls(
          ProgramDecls(
            NoProgramDecls(
            ) [NoProgramDecls]
            ProgramVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 nizic
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [ProgramVarDecl]
          ) [ProgramDecls]
          ProgramConstDecl(
            Type(
             bool
            ) [Type]
            SingleConstDecl(
              ConstDecl(
               ok
                BoolConst(
                 false
                ) [BoolConst]
              ) [ConstDecl]
            ) [SingleConstDecl]
          ) [ProgramConstDecl]
        ) [ProgramDecls]
        ProgramVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             pokusaj
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [ProgramVarDecl]
      ) [ProgramDecls]
      ProgramVarDecl(
        Type(
         int
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           dd
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [ProgramVarDecl]
    ) [ProgramDecls]
    ProgramVarDecl(
      Type(
       char
      ) [Type]
      SingleVarDecl(
        VarNameDecl(
         slovo
        ) [VarNameDecl]
      ) [SingleVarDecl]
    ) [ProgramVarDecl]
  ) [ProgramDecls]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecl(
          ) [NoMethodDecl]
          MethodDecl(
            MethodTypeName(
              MethRetVoid(
              ) [MethRetVoid]
             funkcija
            ) [MethodTypeName]
            NoFormParam(
            ) [NoFormParam]
            MethodVars(
              NoMethVar(
              ) [NoMethVar]
              Type(
               int
              ) [Type]
              MultipleVarDecls(
                SingleVarDecl(
                  VarNameDecl(
                   c
                  ) [VarNameDecl]
                ) [SingleVarDecl]
                VarNameDecl(
                 d
                ) [VarNameDecl]
              ) [MultipleVarDecls]
            ) [MethodVars]
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            NoStmt(
                            ) [NoStmt]
                            DesignatorStmt(
                              DesigStmtActions(
                                DesigArray(
                                 nizic
                                  PosTermExpr(
                                    FactorTerm(
                                      NumFactor(
                                       3
                                      ) [NumFactor]
                                    ) [FactorTerm]
                                  ) [PosTermExpr]
                                ) [DesigArray]
                                DesigInc(
                                ) [DesigInc]
                              ) [DesigStmtActions]
                            ) [DesignatorStmt]
                          ) [Statements]
                          DesignatorStmt(
                            DesigStmtActions(
                              DesigArray(
                               nizic
                                PosTermExpr(
                                  FactorTerm(
                                    NumFactor(
                                     3
                                    ) [NumFactor]
                                  ) [FactorTerm]
                                ) [PosTermExpr]
                              ) [DesigArray]
                              DesigDec(
                              ) [DesigDec]
                            ) [DesigStmtActions]
                          ) [DesignatorStmt]
                        ) [Statements]
                        DesignatorStmt(
                          DesigStmtActions(
                            DesigVar(
                             dd
                            ) [DesigVar]
                            DesigInc(
                            ) [DesigInc]
                          ) [DesigStmtActions]
                        ) [DesignatorStmt]
                      ) [Statements]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          DesigDec(
                          ) [DesigDec]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigArray(
                         Unpacking
                         niz
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ScopeDesigArray]
                        DesigInc(
                        ) [DesigInc]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  ReadExpr(
                    DesigVar(
                     pokusaj
                    ) [DesigVar]
                  ) [ReadExpr]
                ) [Statements]
                ReadExpr(
                  ScopeDesigVar(
                   Unpacking
                   a
                  ) [ScopeDesigVar]
                ) [ReadExpr]
              ) [Statements]
              PrintStmt(
                PosTermExpr(
                  FactorTerm(
                    NumFactor(
                     3
                    ) [NumFactor]
                  ) [FactorTerm]
                ) [PosTermExpr]
                PrintVar(
                 2
                ) [PrintVar]
              ) [PrintStmt]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               bool
              ) [Type]
            ) [MethRetType]
           testtest
          ) [MethodTypeName]
          FormParams(
            FormCommaParamDecl(
              FormCommaParamDecl(
                FormParamDecl(
                  FormParamVar(
                    Type(
                     int
                    ) [Type]
                   param1
                  ) [FormParamVar]
                ) [FormParamDecl]
                FormParamVar(
                  Type(
                   int
                  ) [Type]
                 param2
                ) [FormParamVar]
              ) [FormCommaParamDecl]
              FormParamVar(
                Type(
                 char
                ) [Type]
               param3
              ) [FormParamVar]
            ) [FormCommaParamDecl]
          ) [FormParams]
          MethodVars(
            NoMethVar(
            ) [NoMethVar]
            Type(
             bool
            ) [Type]
            MultipleVarDecls(
              SingleVarDecl(
                VarNameDecl(
                 c
                ) [VarNameDecl]
              ) [SingleVarDecl]
              VarNameDecl(
               d
              ) [VarNameDecl]
            ) [MultipleVarDecls]
          ) [MethodVars]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  VarFactor(
                    DesigVar(
                     c
                    ) [DesigVar]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        MethodTypeName(
          MethRetType(
            Type(
             int
            ) [Type]
          ) [MethRetType]
         test
        ) [MethodTypeName]
        NoFormParam(
        ) [NoFormParam]
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             c
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [MethodVars]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          AssignExpr(
                            PosTermExpr(
                              MulTerm(
                                FactorTerm(
                                  VarFactor(
                                    ScopeDesigVar(
                                     Unpacking
                                     a
                                    ) [ScopeDesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                                Mul(
                                ) [Mul]
                                VarFactor(
                                  DesigVar(
                                   dd
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [MulTerm]
                            ) [PosTermExpr]
                          ) [AssignExpr]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigVar(
                         Unpacking
                         a
                        ) [ScopeDesigVar]
                        AssignExpr(
                          AddExpr(
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                            Add(
                            ) [Add]
                            MulTerm(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                              Mul(
                              ) [Mul]
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [MulTerm]
                          ) [AddExpr]
                        ) [AssignExpr]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    DesigStmtActions(
                      ScopeDesigVar(
                       Unpacking
                       a
                      ) [ScopeDesigVar]
                      AssignExpr(
                        NegTermeExpr(
                          FactorTerm(
                            VarFactor(
                              DesigVar(
                               dd
                              ) [DesigVar]
                            ) [VarFactor]
                          ) [FactorTerm]
                        ) [NegTermeExpr]
                      ) [AssignExpr]
                    ) [DesigStmtActions]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          NumFactor(
                           3
                          ) [NumFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                DesigStmtActions(
                  DesigVar(
                   dd
                  ) [DesigVar]
                  AssignExpr(
                    NegTermeExpr(
                      FactorTerm(
                        NumFactor(
                         9
                        ) [NumFactor]
                      ) [FactorTerm]
                    ) [NegTermeExpr]
                  ) [AssignExpr]
                ) [DesigStmtActions]
              ) [DesignatorStmt]
            ) [Statements]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   3
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
          IfElseStmt(
            ConditionCondTerm(
              CondTermFact(
                RelOpCondFact(
                  PosTermExpr(
                    FactorTerm(
                      VarFactor(
                        DesigVar(
                         pokusaj
                        ) [DesigVar]
                      ) [VarFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                  EqlOp(
                  ) [EqlOp]
                  PosTermExpr(
                    FactorTerm(
                      BoolFactor(
                       true
                      ) [BoolFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                ) [RelOpCondFact]
              ) [CondTermFact]
            ) [ConditionCondTerm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    DesigInc(
                    ) [DesigInc]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     c
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          BoolFactor(
                           true
                          ) [BoolFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
          ) [IfElseStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        MethRetType(
          Type(
           int
          ) [Type]
        ) [MethRetType]
       main
      ) [MethodTypeName]
      NoFormParam(
      ) [NoFormParam]
      MethodVars(
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           int
          ) [Type]
          MultipleVarDecls(
            SingleVarDecl(
              VarNameDecl(
               prvi
              ) [VarNameDecl]
            ) [SingleVarDecl]
            VarNameDecl(
             drugi
            ) [VarNameDecl]
          ) [MultipleVarDecls]
        ) [MethodVars]
        Type(
         bool
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           treci
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [MethodVars]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          DesignatorStmt(
            DesigStmtActions(
              DesigVar(
               testtest
              ) [DesigVar]
              DesigFuncCall(
                ActPars(
                  ActualParamsList(
                    ActualParamsList(
                      ActualParam(
                        PosTermExpr(
                          FactorTerm(
                            VarFactor(
                              DesigVar(
                               prvi
                              ) [DesigVar]
                            ) [VarFactor]
                          ) [FactorTerm]
                        ) [PosTermExpr]
                      ) [ActualParam]
                      PosTermExpr(
                        FactorTerm(
                          VarFactor(
                            DesigVar(
                             drugi
                            ) [DesigVar]
                          ) [VarFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [ActualParamsList]
                    PosTermExpr(
                      FactorTerm(
                        VarFactor(
                          DesigVar(
                           treci
                          ) [DesigVar]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [PosTermExpr]
                  ) [ActualParamsList]
                ) [ActPars]
              ) [DesigFuncCall]
            ) [DesigStmtActions]
          ) [DesignatorStmt]
        ) [Statements]
        ReturnExpr(
          PosTermExpr(
            FactorTerm(
              NumFactor(
               2
              ) [NumFactor]
            ) [FactorTerm]
          ) [PosTermExpr]
        ) [ReturnExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:33:52,974 - Deklarisana promenljiva Unpacking::a na liniji 6
INFO  23:33:52,976 - Deklarisana promenljiva Unpacking::b na liniji 6
INFO  23:33:52,976 - Deklarisana promenljiva Unpacking::niz na liniji 7
INFO  23:33:52,977 - Deklarisana promenljiva Unpacking::arr na liniji 8
INFO  23:33:52,977 - Deklarisana promenljiva Unpacking::buarr na liniji 9
INFO  23:33:52,977 - Obradjuje se funkcija main na liniji 11
INFO  23:33:52,979 - Deklarisana promenljiva nizic na liniji 16
INFO  23:33:52,979 - Deklarisana konstanta ok na liniji 17
INFO  23:33:52,979 - Deklarisana promenljiva pokusaj na liniji 18
INFO  23:33:52,980 - Deklarisana promenljiva dd na liniji 19
INFO  23:33:52,980 - Deklarisana promenljiva slovo na liniji 20
INFO  23:33:52,980 - Obradjuje se funkcija funkcija na liniji 23
INFO  23:33:52,980 - Deklarisana promenljiva c na liniji 23
INFO  23:33:52,981 - Deklarisana promenljiva d na liniji 23
INFO  23:33:52,981 - Pretraga na 25(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 25
INFO  23:33:52,983 - Pretraga na 26(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 26
INFO  23:33:52,984 - Pretraga na 29(Unpacking::niz), nadjeno Var Unpacking::niz: Arr of int, 2, 0  na liniji 29
INFO  23:33:52,986 - Obradjuje se funkcija testtest na liniji 38
INFO  23:33:52,990 - Deklarisan parametar param1 metode: testtest. na liniji 38
INFO  23:33:52,991 - Deklarisan parametar param2 metode: testtest. na liniji 38
INFO  23:33:52,991 - Deklarisan parametar param3 metode: testtest. na liniji 38
INFO  23:33:52,992 - Deklarisana promenljiva c na liniji 38
INFO  23:33:52,992 - Deklarisana promenljiva d na liniji 38
INFO  23:33:52,994 - Obradjuje se funkcija test na liniji 42
INFO  23:33:52,994 - Deklarisana promenljiva c na liniji 42
INFO  23:33:52,999 - Obradjuje se funkcija main na liniji 61
INFO  23:33:53,001 - Deklarisana promenljiva prvi na liniji 62
INFO  23:33:53,004 - Deklarisana promenljiva drugi na liniji 62
INFO  23:33:53,004 - Deklarisana promenljiva treci na liniji 63
ERROR 23:33:53,005 - Greska na liniji 65stvarni parametar ne odgovara formalnom parametru metode po tipu!
ERROR 23:33:53,006 - Greska na liniji 65broj stvarnih parametara je manji od broja formalnih parametara!
ERROR 23:33:53,006 - Greska na liniji 67: izraz koji se vraca ne odgovara povratnom tipu metode testtest!
INFO  23:33:53,007 -  Print count calls = 0
INFO  23:33:53,007 -  Deklarisanih promenljivih ima = 0
INFO  23:33:53,009 - Neuspesna semanticka analiza!!
INFO  23:34:11,710 - Compiling source file: C:\Users\Zoki\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:34:11,790 - #2 program
INFO  23:34:11,790 - #47 test302
INFO  23:34:11,790 - #17 namespace
INFO  23:34:11,793 - #47 Unpacking
INFO  23:34:11,793 - #42 {
INFO  23:34:11,795 - #47 int
INFO  23:34:11,796 - #47 a
INFO  23:34:11,797 - #36 ,
INFO  23:34:11,798 - #47 b
INFO  23:34:11,798 - #34 ;
INFO  23:34:11,798 - #47 int
INFO  23:34:11,799 - #47 niz
INFO  23:34:11,799 - #40 [
INFO  23:34:11,799 - #41 ]
INFO  23:34:11,799 - #34 ;
INFO  23:34:11,800 - #47 int
INFO  23:34:11,800 - #47 arr
INFO  23:34:11,800 - #40 [
INFO  23:34:11,800 - #41 ]
INFO  23:34:11,800 - #34 ;
INFO  23:34:11,801 - #47 bool
INFO  23:34:11,801 - #47 buarr
INFO  23:34:11,801 - #40 [
INFO  23:34:11,801 - #41 ]
INFO  23:34:11,802 - #34 ;
INFO  23:34:11,802 - #42 {
INFO  23:34:11,802 - #47 int
INFO  23:34:11,804 - #47 main
INFO  23:34:11,804 - #38 (
INFO  23:34:11,806 - #39 )
INFO  23:34:11,807 - #42 {
INFO  23:34:11,808 - #11 return
INFO  23:34:11,809 - #46 2
INFO  23:34:11,809 - #34 ;
INFO  23:34:11,810 - #43 }
INFO  23:34:11,810 - #43 }
INFO  23:34:11,812 - #43 }
INFO  23:34:11,812 - #47 int
INFO  23:34:11,815 - #47 nizic
INFO  23:34:11,815 - #40 [
INFO  23:34:11,815 - #41 ]
INFO  23:34:11,815 - #34 ;
INFO  23:34:11,815 - #6 const
INFO  23:34:11,816 - #47 bool
INFO  23:34:11,816 - #47 ok
INFO  23:34:11,816 - #31 =
INFO  23:34:11,817 - #48 false
INFO  23:34:11,817 - #34 ;
INFO  23:34:11,819 - #47 bool
INFO  23:34:11,819 - #47 pokusaj
INFO  23:34:11,821 - #34 ;
INFO  23:34:11,821 - #47 int
INFO  23:34:11,821 - #47 dd
INFO  23:34:11,822 - #34 ;
INFO  23:34:11,822 - #47 char
INFO  23:34:11,822 - #47 slovo
INFO  23:34:11,822 - #34 ;
INFO  23:34:11,823 - #42 {
INFO  23:34:11,823 - #12 void
INFO  23:34:11,823 - #47 funkcija
INFO  23:34:11,824 - #38 (
INFO  23:34:11,825 - #39 )
INFO  23:34:11,825 - #47 int
INFO  23:34:11,825 - #47 c
INFO  23:34:11,826 - #36 ,
INFO  23:34:11,826 - #47 d
INFO  23:34:11,826 - #34 ;
INFO  23:34:11,826 - #42 {
INFO  23:34:11,827 - #47 nizic
INFO  23:34:11,827 - #40 [
INFO  23:34:11,827 - #46 3
INFO  23:34:11,827 - #41 ]
INFO  23:34:11,827 - #32 ++
INFO  23:34:11,828 - #34 ;
INFO  23:34:11,829 - #47 nizic
INFO  23:34:11,829 - #40 [
INFO  23:34:11,829 - #46 3
INFO  23:34:11,829 - #41 ]
INFO  23:34:11,829 - #33 --
INFO  23:34:11,829 - #34 ;
INFO  23:34:11,830 - #47 dd
INFO  23:34:11,831 - #32 ++
INFO  23:34:11,831 - #34 ;
INFO  23:34:11,831 - #47 dd
INFO  23:34:11,831 - #33 --
INFO  23:34:11,832 - #34 ;
INFO  23:34:11,832 - #47 Unpacking
INFO  23:34:11,832 - #45 ::
INFO  23:34:11,832 - #47 niz
INFO  23:34:11,832 - #40 [
INFO  23:34:11,832 - #47 dd
INFO  23:34:11,834 - #41 ]
INFO  23:34:11,834 - #32 ++
INFO  23:34:11,835 - #34 ;
INFO  23:34:11,835 - #10 read
INFO  23:34:11,835 - #38 (
INFO  23:34:11,835 - #47 pokusaj
INFO  23:34:11,836 - #39 )
INFO  23:34:11,836 - #34 ;
INFO  23:34:11,836 - #10 read
INFO  23:34:11,836 - #38 (
INFO  23:34:11,837 - #47 Unpacking
INFO  23:34:11,837 - #45 ::
INFO  23:34:11,838 - #47 a
INFO  23:34:11,838 - #39 )
INFO  23:34:11,838 - #34 ;
INFO  23:34:11,838 - #9 print
INFO  23:34:11,838 - #38 (
INFO  23:34:11,839 - #46 3
INFO  23:34:11,839 - #36 ,
INFO  23:34:11,839 - #46 2
INFO  23:34:11,839 - #39 )
INFO  23:34:11,839 - #34 ;
INFO  23:34:11,840 - #43 }
INFO  23:34:11,840 - #47 bool
INFO  23:34:11,840 - #47 testtest
INFO  23:34:11,841 - #38 (
INFO  23:34:11,841 - #47 int
INFO  23:34:11,841 - #47 param1
INFO  23:34:11,841 - #36 ,
INFO  23:34:11,842 - #47 int
INFO  23:34:11,842 - #47 param2
INFO  23:34:11,843 - #36 ,
INFO  23:34:11,843 - #47 char
INFO  23:34:11,843 - #47 param3
INFO  23:34:11,844 - #39 )
INFO  23:34:11,844 - #47 bool
INFO  23:34:11,844 - #47 c
INFO  23:34:11,844 - #36 ,
INFO  23:34:11,844 - #47 d
INFO  23:34:11,845 - #34 ;
INFO  23:34:11,845 - #42 {
INFO  23:34:11,845 - #11 return
INFO  23:34:11,845 - #47 c
INFO  23:34:11,845 - #34 ;
INFO  23:34:11,845 - #43 }
INFO  23:34:11,846 - #47 int
INFO  23:34:11,846 - #47 test
INFO  23:34:11,846 - #38 (
INFO  23:34:11,846 - #39 )
INFO  23:34:11,847 - #47 bool
INFO  23:34:11,847 - #47 c
INFO  23:34:11,847 - #34 ;
INFO  23:34:11,847 - #42 {
INFO  23:34:11,847 - #47 dd
INFO  23:34:11,847 - #31 =
INFO  23:34:11,847 - #47 Unpacking
INFO  23:34:11,847 - #45 ::
INFO  23:34:11,847 - #47 a
INFO  23:34:11,848 - #20 *
INFO  23:34:11,848 - #47 dd
INFO  23:34:11,849 - #34 ;
INFO  23:34:11,850 - #47 Unpacking
INFO  23:34:11,850 - #45 ::
INFO  23:34:11,850 - #47 a
INFO  23:34:11,850 - #31 =
INFO  23:34:11,850 - #47 Unpacking
INFO  23:34:11,850 - #45 ::
INFO  23:34:11,850 - #47 a
INFO  23:34:11,851 - #18 +
INFO  23:34:11,851 - #47 Unpacking
INFO  23:34:11,853 - #45 ::
INFO  23:34:11,853 - #47 a
INFO  23:34:11,854 - #20 *
INFO  23:34:11,854 - #47 dd
INFO  23:34:11,854 - #34 ;
INFO  23:34:11,855 - #47 Unpacking
INFO  23:34:11,855 - #45 ::
INFO  23:34:11,855 - #47 a
INFO  23:34:11,855 - #31 =
INFO  23:34:11,855 - #19 -
INFO  23:34:11,856 - #47 dd
INFO  23:34:11,856 - #34 ;
INFO  23:34:11,856 - #47 dd
INFO  23:34:11,856 - #31 =
INFO  23:34:11,857 - #46 3
INFO  23:34:11,857 - #34 ;
INFO  23:34:11,857 - #47 dd
INFO  23:34:11,857 - #31 =
INFO  23:34:11,857 - #19 -
INFO  23:34:11,857 - #46 9
INFO  23:34:11,858 - #34 ;
INFO  23:34:11,858 - #11 return
INFO  23:34:11,858 - #46 3
INFO  23:34:11,858 - #34 ;
INFO  23:34:11,858 - #7 if
INFO  23:34:11,858 - #38 (
INFO  23:34:11,858 - #47 pokusaj
INFO  23:34:11,859 - #23 ==
INFO  23:34:11,859 - #48 true
INFO  23:34:11,861 - #39 )
INFO  23:34:11,862 - #42 {
INFO  23:34:11,862 - #47 dd
INFO  23:34:11,862 - #32 ++
INFO  23:34:11,862 - #34 ;
INFO  23:34:11,862 - #43 }
INFO  23:34:11,862 - #5 else
INFO  23:34:11,863 - #42 {
INFO  23:34:11,863 - #47 c
INFO  23:34:11,863 - #31 =
INFO  23:34:11,863 - #48 true
INFO  23:34:11,863 - #34 ;
INFO  23:34:11,863 - #43 }
INFO  23:34:11,863 - #43 }
INFO  23:34:11,864 - #47 int
INFO  23:34:11,864 - #47 main
INFO  23:34:11,864 - #38 (
INFO  23:34:11,864 - #39 )
INFO  23:34:11,864 - #47 int
INFO  23:34:11,864 - #47 prvi
INFO  23:34:11,864 - #36 ,
INFO  23:34:11,865 - #47 drugi
INFO  23:34:11,865 - #34 ;
INFO  23:34:11,865 - #47 bool
INFO  23:34:11,865 - #47 treci
INFO  23:34:11,865 - #34 ;
INFO  23:34:11,865 - #42 {
INFO  23:34:11,865 - #47 treci
INFO  23:34:11,866 - #31 =
INFO  23:34:11,866 - #47 testtest
INFO  23:34:11,866 - #38 (
INFO  23:34:11,866 - #47 prvi
INFO  23:34:11,866 - #36 ,
INFO  23:34:11,866 - #47 drugi
INFO  23:34:11,867 - #36 ,
INFO  23:34:11,867 - #47 treci
INFO  23:34:11,867 - #39 )
INFO  23:34:11,868 - #34 ;
INFO  23:34:11,868 - #11 return
INFO  23:34:11,868 - #46 2
INFO  23:34:11,868 - #34 ;
INFO  23:34:11,868 - #43 }
INFO  23:34:11,868 - #43 }
INFO  23:34:11,879 - Program(
  ProgName(
   test302
  ) [ProgName]
  NamespaceList(
    NoNamespaceList(
    ) [NoNamespaceList]
    Namespace(
      NamespaceName(
       Unpacking
      ) [NamespaceName]
      NamespaceDecls(
        NamespaceDecls(
          NamespaceDecls(
            NamespaceDecls(
              NoNamespaceDecls(
              ) [NoNamespaceDecls]
              NamespaceVarDecl(
                Type(
                 int
                ) [Type]
                MultipleVarDecls(
                  SingleVarDecl(
                    VarNameDecl(
                     a
                    ) [VarNameDecl]
                  ) [SingleVarDecl]
                  VarNameDecl(
                   b
                  ) [VarNameDecl]
                ) [MultipleVarDecls]
              ) [NamespaceVarDecl]
            ) [NamespaceDecls]
            NamespaceVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 niz
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [NamespaceVarDecl]
          ) [NamespaceDecls]
          NamespaceVarDecl(
            Type(
             int
            ) [Type]
            SingleVarDecl(
              VarArrayNameDecl(
               arr
              ) [VarArrayNameDecl]
            ) [SingleVarDecl]
          ) [NamespaceVarDecl]
        ) [NamespaceDecls]
        NamespaceVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarArrayNameDecl(
             buarr
            ) [VarArrayNameDecl]
          ) [SingleVarDecl]
        ) [NamespaceVarDecl]
      ) [NamespaceDecls]
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               int
              ) [Type]
            ) [MethRetType]
           main
          ) [MethodTypeName]
          NoFormParam(
          ) [NoFormParam]
          NoMethVar(
          ) [NoMethVar]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   2
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
    ) [Namespace]
  ) [NamespaceList]
  ProgramDecls(
    ProgramDecls(
      ProgramDecls(
        ProgramDecls(
          ProgramDecls(
            NoProgramDecls(
            ) [NoProgramDecls]
            ProgramVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 nizic
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [ProgramVarDecl]
          ) [ProgramDecls]
          ProgramConstDecl(
            Type(
             bool
            ) [Type]
            SingleConstDecl(
              ConstDecl(
               ok
                BoolConst(
                 false
                ) [BoolConst]
              ) [ConstDecl]
            ) [SingleConstDecl]
          ) [ProgramConstDecl]
        ) [ProgramDecls]
        ProgramVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             pokusaj
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [ProgramVarDecl]
      ) [ProgramDecls]
      ProgramVarDecl(
        Type(
         int
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           dd
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [ProgramVarDecl]
    ) [ProgramDecls]
    ProgramVarDecl(
      Type(
       char
      ) [Type]
      SingleVarDecl(
        VarNameDecl(
         slovo
        ) [VarNameDecl]
      ) [SingleVarDecl]
    ) [ProgramVarDecl]
  ) [ProgramDecls]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecl(
          ) [NoMethodDecl]
          MethodDecl(
            MethodTypeName(
              MethRetVoid(
              ) [MethRetVoid]
             funkcija
            ) [MethodTypeName]
            NoFormParam(
            ) [NoFormParam]
            MethodVars(
              NoMethVar(
              ) [NoMethVar]
              Type(
               int
              ) [Type]
              MultipleVarDecls(
                SingleVarDecl(
                  VarNameDecl(
                   c
                  ) [VarNameDecl]
                ) [SingleVarDecl]
                VarNameDecl(
                 d
                ) [VarNameDecl]
              ) [MultipleVarDecls]
            ) [MethodVars]
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            NoStmt(
                            ) [NoStmt]
                            DesignatorStmt(
                              DesigStmtActions(
                                DesigArray(
                                 nizic
                                  PosTermExpr(
                                    FactorTerm(
                                      NumFactor(
                                       3
                                      ) [NumFactor]
                                    ) [FactorTerm]
                                  ) [PosTermExpr]
                                ) [DesigArray]
                                DesigInc(
                                ) [DesigInc]
                              ) [DesigStmtActions]
                            ) [DesignatorStmt]
                          ) [Statements]
                          DesignatorStmt(
                            DesigStmtActions(
                              DesigArray(
                               nizic
                                PosTermExpr(
                                  FactorTerm(
                                    NumFactor(
                                     3
                                    ) [NumFactor]
                                  ) [FactorTerm]
                                ) [PosTermExpr]
                              ) [DesigArray]
                              DesigDec(
                              ) [DesigDec]
                            ) [DesigStmtActions]
                          ) [DesignatorStmt]
                        ) [Statements]
                        DesignatorStmt(
                          DesigStmtActions(
                            DesigVar(
                             dd
                            ) [DesigVar]
                            DesigInc(
                            ) [DesigInc]
                          ) [DesigStmtActions]
                        ) [DesignatorStmt]
                      ) [Statements]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          DesigDec(
                          ) [DesigDec]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigArray(
                         Unpacking
                         niz
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ScopeDesigArray]
                        DesigInc(
                        ) [DesigInc]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  ReadExpr(
                    DesigVar(
                     pokusaj
                    ) [DesigVar]
                  ) [ReadExpr]
                ) [Statements]
                ReadExpr(
                  ScopeDesigVar(
                   Unpacking
                   a
                  ) [ScopeDesigVar]
                ) [ReadExpr]
              ) [Statements]
              PrintStmt(
                PosTermExpr(
                  FactorTerm(
                    NumFactor(
                     3
                    ) [NumFactor]
                  ) [FactorTerm]
                ) [PosTermExpr]
                PrintVar(
                 2
                ) [PrintVar]
              ) [PrintStmt]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               bool
              ) [Type]
            ) [MethRetType]
           testtest
          ) [MethodTypeName]
          FormParams(
            FormCommaParamDecl(
              FormCommaParamDecl(
                FormParamDecl(
                  FormParamVar(
                    Type(
                     int
                    ) [Type]
                   param1
                  ) [FormParamVar]
                ) [FormParamDecl]
                FormParamVar(
                  Type(
                   int
                  ) [Type]
                 param2
                ) [FormParamVar]
              ) [FormCommaParamDecl]
              FormParamVar(
                Type(
                 char
                ) [Type]
               param3
              ) [FormParamVar]
            ) [FormCommaParamDecl]
          ) [FormParams]
          MethodVars(
            NoMethVar(
            ) [NoMethVar]
            Type(
             bool
            ) [Type]
            MultipleVarDecls(
              SingleVarDecl(
                VarNameDecl(
                 c
                ) [VarNameDecl]
              ) [SingleVarDecl]
              VarNameDecl(
               d
              ) [VarNameDecl]
            ) [MultipleVarDecls]
          ) [MethodVars]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  VarFactor(
                    DesigVar(
                     c
                    ) [DesigVar]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        MethodTypeName(
          MethRetType(
            Type(
             int
            ) [Type]
          ) [MethRetType]
         test
        ) [MethodTypeName]
        NoFormParam(
        ) [NoFormParam]
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             c
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [MethodVars]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          AssignExpr(
                            PosTermExpr(
                              MulTerm(
                                FactorTerm(
                                  VarFactor(
                                    ScopeDesigVar(
                                     Unpacking
                                     a
                                    ) [ScopeDesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                                Mul(
                                ) [Mul]
                                VarFactor(
                                  DesigVar(
                                   dd
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [MulTerm]
                            ) [PosTermExpr]
                          ) [AssignExpr]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigVar(
                         Unpacking
                         a
                        ) [ScopeDesigVar]
                        AssignExpr(
                          AddExpr(
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                            Add(
                            ) [Add]
                            MulTerm(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                              Mul(
                              ) [Mul]
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [MulTerm]
                          ) [AddExpr]
                        ) [AssignExpr]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    DesigStmtActions(
                      ScopeDesigVar(
                       Unpacking
                       a
                      ) [ScopeDesigVar]
                      AssignExpr(
                        NegTermeExpr(
                          FactorTerm(
                            VarFactor(
                              DesigVar(
                               dd
                              ) [DesigVar]
                            ) [VarFactor]
                          ) [FactorTerm]
                        ) [NegTermeExpr]
                      ) [AssignExpr]
                    ) [DesigStmtActions]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          NumFactor(
                           3
                          ) [NumFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                DesigStmtActions(
                  DesigVar(
                   dd
                  ) [DesigVar]
                  AssignExpr(
                    NegTermeExpr(
                      FactorTerm(
                        NumFactor(
                         9
                        ) [NumFactor]
                      ) [FactorTerm]
                    ) [NegTermeExpr]
                  ) [AssignExpr]
                ) [DesigStmtActions]
              ) [DesignatorStmt]
            ) [Statements]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   3
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
          IfElseStmt(
            ConditionCondTerm(
              CondTermFact(
                RelOpCondFact(
                  PosTermExpr(
                    FactorTerm(
                      VarFactor(
                        DesigVar(
                         pokusaj
                        ) [DesigVar]
                      ) [VarFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                  EqlOp(
                  ) [EqlOp]
                  PosTermExpr(
                    FactorTerm(
                      BoolFactor(
                       true
                      ) [BoolFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                ) [RelOpCondFact]
              ) [CondTermFact]
            ) [ConditionCondTerm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    DesigInc(
                    ) [DesigInc]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     c
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          BoolFactor(
                           true
                          ) [BoolFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
          ) [IfElseStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        MethRetType(
          Type(
           int
          ) [Type]
        ) [MethRetType]
       main
      ) [MethodTypeName]
      NoFormParam(
      ) [NoFormParam]
      MethodVars(
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           int
          ) [Type]
          MultipleVarDecls(
            SingleVarDecl(
              VarNameDecl(
               prvi
              ) [VarNameDecl]
            ) [SingleVarDecl]
            VarNameDecl(
             drugi
            ) [VarNameDecl]
          ) [MultipleVarDecls]
        ) [MethodVars]
        Type(
         bool
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           treci
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [MethodVars]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          DesignatorStmt(
            DesigStmtActions(
              DesigVar(
               treci
              ) [DesigVar]
              AssignExpr(
                PosTermExpr(
                  FactorTerm(
                    FactorFuncCall(
                      DesigVar(
                       testtest
                      ) [DesigVar]
                      ActPars(
                        ActualParamsList(
                          ActualParamsList(
                            ActualParam(
                              PosTermExpr(
                                FactorTerm(
                                  VarFactor(
                                    DesigVar(
                                     prvi
                                    ) [DesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                              ) [PosTermExpr]
                            ) [ActualParam]
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  DesigVar(
                                   drugi
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                          ) [ActualParamsList]
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 treci
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ActualParamsList]
                      ) [ActPars]
                    ) [FactorFuncCall]
                  ) [FactorTerm]
                ) [PosTermExpr]
              ) [AssignExpr]
            ) [DesigStmtActions]
          ) [DesignatorStmt]
        ) [Statements]
        ReturnExpr(
          PosTermExpr(
            FactorTerm(
              NumFactor(
               2
              ) [NumFactor]
            ) [FactorTerm]
          ) [PosTermExpr]
        ) [ReturnExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:34:11,889 - Deklarisana promenljiva Unpacking::a na liniji 6
INFO  23:34:11,890 - Deklarisana promenljiva Unpacking::b na liniji 6
INFO  23:34:11,891 - Deklarisana promenljiva Unpacking::niz na liniji 7
INFO  23:34:11,891 - Deklarisana promenljiva Unpacking::arr na liniji 8
INFO  23:34:11,891 - Deklarisana promenljiva Unpacking::buarr na liniji 9
INFO  23:34:11,891 - Obradjuje se funkcija main na liniji 11
INFO  23:34:11,892 - Deklarisana promenljiva nizic na liniji 16
INFO  23:34:11,892 - Deklarisana konstanta ok na liniji 17
INFO  23:34:11,893 - Deklarisana promenljiva pokusaj na liniji 18
INFO  23:34:11,893 - Deklarisana promenljiva dd na liniji 19
INFO  23:34:11,893 - Deklarisana promenljiva slovo na liniji 20
INFO  23:34:11,894 - Obradjuje se funkcija funkcija na liniji 23
INFO  23:34:11,894 - Deklarisana promenljiva c na liniji 23
INFO  23:34:11,894 - Deklarisana promenljiva d na liniji 23
INFO  23:34:11,895 - Pretraga na 25(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 25
INFO  23:34:11,898 - Pretraga na 26(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 26
INFO  23:34:11,902 - Pretraga na 29(Unpacking::niz), nadjeno Var Unpacking::niz: Arr of int, 2, 0  na liniji 29
INFO  23:34:11,905 - Obradjuje se funkcija testtest na liniji 38
INFO  23:34:11,905 - Deklarisan parametar param1 metode: testtest. na liniji 38
INFO  23:34:11,906 - Deklarisan parametar param2 metode: testtest. na liniji 38
INFO  23:34:11,906 - Deklarisan parametar param3 metode: testtest. na liniji 38
INFO  23:34:11,909 - Deklarisana promenljiva c na liniji 38
INFO  23:34:11,910 - Deklarisana promenljiva d na liniji 38
INFO  23:34:11,911 - Obradjuje se funkcija test na liniji 42
INFO  23:34:11,911 - Deklarisana promenljiva c na liniji 42
INFO  23:34:11,914 - Obradjuje se funkcija main na liniji 61
INFO  23:34:11,914 - Deklarisana promenljiva prvi na liniji 62
INFO  23:34:11,914 - Deklarisana promenljiva drugi na liniji 62
INFO  23:34:11,914 - Deklarisana promenljiva treci na liniji 63
ERROR 23:34:11,915 - Greska na liniji 65stvarni parametar ne odgovara formalnom parametru metode po tipu!
INFO  23:34:11,915 -  Print count calls = 0
INFO  23:34:11,915 -  Deklarisanih promenljivih ima = 0
INFO  23:34:11,917 - Neuspesna semanticka analiza!!
INFO  23:36:30,808 - Compiling source file: C:\Users\Zoki\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:36:30,894 - #2 program
INFO  23:36:30,897 - #47 test302
INFO  23:36:30,897 - #17 namespace
INFO  23:36:30,900 - #47 Unpacking
INFO  23:36:30,900 - #42 {
INFO  23:36:30,901 - #47 int
INFO  23:36:30,903 - #47 a
INFO  23:36:30,904 - #36 ,
INFO  23:36:30,905 - #47 b
INFO  23:36:30,905 - #34 ;
INFO  23:36:30,908 - #47 int
INFO  23:36:30,909 - #47 niz
INFO  23:36:30,909 - #40 [
INFO  23:36:30,910 - #41 ]
INFO  23:36:30,910 - #34 ;
INFO  23:36:30,911 - #47 int
INFO  23:36:30,912 - #47 arr
INFO  23:36:30,912 - #40 [
INFO  23:36:30,912 - #41 ]
INFO  23:36:30,913 - #34 ;
INFO  23:36:30,913 - #47 bool
INFO  23:36:30,914 - #47 buarr
INFO  23:36:30,916 - #40 [
INFO  23:36:30,917 - #41 ]
INFO  23:36:30,919 - #34 ;
INFO  23:36:30,920 - #42 {
INFO  23:36:30,920 - #47 int
INFO  23:36:30,922 - #47 main
INFO  23:36:30,922 - #38 (
INFO  23:36:30,927 - #39 )
INFO  23:36:30,928 - #42 {
INFO  23:36:30,929 - #11 return
INFO  23:36:30,930 - #46 2
INFO  23:36:30,930 - #34 ;
INFO  23:36:30,931 - #43 }
INFO  23:36:30,932 - #43 }
INFO  23:36:30,933 - #43 }
INFO  23:36:30,934 - #47 int
INFO  23:36:30,936 - #47 nizic
INFO  23:36:30,936 - #40 [
INFO  23:36:30,937 - #41 ]
INFO  23:36:30,937 - #34 ;
INFO  23:36:30,937 - #6 const
INFO  23:36:30,939 - #47 bool
INFO  23:36:30,939 - #47 ok
INFO  23:36:30,939 - #31 =
INFO  23:36:30,939 - #48 false
INFO  23:36:30,939 - #34 ;
INFO  23:36:30,942 - #47 bool
INFO  23:36:30,943 - #47 pokusaj
INFO  23:36:30,943 - #34 ;
INFO  23:36:30,943 - #47 int
INFO  23:36:30,943 - #47 dd
INFO  23:36:30,944 - #34 ;
INFO  23:36:30,944 - #47 char
INFO  23:36:30,944 - #47 slovo
INFO  23:36:30,944 - #34 ;
INFO  23:36:30,945 - #42 {
INFO  23:36:30,945 - #12 void
INFO  23:36:30,945 - #47 funkcija
INFO  23:36:30,947 - #38 (
INFO  23:36:30,947 - #39 )
INFO  23:36:30,947 - #47 int
INFO  23:36:30,947 - #47 c
INFO  23:36:30,947 - #36 ,
INFO  23:36:30,947 - #47 d
INFO  23:36:30,948 - #34 ;
INFO  23:36:30,948 - #42 {
INFO  23:36:30,948 - #47 nizic
INFO  23:36:30,948 - #40 [
INFO  23:36:30,948 - #46 3
INFO  23:36:30,948 - #41 ]
INFO  23:36:30,949 - #32 ++
INFO  23:36:30,949 - #34 ;
INFO  23:36:30,950 - #47 nizic
INFO  23:36:30,951 - #40 [
INFO  23:36:30,951 - #46 3
INFO  23:36:30,951 - #41 ]
INFO  23:36:30,951 - #33 --
INFO  23:36:30,951 - #34 ;
INFO  23:36:30,953 - #47 dd
INFO  23:36:30,953 - #32 ++
INFO  23:36:30,953 - #34 ;
INFO  23:36:30,953 - #47 dd
INFO  23:36:30,954 - #33 --
INFO  23:36:30,954 - #34 ;
INFO  23:36:30,954 - #47 Unpacking
INFO  23:36:30,954 - #45 ::
INFO  23:36:30,954 - #47 niz
INFO  23:36:30,954 - #40 [
INFO  23:36:30,955 - #47 dd
INFO  23:36:30,956 - #41 ]
INFO  23:36:30,957 - #32 ++
INFO  23:36:30,958 - #34 ;
INFO  23:36:30,959 - #10 read
INFO  23:36:30,959 - #38 (
INFO  23:36:30,959 - #47 pokusaj
INFO  23:36:30,959 - #39 )
INFO  23:36:30,960 - #34 ;
INFO  23:36:30,960 - #10 read
INFO  23:36:30,960 - #38 (
INFO  23:36:30,961 - #47 Unpacking
INFO  23:36:30,961 - #45 ::
INFO  23:36:30,961 - #47 a
INFO  23:36:30,961 - #39 )
INFO  23:36:30,961 - #34 ;
INFO  23:36:30,961 - #9 print
INFO  23:36:30,962 - #38 (
INFO  23:36:30,962 - #46 3
INFO  23:36:30,962 - #36 ,
INFO  23:36:30,962 - #46 2
INFO  23:36:30,962 - #39 )
INFO  23:36:30,963 - #34 ;
INFO  23:36:30,963 - #43 }
INFO  23:36:30,964 - #47 bool
INFO  23:36:30,964 - #47 testtest
INFO  23:36:30,964 - #38 (
INFO  23:36:30,965 - #47 int
INFO  23:36:30,965 - #47 param1
INFO  23:36:30,966 - #36 ,
INFO  23:36:30,967 - #47 int
INFO  23:36:30,967 - #47 param2
INFO  23:36:30,968 - #36 ,
INFO  23:36:30,968 - #47 char
INFO  23:36:30,969 - #47 param3
INFO  23:36:30,969 - #39 )
INFO  23:36:30,970 - #47 bool
INFO  23:36:30,970 - #47 c
INFO  23:36:30,970 - #36 ,
INFO  23:36:30,971 - #47 d
INFO  23:36:30,971 - #34 ;
INFO  23:36:30,972 - #42 {
INFO  23:36:30,972 - #11 return
INFO  23:36:30,972 - #47 c
INFO  23:36:30,973 - #34 ;
INFO  23:36:30,973 - #43 }
INFO  23:36:30,973 - #47 int
INFO  23:36:30,973 - #47 test
INFO  23:36:30,974 - #38 (
INFO  23:36:30,974 - #39 )
INFO  23:36:30,974 - #47 bool
INFO  23:36:30,974 - #47 c
INFO  23:36:30,975 - #34 ;
INFO  23:36:30,975 - #42 {
INFO  23:36:30,975 - #47 dd
INFO  23:36:30,975 - #31 =
INFO  23:36:30,975 - #47 Unpacking
INFO  23:36:30,976 - #45 ::
INFO  23:36:30,976 - #47 a
INFO  23:36:30,976 - #20 *
INFO  23:36:30,976 - #47 dd
INFO  23:36:30,978 - #34 ;
INFO  23:36:30,978 - #47 Unpacking
INFO  23:36:30,978 - #45 ::
INFO  23:36:30,978 - #47 a
INFO  23:36:30,978 - #31 =
INFO  23:36:30,978 - #47 Unpacking
INFO  23:36:30,979 - #45 ::
INFO  23:36:30,979 - #47 a
INFO  23:36:30,979 - #18 +
INFO  23:36:30,979 - #47 Unpacking
INFO  23:36:30,981 - #45 ::
INFO  23:36:30,981 - #47 a
INFO  23:36:30,981 - #20 *
INFO  23:36:30,981 - #47 dd
INFO  23:36:30,981 - #34 ;
INFO  23:36:30,981 - #47 Unpacking
INFO  23:36:30,981 - #45 ::
INFO  23:36:30,982 - #47 a
INFO  23:36:30,982 - #31 =
INFO  23:36:30,982 - #19 -
INFO  23:36:30,982 - #47 dd
INFO  23:36:30,982 - #34 ;
INFO  23:36:30,982 - #47 dd
INFO  23:36:30,982 - #31 =
INFO  23:36:30,982 - #46 3
INFO  23:36:30,983 - #34 ;
INFO  23:36:30,983 - #47 dd
INFO  23:36:30,983 - #31 =
INFO  23:36:30,984 - #19 -
INFO  23:36:30,984 - #46 9
INFO  23:36:30,984 - #34 ;
INFO  23:36:30,984 - #11 return
INFO  23:36:30,985 - #46 3
INFO  23:36:30,985 - #34 ;
INFO  23:36:30,985 - #7 if
INFO  23:36:30,986 - #38 (
INFO  23:36:30,986 - #47 pokusaj
INFO  23:36:30,986 - #23 ==
INFO  23:36:30,986 - #48 true
INFO  23:36:30,988 - #39 )
INFO  23:36:30,989 - #42 {
INFO  23:36:30,989 - #47 dd
INFO  23:36:30,989 - #32 ++
INFO  23:36:30,989 - #34 ;
INFO  23:36:30,990 - #43 }
INFO  23:36:30,990 - #5 else
INFO  23:36:30,990 - #42 {
INFO  23:36:30,990 - #47 c
INFO  23:36:30,991 - #31 =
INFO  23:36:30,991 - #48 true
INFO  23:36:30,991 - #34 ;
INFO  23:36:30,991 - #43 }
INFO  23:36:30,992 - #43 }
INFO  23:36:30,992 - #47 int
INFO  23:36:30,993 - #47 main
INFO  23:36:30,993 - #38 (
INFO  23:36:30,993 - #39 )
INFO  23:36:30,993 - #47 int
INFO  23:36:30,994 - #47 prvi
INFO  23:36:30,994 - #36 ,
INFO  23:36:30,994 - #47 drugi
INFO  23:36:30,994 - #34 ;
INFO  23:36:30,994 - #47 bool
INFO  23:36:30,994 - #47 treci
INFO  23:36:30,995 - #34 ;
INFO  23:36:30,995 - #42 {
INFO  23:36:30,995 - #47 drugi
INFO  23:36:30,995 - #31 =
INFO  23:36:30,995 - #47 testtest
INFO  23:36:30,995 - #38 (
INFO  23:36:30,995 - #47 prvi
INFO  23:36:30,995 - #36 ,
INFO  23:36:30,995 - #47 drugi
INFO  23:36:30,996 - #36 ,
INFO  23:36:30,996 - #47 treci
INFO  23:36:30,996 - #39 )
INFO  23:36:30,996 - #34 ;
INFO  23:36:30,996 - #11 return
INFO  23:36:30,997 - #46 2
INFO  23:36:30,997 - #34 ;
INFO  23:36:30,997 - #43 }
INFO  23:36:30,997 - #43 }
INFO  23:36:31,011 - Program(
  ProgName(
   test302
  ) [ProgName]
  NamespaceList(
    NoNamespaceList(
    ) [NoNamespaceList]
    Namespace(
      NamespaceName(
       Unpacking
      ) [NamespaceName]
      NamespaceDecls(
        NamespaceDecls(
          NamespaceDecls(
            NamespaceDecls(
              NoNamespaceDecls(
              ) [NoNamespaceDecls]
              NamespaceVarDecl(
                Type(
                 int
                ) [Type]
                MultipleVarDecls(
                  SingleVarDecl(
                    VarNameDecl(
                     a
                    ) [VarNameDecl]
                  ) [SingleVarDecl]
                  VarNameDecl(
                   b
                  ) [VarNameDecl]
                ) [MultipleVarDecls]
              ) [NamespaceVarDecl]
            ) [NamespaceDecls]
            NamespaceVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 niz
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [NamespaceVarDecl]
          ) [NamespaceDecls]
          NamespaceVarDecl(
            Type(
             int
            ) [Type]
            SingleVarDecl(
              VarArrayNameDecl(
               arr
              ) [VarArrayNameDecl]
            ) [SingleVarDecl]
          ) [NamespaceVarDecl]
        ) [NamespaceDecls]
        NamespaceVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarArrayNameDecl(
             buarr
            ) [VarArrayNameDecl]
          ) [SingleVarDecl]
        ) [NamespaceVarDecl]
      ) [NamespaceDecls]
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               int
              ) [Type]
            ) [MethRetType]
           main
          ) [MethodTypeName]
          NoFormParam(
          ) [NoFormParam]
          NoMethVar(
          ) [NoMethVar]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   2
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
    ) [Namespace]
  ) [NamespaceList]
  ProgramDecls(
    ProgramDecls(
      ProgramDecls(
        ProgramDecls(
          ProgramDecls(
            NoProgramDecls(
            ) [NoProgramDecls]
            ProgramVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 nizic
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [ProgramVarDecl]
          ) [ProgramDecls]
          ProgramConstDecl(
            Type(
             bool
            ) [Type]
            SingleConstDecl(
              ConstDecl(
               ok
                BoolConst(
                 false
                ) [BoolConst]
              ) [ConstDecl]
            ) [SingleConstDecl]
          ) [ProgramConstDecl]
        ) [ProgramDecls]
        ProgramVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             pokusaj
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [ProgramVarDecl]
      ) [ProgramDecls]
      ProgramVarDecl(
        Type(
         int
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           dd
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [ProgramVarDecl]
    ) [ProgramDecls]
    ProgramVarDecl(
      Type(
       char
      ) [Type]
      SingleVarDecl(
        VarNameDecl(
         slovo
        ) [VarNameDecl]
      ) [SingleVarDecl]
    ) [ProgramVarDecl]
  ) [ProgramDecls]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecl(
          ) [NoMethodDecl]
          MethodDecl(
            MethodTypeName(
              MethRetVoid(
              ) [MethRetVoid]
             funkcija
            ) [MethodTypeName]
            NoFormParam(
            ) [NoFormParam]
            MethodVars(
              NoMethVar(
              ) [NoMethVar]
              Type(
               int
              ) [Type]
              MultipleVarDecls(
                SingleVarDecl(
                  VarNameDecl(
                   c
                  ) [VarNameDecl]
                ) [SingleVarDecl]
                VarNameDecl(
                 d
                ) [VarNameDecl]
              ) [MultipleVarDecls]
            ) [MethodVars]
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            NoStmt(
                            ) [NoStmt]
                            DesignatorStmt(
                              DesigStmtActions(
                                DesigArray(
                                 nizic
                                  PosTermExpr(
                                    FactorTerm(
                                      NumFactor(
                                       3
                                      ) [NumFactor]
                                    ) [FactorTerm]
                                  ) [PosTermExpr]
                                ) [DesigArray]
                                DesigInc(
                                ) [DesigInc]
                              ) [DesigStmtActions]
                            ) [DesignatorStmt]
                          ) [Statements]
                          DesignatorStmt(
                            DesigStmtActions(
                              DesigArray(
                               nizic
                                PosTermExpr(
                                  FactorTerm(
                                    NumFactor(
                                     3
                                    ) [NumFactor]
                                  ) [FactorTerm]
                                ) [PosTermExpr]
                              ) [DesigArray]
                              DesigDec(
                              ) [DesigDec]
                            ) [DesigStmtActions]
                          ) [DesignatorStmt]
                        ) [Statements]
                        DesignatorStmt(
                          DesigStmtActions(
                            DesigVar(
                             dd
                            ) [DesigVar]
                            DesigInc(
                            ) [DesigInc]
                          ) [DesigStmtActions]
                        ) [DesignatorStmt]
                      ) [Statements]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          DesigDec(
                          ) [DesigDec]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigArray(
                         Unpacking
                         niz
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ScopeDesigArray]
                        DesigInc(
                        ) [DesigInc]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  ReadExpr(
                    DesigVar(
                     pokusaj
                    ) [DesigVar]
                  ) [ReadExpr]
                ) [Statements]
                ReadExpr(
                  ScopeDesigVar(
                   Unpacking
                   a
                  ) [ScopeDesigVar]
                ) [ReadExpr]
              ) [Statements]
              PrintStmt(
                PosTermExpr(
                  FactorTerm(
                    NumFactor(
                     3
                    ) [NumFactor]
                  ) [FactorTerm]
                ) [PosTermExpr]
                PrintVar(
                 2
                ) [PrintVar]
              ) [PrintStmt]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               bool
              ) [Type]
            ) [MethRetType]
           testtest
          ) [MethodTypeName]
          FormParams(
            FormCommaParamDecl(
              FormCommaParamDecl(
                FormParamDecl(
                  FormParamVar(
                    Type(
                     int
                    ) [Type]
                   param1
                  ) [FormParamVar]
                ) [FormParamDecl]
                FormParamVar(
                  Type(
                   int
                  ) [Type]
                 param2
                ) [FormParamVar]
              ) [FormCommaParamDecl]
              FormParamVar(
                Type(
                 char
                ) [Type]
               param3
              ) [FormParamVar]
            ) [FormCommaParamDecl]
          ) [FormParams]
          MethodVars(
            NoMethVar(
            ) [NoMethVar]
            Type(
             bool
            ) [Type]
            MultipleVarDecls(
              SingleVarDecl(
                VarNameDecl(
                 c
                ) [VarNameDecl]
              ) [SingleVarDecl]
              VarNameDecl(
               d
              ) [VarNameDecl]
            ) [MultipleVarDecls]
          ) [MethodVars]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  VarFactor(
                    DesigVar(
                     c
                    ) [DesigVar]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        MethodTypeName(
          MethRetType(
            Type(
             int
            ) [Type]
          ) [MethRetType]
         test
        ) [MethodTypeName]
        NoFormParam(
        ) [NoFormParam]
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             c
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [MethodVars]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          AssignExpr(
                            PosTermExpr(
                              MulTerm(
                                FactorTerm(
                                  VarFactor(
                                    ScopeDesigVar(
                                     Unpacking
                                     a
                                    ) [ScopeDesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                                Mul(
                                ) [Mul]
                                VarFactor(
                                  DesigVar(
                                   dd
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [MulTerm]
                            ) [PosTermExpr]
                          ) [AssignExpr]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigVar(
                         Unpacking
                         a
                        ) [ScopeDesigVar]
                        AssignExpr(
                          AddExpr(
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                            Add(
                            ) [Add]
                            MulTerm(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                              Mul(
                              ) [Mul]
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [MulTerm]
                          ) [AddExpr]
                        ) [AssignExpr]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    DesigStmtActions(
                      ScopeDesigVar(
                       Unpacking
                       a
                      ) [ScopeDesigVar]
                      AssignExpr(
                        NegTermeExpr(
                          FactorTerm(
                            VarFactor(
                              DesigVar(
                               dd
                              ) [DesigVar]
                            ) [VarFactor]
                          ) [FactorTerm]
                        ) [NegTermeExpr]
                      ) [AssignExpr]
                    ) [DesigStmtActions]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          NumFactor(
                           3
                          ) [NumFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                DesigStmtActions(
                  DesigVar(
                   dd
                  ) [DesigVar]
                  AssignExpr(
                    NegTermeExpr(
                      FactorTerm(
                        NumFactor(
                         9
                        ) [NumFactor]
                      ) [FactorTerm]
                    ) [NegTermeExpr]
                  ) [AssignExpr]
                ) [DesigStmtActions]
              ) [DesignatorStmt]
            ) [Statements]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   3
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
          IfElseStmt(
            ConditionCondTerm(
              CondTermFact(
                RelOpCondFact(
                  PosTermExpr(
                    FactorTerm(
                      VarFactor(
                        DesigVar(
                         pokusaj
                        ) [DesigVar]
                      ) [VarFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                  EqlOp(
                  ) [EqlOp]
                  PosTermExpr(
                    FactorTerm(
                      BoolFactor(
                       true
                      ) [BoolFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                ) [RelOpCondFact]
              ) [CondTermFact]
            ) [ConditionCondTerm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    DesigInc(
                    ) [DesigInc]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     c
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          BoolFactor(
                           true
                          ) [BoolFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
          ) [IfElseStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        MethRetType(
          Type(
           int
          ) [Type]
        ) [MethRetType]
       main
      ) [MethodTypeName]
      NoFormParam(
      ) [NoFormParam]
      MethodVars(
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           int
          ) [Type]
          MultipleVarDecls(
            SingleVarDecl(
              VarNameDecl(
               prvi
              ) [VarNameDecl]
            ) [SingleVarDecl]
            VarNameDecl(
             drugi
            ) [VarNameDecl]
          ) [MultipleVarDecls]
        ) [MethodVars]
        Type(
         bool
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           treci
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [MethodVars]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          DesignatorStmt(
            DesigStmtActions(
              DesigVar(
               drugi
              ) [DesigVar]
              AssignExpr(
                PosTermExpr(
                  FactorTerm(
                    FactorFuncCall(
                      DesigVar(
                       testtest
                      ) [DesigVar]
                      ActPars(
                        ActualParamsList(
                          ActualParamsList(
                            ActualParam(
                              PosTermExpr(
                                FactorTerm(
                                  VarFactor(
                                    DesigVar(
                                     prvi
                                    ) [DesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                              ) [PosTermExpr]
                            ) [ActualParam]
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  DesigVar(
                                   drugi
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                          ) [ActualParamsList]
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 treci
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ActualParamsList]
                      ) [ActPars]
                    ) [FactorFuncCall]
                  ) [FactorTerm]
                ) [PosTermExpr]
              ) [AssignExpr]
            ) [DesigStmtActions]
          ) [DesignatorStmt]
        ) [Statements]
        ReturnExpr(
          PosTermExpr(
            FactorTerm(
              NumFactor(
               2
              ) [NumFactor]
            ) [FactorTerm]
          ) [PosTermExpr]
        ) [ReturnExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:36:31,020 - Deklarisana promenljiva Unpacking::a na liniji 6
INFO  23:36:31,021 - Deklarisana promenljiva Unpacking::b na liniji 6
INFO  23:36:31,021 - Deklarisana promenljiva Unpacking::niz na liniji 7
INFO  23:36:31,021 - Deklarisana promenljiva Unpacking::arr na liniji 8
INFO  23:36:31,022 - Deklarisana promenljiva Unpacking::buarr na liniji 9
INFO  23:36:31,022 - Obradjuje se funkcija main na liniji 11
INFO  23:36:31,022 - Deklarisana promenljiva nizic na liniji 16
INFO  23:36:31,023 - Deklarisana konstanta ok na liniji 17
INFO  23:36:31,023 - Deklarisana promenljiva pokusaj na liniji 18
INFO  23:36:31,023 - Deklarisana promenljiva dd na liniji 19
INFO  23:36:31,023 - Deklarisana promenljiva slovo na liniji 20
INFO  23:36:31,023 - Obradjuje se funkcija funkcija na liniji 23
INFO  23:36:31,024 - Deklarisana promenljiva c na liniji 23
INFO  23:36:31,024 - Deklarisana promenljiva d na liniji 23
INFO  23:36:31,025 - Pretraga na 25(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 25
INFO  23:36:31,027 - Pretraga na 26(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 26
INFO  23:36:31,028 - Pretraga na 29(Unpacking::niz), nadjeno Var Unpacking::niz: Arr of int, 2, 0  na liniji 29
INFO  23:36:31,029 - Obradjuje se funkcija testtest na liniji 38
INFO  23:36:31,029 - Deklarisan parametar param1 metode: testtest. na liniji 38
INFO  23:36:31,032 - Deklarisan parametar param2 metode: testtest. na liniji 38
INFO  23:36:31,032 - Deklarisan parametar param3 metode: testtest. na liniji 38
INFO  23:36:31,033 - Deklarisana promenljiva c na liniji 38
INFO  23:36:31,033 - Deklarisana promenljiva d na liniji 38
INFO  23:36:31,034 - Obradjuje se funkcija test na liniji 42
INFO  23:36:31,034 - Deklarisana promenljiva c na liniji 42
INFO  23:36:31,036 - Obradjuje se funkcija main na liniji 61
INFO  23:36:31,037 - Deklarisana promenljiva prvi na liniji 62
INFO  23:36:31,037 - Deklarisana promenljiva drugi na liniji 62
INFO  23:36:31,037 - Deklarisana promenljiva treci na liniji 63
ERROR 23:36:31,038 - Greska na liniji 65stvarni parametar ne odgovara formalnom parametru metode po tipu!
ERROR 23:36:31,038 - Greska na liniji 65src i dst nisu kompatibilni pri dodeli! 
INFO  23:36:31,039 -  Print count calls = 0
INFO  23:36:31,039 -  Deklarisanih promenljivih ima = 0
INFO  23:36:31,042 - Neuspesna semanticka analiza!!
INFO  23:37:31,830 - Compiling source file: C:\Users\Zoki\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:37:31,908 - #2 program
INFO  23:37:31,908 - #47 test302
INFO  23:37:31,910 - #17 namespace
INFO  23:37:31,912 - #47 Unpacking
INFO  23:37:31,913 - #42 {
INFO  23:37:31,914 - #47 int
INFO  23:37:31,915 - #47 a
INFO  23:37:31,916 - #36 ,
INFO  23:37:31,917 - #47 b
INFO  23:37:31,918 - #34 ;
INFO  23:37:31,918 - #47 int
INFO  23:37:31,919 - #47 niz
INFO  23:37:31,920 - #40 [
INFO  23:37:31,920 - #41 ]
INFO  23:37:31,920 - #34 ;
INFO  23:37:31,921 - #47 int
INFO  23:37:31,921 - #47 arr
INFO  23:37:31,922 - #40 [
INFO  23:37:31,922 - #41 ]
INFO  23:37:31,923 - #34 ;
INFO  23:37:31,923 - #47 bool
INFO  23:37:31,924 - #47 buarr
INFO  23:37:31,924 - #40 [
INFO  23:37:31,925 - #41 ]
INFO  23:37:31,925 - #34 ;
INFO  23:37:31,926 - #42 {
INFO  23:37:31,926 - #47 int
INFO  23:37:31,928 - #47 main
INFO  23:37:31,929 - #38 (
INFO  23:37:31,932 - #39 )
INFO  23:37:31,933 - #42 {
INFO  23:37:31,935 - #11 return
INFO  23:37:31,936 - #46 2
INFO  23:37:31,936 - #34 ;
INFO  23:37:31,937 - #43 }
INFO  23:37:31,938 - #43 }
INFO  23:37:31,939 - #43 }
INFO  23:37:31,940 - #47 int
INFO  23:37:31,944 - #47 nizic
INFO  23:37:31,945 - #40 [
INFO  23:37:31,945 - #41 ]
INFO  23:37:31,945 - #34 ;
INFO  23:37:31,947 - #6 const
INFO  23:37:31,948 - #47 bool
INFO  23:37:31,948 - #47 ok
INFO  23:37:31,948 - #31 =
INFO  23:37:31,948 - #48 false
INFO  23:37:31,948 - #34 ;
INFO  23:37:31,951 - #47 bool
INFO  23:37:31,951 - #47 pokusaj
INFO  23:37:31,952 - #34 ;
INFO  23:37:31,952 - #47 int
INFO  23:37:31,953 - #47 dd
INFO  23:37:31,953 - #34 ;
INFO  23:37:31,953 - #47 char
INFO  23:37:31,954 - #47 slovo
INFO  23:37:31,954 - #34 ;
INFO  23:37:31,954 - #42 {
INFO  23:37:31,955 - #12 void
INFO  23:37:31,955 - #47 funkcija
INFO  23:37:31,957 - #38 (
INFO  23:37:31,957 - #39 )
INFO  23:37:31,958 - #47 int
INFO  23:37:31,958 - #47 c
INFO  23:37:31,960 - #36 ,
INFO  23:37:31,960 - #47 d
INFO  23:37:31,960 - #34 ;
INFO  23:37:31,960 - #42 {
INFO  23:37:31,961 - #47 nizic
INFO  23:37:31,961 - #40 [
INFO  23:37:31,961 - #46 3
INFO  23:37:31,961 - #41 ]
INFO  23:37:31,961 - #32 ++
INFO  23:37:31,962 - #34 ;
INFO  23:37:31,963 - #47 nizic
INFO  23:37:31,963 - #40 [
INFO  23:37:31,964 - #46 3
INFO  23:37:31,964 - #41 ]
INFO  23:37:31,964 - #33 --
INFO  23:37:31,965 - #34 ;
INFO  23:37:31,966 - #47 dd
INFO  23:37:31,966 - #32 ++
INFO  23:37:31,966 - #34 ;
INFO  23:37:31,966 - #47 dd
INFO  23:37:31,967 - #33 --
INFO  23:37:31,967 - #34 ;
INFO  23:37:31,967 - #47 Unpacking
INFO  23:37:31,967 - #45 ::
INFO  23:37:31,967 - #47 niz
INFO  23:37:31,967 - #40 [
INFO  23:37:31,968 - #47 dd
INFO  23:37:31,969 - #41 ]
INFO  23:37:31,970 - #32 ++
INFO  23:37:31,970 - #34 ;
INFO  23:37:31,970 - #10 read
INFO  23:37:31,971 - #38 (
INFO  23:37:31,971 - #47 pokusaj
INFO  23:37:31,971 - #39 )
INFO  23:37:31,971 - #34 ;
INFO  23:37:31,971 - #10 read
INFO  23:37:31,972 - #38 (
INFO  23:37:31,972 - #47 Unpacking
INFO  23:37:31,972 - #45 ::
INFO  23:37:31,973 - #47 a
INFO  23:37:31,973 - #39 )
INFO  23:37:31,973 - #34 ;
INFO  23:37:31,973 - #9 print
INFO  23:37:31,973 - #38 (
INFO  23:37:31,974 - #46 3
INFO  23:37:31,974 - #36 ,
INFO  23:37:31,974 - #46 2
INFO  23:37:31,974 - #39 )
INFO  23:37:31,975 - #34 ;
INFO  23:37:31,976 - #43 }
INFO  23:37:31,977 - #47 bool
INFO  23:37:31,977 - #47 testtest
INFO  23:37:31,978 - #38 (
INFO  23:37:31,978 - #47 int
INFO  23:37:31,979 - #47 param1
INFO  23:37:31,979 - #36 ,
INFO  23:37:31,980 - #47 int
INFO  23:37:31,980 - #47 param2
INFO  23:37:31,981 - #36 ,
INFO  23:37:31,981 - #47 char
INFO  23:37:31,982 - #47 param3
INFO  23:37:31,982 - #39 )
INFO  23:37:31,983 - #47 bool
INFO  23:37:31,983 - #47 c
INFO  23:37:31,984 - #36 ,
INFO  23:37:31,985 - #47 d
INFO  23:37:31,985 - #34 ;
INFO  23:37:31,985 - #42 {
INFO  23:37:31,985 - #11 return
INFO  23:37:31,985 - #47 c
INFO  23:37:31,985 - #34 ;
INFO  23:37:31,986 - #43 }
INFO  23:37:31,986 - #47 int
INFO  23:37:31,986 - #47 test
INFO  23:37:31,987 - #38 (
INFO  23:37:31,987 - #39 )
INFO  23:37:31,987 - #47 bool
INFO  23:37:31,987 - #47 c
INFO  23:37:31,987 - #34 ;
INFO  23:37:31,987 - #42 {
INFO  23:37:31,987 - #47 dd
INFO  23:37:31,987 - #31 =
INFO  23:37:31,987 - #47 Unpacking
INFO  23:37:31,987 - #45 ::
INFO  23:37:31,988 - #47 a
INFO  23:37:31,988 - #20 *
INFO  23:37:31,988 - #47 dd
INFO  23:37:31,989 - #34 ;
INFO  23:37:31,990 - #47 Unpacking
INFO  23:37:31,990 - #45 ::
INFO  23:37:31,990 - #47 a
INFO  23:37:31,990 - #31 =
INFO  23:37:31,991 - #47 Unpacking
INFO  23:37:31,991 - #45 ::
INFO  23:37:31,991 - #47 a
INFO  23:37:31,991 - #18 +
INFO  23:37:31,991 - #47 Unpacking
INFO  23:37:31,993 - #45 ::
INFO  23:37:31,993 - #47 a
INFO  23:37:31,994 - #20 *
INFO  23:37:31,994 - #47 dd
INFO  23:37:31,994 - #34 ;
INFO  23:37:31,994 - #47 Unpacking
INFO  23:37:31,994 - #45 ::
INFO  23:37:31,994 - #47 a
INFO  23:37:31,994 - #31 =
INFO  23:37:31,994 - #19 -
INFO  23:37:31,995 - #47 dd
INFO  23:37:31,995 - #34 ;
INFO  23:37:31,995 - #47 dd
INFO  23:37:31,995 - #31 =
INFO  23:37:31,995 - #46 3
INFO  23:37:31,996 - #34 ;
INFO  23:37:31,996 - #47 dd
INFO  23:37:31,996 - #31 =
INFO  23:37:31,996 - #19 -
INFO  23:37:31,996 - #46 9
INFO  23:37:31,996 - #34 ;
INFO  23:37:31,997 - #11 return
INFO  23:37:31,997 - #46 3
INFO  23:37:31,997 - #34 ;
INFO  23:37:31,997 - #7 if
INFO  23:37:31,997 - #38 (
INFO  23:37:31,997 - #47 pokusaj
INFO  23:37:31,997 - #23 ==
INFO  23:37:31,998 - #48 true
INFO  23:37:32,000 - #39 )
INFO  23:37:32,001 - #42 {
INFO  23:37:32,001 - #47 dd
INFO  23:37:32,001 - #32 ++
INFO  23:37:32,001 - #34 ;
INFO  23:37:32,001 - #43 }
INFO  23:37:32,002 - #5 else
INFO  23:37:32,002 - #42 {
INFO  23:37:32,002 - #47 c
INFO  23:37:32,002 - #31 =
INFO  23:37:32,002 - #48 true
INFO  23:37:32,002 - #34 ;
INFO  23:37:32,002 - #43 }
INFO  23:37:32,002 - #43 }
INFO  23:37:32,003 - #47 int
INFO  23:37:32,003 - #47 main
INFO  23:37:32,003 - #38 (
INFO  23:37:32,004 - #39 )
INFO  23:37:32,004 - #47 int
INFO  23:37:32,004 - #47 prvi
INFO  23:37:32,004 - #36 ,
INFO  23:37:32,004 - #47 drugi
INFO  23:37:32,004 - #34 ;
INFO  23:37:32,004 - #47 bool
INFO  23:37:32,004 - #47 treci
INFO  23:37:32,005 - #34 ;
INFO  23:37:32,005 - #42 {
INFO  23:37:32,005 - #47 treci
INFO  23:37:32,005 - #31 =
INFO  23:37:32,005 - #47 testtest
INFO  23:37:32,005 - #38 (
INFO  23:37:32,005 - #47 prvi
INFO  23:37:32,006 - #36 ,
INFO  23:37:32,006 - #47 drugi
INFO  23:37:32,007 - #36 ,
INFO  23:37:32,007 - #47 treci
INFO  23:37:32,007 - #39 )
INFO  23:37:32,008 - #34 ;
INFO  23:37:32,010 - #11 return
INFO  23:37:32,010 - #46 2
INFO  23:37:32,010 - #34 ;
INFO  23:37:32,010 - #43 }
INFO  23:37:32,010 - #43 }
INFO  23:37:32,021 - Program(
  ProgName(
   test302
  ) [ProgName]
  NamespaceList(
    NoNamespaceList(
    ) [NoNamespaceList]
    Namespace(
      NamespaceName(
       Unpacking
      ) [NamespaceName]
      NamespaceDecls(
        NamespaceDecls(
          NamespaceDecls(
            NamespaceDecls(
              NoNamespaceDecls(
              ) [NoNamespaceDecls]
              NamespaceVarDecl(
                Type(
                 int
                ) [Type]
                MultipleVarDecls(
                  SingleVarDecl(
                    VarNameDecl(
                     a
                    ) [VarNameDecl]
                  ) [SingleVarDecl]
                  VarNameDecl(
                   b
                  ) [VarNameDecl]
                ) [MultipleVarDecls]
              ) [NamespaceVarDecl]
            ) [NamespaceDecls]
            NamespaceVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 niz
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [NamespaceVarDecl]
          ) [NamespaceDecls]
          NamespaceVarDecl(
            Type(
             int
            ) [Type]
            SingleVarDecl(
              VarArrayNameDecl(
               arr
              ) [VarArrayNameDecl]
            ) [SingleVarDecl]
          ) [NamespaceVarDecl]
        ) [NamespaceDecls]
        NamespaceVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarArrayNameDecl(
             buarr
            ) [VarArrayNameDecl]
          ) [SingleVarDecl]
        ) [NamespaceVarDecl]
      ) [NamespaceDecls]
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               int
              ) [Type]
            ) [MethRetType]
           main
          ) [MethodTypeName]
          NoFormParam(
          ) [NoFormParam]
          NoMethVar(
          ) [NoMethVar]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   2
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
    ) [Namespace]
  ) [NamespaceList]
  ProgramDecls(
    ProgramDecls(
      ProgramDecls(
        ProgramDecls(
          ProgramDecls(
            NoProgramDecls(
            ) [NoProgramDecls]
            ProgramVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 nizic
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [ProgramVarDecl]
          ) [ProgramDecls]
          ProgramConstDecl(
            Type(
             bool
            ) [Type]
            SingleConstDecl(
              ConstDecl(
               ok
                BoolConst(
                 false
                ) [BoolConst]
              ) [ConstDecl]
            ) [SingleConstDecl]
          ) [ProgramConstDecl]
        ) [ProgramDecls]
        ProgramVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             pokusaj
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [ProgramVarDecl]
      ) [ProgramDecls]
      ProgramVarDecl(
        Type(
         int
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           dd
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [ProgramVarDecl]
    ) [ProgramDecls]
    ProgramVarDecl(
      Type(
       char
      ) [Type]
      SingleVarDecl(
        VarNameDecl(
         slovo
        ) [VarNameDecl]
      ) [SingleVarDecl]
    ) [ProgramVarDecl]
  ) [ProgramDecls]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecl(
          ) [NoMethodDecl]
          MethodDecl(
            MethodTypeName(
              MethRetVoid(
              ) [MethRetVoid]
             funkcija
            ) [MethodTypeName]
            NoFormParam(
            ) [NoFormParam]
            MethodVars(
              NoMethVar(
              ) [NoMethVar]
              Type(
               int
              ) [Type]
              MultipleVarDecls(
                SingleVarDecl(
                  VarNameDecl(
                   c
                  ) [VarNameDecl]
                ) [SingleVarDecl]
                VarNameDecl(
                 d
                ) [VarNameDecl]
              ) [MultipleVarDecls]
            ) [MethodVars]
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            NoStmt(
                            ) [NoStmt]
                            DesignatorStmt(
                              DesigStmtActions(
                                DesigArray(
                                 nizic
                                  PosTermExpr(
                                    FactorTerm(
                                      NumFactor(
                                       3
                                      ) [NumFactor]
                                    ) [FactorTerm]
                                  ) [PosTermExpr]
                                ) [DesigArray]
                                DesigInc(
                                ) [DesigInc]
                              ) [DesigStmtActions]
                            ) [DesignatorStmt]
                          ) [Statements]
                          DesignatorStmt(
                            DesigStmtActions(
                              DesigArray(
                               nizic
                                PosTermExpr(
                                  FactorTerm(
                                    NumFactor(
                                     3
                                    ) [NumFactor]
                                  ) [FactorTerm]
                                ) [PosTermExpr]
                              ) [DesigArray]
                              DesigDec(
                              ) [DesigDec]
                            ) [DesigStmtActions]
                          ) [DesignatorStmt]
                        ) [Statements]
                        DesignatorStmt(
                          DesigStmtActions(
                            DesigVar(
                             dd
                            ) [DesigVar]
                            DesigInc(
                            ) [DesigInc]
                          ) [DesigStmtActions]
                        ) [DesignatorStmt]
                      ) [Statements]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          DesigDec(
                          ) [DesigDec]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigArray(
                         Unpacking
                         niz
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ScopeDesigArray]
                        DesigInc(
                        ) [DesigInc]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  ReadExpr(
                    DesigVar(
                     pokusaj
                    ) [DesigVar]
                  ) [ReadExpr]
                ) [Statements]
                ReadExpr(
                  ScopeDesigVar(
                   Unpacking
                   a
                  ) [ScopeDesigVar]
                ) [ReadExpr]
              ) [Statements]
              PrintStmt(
                PosTermExpr(
                  FactorTerm(
                    NumFactor(
                     3
                    ) [NumFactor]
                  ) [FactorTerm]
                ) [PosTermExpr]
                PrintVar(
                 2
                ) [PrintVar]
              ) [PrintStmt]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               bool
              ) [Type]
            ) [MethRetType]
           testtest
          ) [MethodTypeName]
          FormParams(
            FormCommaParamDecl(
              FormCommaParamDecl(
                FormParamDecl(
                  FormParamVar(
                    Type(
                     int
                    ) [Type]
                   param1
                  ) [FormParamVar]
                ) [FormParamDecl]
                FormParamVar(
                  Type(
                   int
                  ) [Type]
                 param2
                ) [FormParamVar]
              ) [FormCommaParamDecl]
              FormParamVar(
                Type(
                 char
                ) [Type]
               param3
              ) [FormParamVar]
            ) [FormCommaParamDecl]
          ) [FormParams]
          MethodVars(
            NoMethVar(
            ) [NoMethVar]
            Type(
             bool
            ) [Type]
            MultipleVarDecls(
              SingleVarDecl(
                VarNameDecl(
                 c
                ) [VarNameDecl]
              ) [SingleVarDecl]
              VarNameDecl(
               d
              ) [VarNameDecl]
            ) [MultipleVarDecls]
          ) [MethodVars]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  VarFactor(
                    DesigVar(
                     c
                    ) [DesigVar]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        MethodTypeName(
          MethRetType(
            Type(
             int
            ) [Type]
          ) [MethRetType]
         test
        ) [MethodTypeName]
        NoFormParam(
        ) [NoFormParam]
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             c
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [MethodVars]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          AssignExpr(
                            PosTermExpr(
                              MulTerm(
                                FactorTerm(
                                  VarFactor(
                                    ScopeDesigVar(
                                     Unpacking
                                     a
                                    ) [ScopeDesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                                Mul(
                                ) [Mul]
                                VarFactor(
                                  DesigVar(
                                   dd
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [MulTerm]
                            ) [PosTermExpr]
                          ) [AssignExpr]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigVar(
                         Unpacking
                         a
                        ) [ScopeDesigVar]
                        AssignExpr(
                          AddExpr(
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                            Add(
                            ) [Add]
                            MulTerm(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                              Mul(
                              ) [Mul]
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [MulTerm]
                          ) [AddExpr]
                        ) [AssignExpr]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    DesigStmtActions(
                      ScopeDesigVar(
                       Unpacking
                       a
                      ) [ScopeDesigVar]
                      AssignExpr(
                        NegTermeExpr(
                          FactorTerm(
                            VarFactor(
                              DesigVar(
                               dd
                              ) [DesigVar]
                            ) [VarFactor]
                          ) [FactorTerm]
                        ) [NegTermeExpr]
                      ) [AssignExpr]
                    ) [DesigStmtActions]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          NumFactor(
                           3
                          ) [NumFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                DesigStmtActions(
                  DesigVar(
                   dd
                  ) [DesigVar]
                  AssignExpr(
                    NegTermeExpr(
                      FactorTerm(
                        NumFactor(
                         9
                        ) [NumFactor]
                      ) [FactorTerm]
                    ) [NegTermeExpr]
                  ) [AssignExpr]
                ) [DesigStmtActions]
              ) [DesignatorStmt]
            ) [Statements]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   3
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
          IfElseStmt(
            ConditionCondTerm(
              CondTermFact(
                RelOpCondFact(
                  PosTermExpr(
                    FactorTerm(
                      VarFactor(
                        DesigVar(
                         pokusaj
                        ) [DesigVar]
                      ) [VarFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                  EqlOp(
                  ) [EqlOp]
                  PosTermExpr(
                    FactorTerm(
                      BoolFactor(
                       true
                      ) [BoolFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                ) [RelOpCondFact]
              ) [CondTermFact]
            ) [ConditionCondTerm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    DesigInc(
                    ) [DesigInc]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     c
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          BoolFactor(
                           true
                          ) [BoolFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
          ) [IfElseStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        MethRetType(
          Type(
           int
          ) [Type]
        ) [MethRetType]
       main
      ) [MethodTypeName]
      NoFormParam(
      ) [NoFormParam]
      MethodVars(
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           int
          ) [Type]
          MultipleVarDecls(
            SingleVarDecl(
              VarNameDecl(
               prvi
              ) [VarNameDecl]
            ) [SingleVarDecl]
            VarNameDecl(
             drugi
            ) [VarNameDecl]
          ) [MultipleVarDecls]
        ) [MethodVars]
        Type(
         bool
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           treci
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [MethodVars]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          DesignatorStmt(
            DesigStmtActions(
              DesigVar(
               treci
              ) [DesigVar]
              AssignExpr(
                PosTermExpr(
                  FactorTerm(
                    FactorFuncCall(
                      DesigVar(
                       testtest
                      ) [DesigVar]
                      ActPars(
                        ActualParamsList(
                          ActualParamsList(
                            ActualParam(
                              PosTermExpr(
                                FactorTerm(
                                  VarFactor(
                                    DesigVar(
                                     prvi
                                    ) [DesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                              ) [PosTermExpr]
                            ) [ActualParam]
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  DesigVar(
                                   drugi
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                          ) [ActualParamsList]
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 treci
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ActualParamsList]
                      ) [ActPars]
                    ) [FactorFuncCall]
                  ) [FactorTerm]
                ) [PosTermExpr]
              ) [AssignExpr]
            ) [DesigStmtActions]
          ) [DesignatorStmt]
        ) [Statements]
        ReturnExpr(
          PosTermExpr(
            FactorTerm(
              NumFactor(
               2
              ) [NumFactor]
            ) [FactorTerm]
          ) [PosTermExpr]
        ) [ReturnExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:37:32,028 - Deklarisana promenljiva Unpacking::a na liniji 6
INFO  23:37:32,028 - Deklarisana promenljiva Unpacking::b na liniji 6
INFO  23:37:32,029 - Deklarisana promenljiva Unpacking::niz na liniji 7
INFO  23:37:32,029 - Deklarisana promenljiva Unpacking::arr na liniji 8
INFO  23:37:32,029 - Deklarisana promenljiva Unpacking::buarr na liniji 9
INFO  23:37:32,029 - Obradjuje se funkcija main na liniji 11
INFO  23:37:32,029 - Deklarisana promenljiva nizic na liniji 16
INFO  23:37:32,030 - Deklarisana konstanta ok na liniji 17
INFO  23:37:32,030 - Deklarisana promenljiva pokusaj na liniji 18
INFO  23:37:32,030 - Deklarisana promenljiva dd na liniji 19
INFO  23:37:32,030 - Deklarisana promenljiva slovo na liniji 20
INFO  23:37:32,030 - Obradjuje se funkcija funkcija na liniji 23
INFO  23:37:32,030 - Deklarisana promenljiva c na liniji 23
INFO  23:37:32,030 - Deklarisana promenljiva d na liniji 23
INFO  23:37:32,031 - Pretraga na 25(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 25
INFO  23:37:32,032 - Pretraga na 26(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 26
INFO  23:37:32,033 - Pretraga na 29(Unpacking::niz), nadjeno Var Unpacking::niz: Arr of int, 2, 0  na liniji 29
INFO  23:37:32,033 - Obradjuje se funkcija testtest na liniji 38
INFO  23:37:32,033 - Deklarisan parametar param1 metode: testtest. na liniji 38
INFO  23:37:32,033 - Deklarisan parametar param2 metode: testtest. na liniji 38
INFO  23:37:32,033 - Deklarisan parametar param3 metode: testtest. na liniji 38
INFO  23:37:32,033 - Deklarisana promenljiva c na liniji 38
INFO  23:37:32,033 - Deklarisana promenljiva d na liniji 38
INFO  23:37:32,034 - Obradjuje se funkcija test na liniji 42
INFO  23:37:32,034 - Deklarisana promenljiva c na liniji 42
INFO  23:37:32,035 - Obradjuje se funkcija main na liniji 61
INFO  23:37:32,035 - Deklarisana promenljiva prvi na liniji 62
INFO  23:37:32,035 - Deklarisana promenljiva drugi na liniji 62
INFO  23:37:32,035 - Deklarisana promenljiva treci na liniji 63
ERROR 23:37:32,036 - Greska na liniji 65stvarni parametar ne odgovara formalnom parametru metode po tipu!
INFO  23:37:32,036 -  Print count calls = 0
INFO  23:37:32,036 -  Deklarisanih promenljivih ima = 0
INFO  23:37:32,037 - Neuspesna semanticka analiza!!
INFO  23:40:25,599 - Compiling source file: C:\Users\Zoki\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  23:40:25,930 - #2 program
INFO  23:40:25,932 - #47 test302
INFO  23:40:25,934 - #17 namespace
INFO  23:40:25,939 - #47 Unpacking
INFO  23:40:25,939 - #42 {
INFO  23:40:25,942 - #47 int
INFO  23:40:25,946 - #47 a
INFO  23:40:25,949 - #36 ,
INFO  23:40:25,951 - #47 b
INFO  23:40:25,951 - #34 ;
INFO  23:40:25,952 - #47 int
INFO  23:40:25,954 - #47 niz
INFO  23:40:25,956 - #40 [
INFO  23:40:25,956 - #41 ]
INFO  23:40:25,957 - #34 ;
INFO  23:40:25,957 - #47 int
INFO  23:40:25,958 - #47 arr
INFO  23:40:25,958 - #40 [
INFO  23:40:25,958 - #41 ]
INFO  23:40:25,958 - #34 ;
INFO  23:40:25,958 - #47 bool
INFO  23:40:25,960 - #47 buarr
INFO  23:40:25,960 - #40 [
INFO  23:40:25,960 - #41 ]
INFO  23:40:25,960 - #34 ;
INFO  23:40:25,961 - #42 {
INFO  23:40:25,961 - #47 int
INFO  23:40:25,966 - #47 main
INFO  23:40:25,967 - #38 (
INFO  23:40:25,971 - #39 )
INFO  23:40:25,974 - #42 {
INFO  23:40:25,977 - #11 return
INFO  23:40:25,980 - #46 2
INFO  23:40:25,981 - #34 ;
INFO  23:40:25,983 - #43 }
INFO  23:40:25,985 - #43 }
INFO  23:40:25,991 - #43 }
INFO  23:40:25,991 - #47 int
INFO  23:40:25,999 - #47 nizic
INFO  23:40:26,000 - #40 [
INFO  23:40:26,001 - #41 ]
INFO  23:40:26,001 - #34 ;
INFO  23:40:26,004 - #6 const
INFO  23:40:26,005 - #47 bool
INFO  23:40:26,006 - #47 ok
INFO  23:40:26,007 - #31 =
INFO  23:40:26,007 - #48 false
INFO  23:40:26,008 - #34 ;
INFO  23:40:26,019 - #47 bool
INFO  23:40:26,020 - #47 pokusaj
INFO  23:40:26,021 - #34 ;
INFO  23:40:26,021 - #47 int
INFO  23:40:26,022 - #47 dd
INFO  23:40:26,022 - #34 ;
INFO  23:40:26,022 - #47 char
INFO  23:40:26,023 - #47 slovo
INFO  23:40:26,023 - #34 ;
INFO  23:40:26,058 - #42 {
INFO  23:40:26,058 - #12 void
INFO  23:40:26,059 - #47 funkcija
INFO  23:40:26,062 - #38 (
INFO  23:40:26,065 - #39 )
INFO  23:40:26,066 - #47 int
INFO  23:40:26,068 - #47 c
INFO  23:40:26,069 - #36 ,
INFO  23:40:26,069 - #47 d
INFO  23:40:26,070 - #34 ;
INFO  23:40:26,070 - #42 {
INFO  23:40:26,072 - #47 nizic
INFO  23:40:26,073 - #40 [
INFO  23:40:26,073 - #46 3
INFO  23:40:26,073 - #41 ]
INFO  23:40:26,074 - #32 ++
INFO  23:40:26,075 - #34 ;
INFO  23:40:26,079 - #47 nizic
INFO  23:40:26,080 - #40 [
INFO  23:40:26,083 - #46 3
INFO  23:40:26,084 - #41 ]
INFO  23:40:26,085 - #33 --
INFO  23:40:26,085 - #34 ;
INFO  23:40:26,088 - #47 dd
INFO  23:40:26,090 - #32 ++
INFO  23:40:26,091 - #34 ;
INFO  23:40:26,093 - #47 dd
INFO  23:40:26,093 - #33 --
INFO  23:40:26,093 - #34 ;
INFO  23:40:26,096 - #47 Unpacking
INFO  23:40:26,097 - #45 ::
INFO  23:40:26,098 - #47 niz
INFO  23:40:26,098 - #40 [
INFO  23:40:26,098 - #47 dd
INFO  23:40:26,098 - #41 ]
INFO  23:40:26,100 - #32 ++
INFO  23:40:26,101 - #34 ;
INFO  23:40:26,101 - #10 read
INFO  23:40:26,101 - #38 (
INFO  23:40:26,102 - #47 pokusaj
INFO  23:40:26,102 - #39 )
INFO  23:40:26,102 - #34 ;
INFO  23:40:26,104 - #10 read
INFO  23:40:26,106 - #38 (
INFO  23:40:26,108 - #47 Unpacking
INFO  23:40:26,111 - #45 ::
INFO  23:40:26,113 - #47 a
INFO  23:40:26,115 - #39 )
INFO  23:40:26,117 - #34 ;
INFO  23:40:26,120 - #9 print
INFO  23:40:26,121 - #38 (
INFO  23:40:26,123 - #46 3
INFO  23:40:26,123 - #36 ,
INFO  23:40:26,123 - #46 2
INFO  23:40:26,123 - #39 )
INFO  23:40:26,125 - #34 ;
INFO  23:40:26,125 - #43 }
INFO  23:40:26,126 - #47 bool
INFO  23:40:26,127 - #47 testtest
INFO  23:40:26,129 - #38 (
INFO  23:40:26,129 - #47 int
INFO  23:40:26,130 - #47 param1
INFO  23:40:26,130 - #36 ,
INFO  23:40:26,132 - #47 int
INFO  23:40:26,133 - #47 param2
INFO  23:40:26,134 - #36 ,
INFO  23:40:26,136 - #47 char
INFO  23:40:26,138 - #47 param3
INFO  23:40:26,140 - #39 )
INFO  23:40:26,143 - #47 bool
INFO  23:40:26,145 - #47 c
INFO  23:40:26,146 - #36 ,
INFO  23:40:26,147 - #47 d
INFO  23:40:26,148 - #34 ;
INFO  23:40:26,148 - #42 {
INFO  23:40:26,148 - #11 return
INFO  23:40:26,149 - #47 c
INFO  23:40:26,149 - #34 ;
INFO  23:40:26,149 - #43 }
INFO  23:40:26,150 - #47 int
INFO  23:40:26,150 - #47 test
INFO  23:40:26,150 - #38 (
INFO  23:40:26,151 - #39 )
INFO  23:40:26,151 - #47 bool
INFO  23:40:26,151 - #47 c
INFO  23:40:26,152 - #34 ;
INFO  23:40:26,152 - #42 {
INFO  23:40:26,152 - #47 dd
INFO  23:40:26,153 - #31 =
INFO  23:40:26,153 - #47 Unpacking
INFO  23:40:26,153 - #45 ::
INFO  23:40:26,154 - #47 a
INFO  23:40:26,154 - #20 *
INFO  23:40:26,154 - #47 dd
INFO  23:40:26,158 - #34 ;
INFO  23:40:26,160 - #47 Unpacking
INFO  23:40:26,161 - #45 ::
INFO  23:40:26,161 - #47 a
INFO  23:40:26,162 - #31 =
INFO  23:40:26,162 - #47 Unpacking
INFO  23:40:26,162 - #45 ::
INFO  23:40:26,162 - #47 a
INFO  23:40:26,162 - #18 +
INFO  23:40:26,162 - #47 Unpacking
INFO  23:40:26,169 - #45 ::
INFO  23:40:26,171 - #47 a
INFO  23:40:26,171 - #20 *
INFO  23:40:26,171 - #47 dd
INFO  23:40:26,172 - #34 ;
INFO  23:40:26,173 - #47 Unpacking
INFO  23:40:26,173 - #45 ::
INFO  23:40:26,173 - #47 a
INFO  23:40:26,174 - #31 =
INFO  23:40:26,175 - #19 -
INFO  23:40:26,176 - #47 dd
INFO  23:40:26,177 - #34 ;
INFO  23:40:26,177 - #47 dd
INFO  23:40:26,178 - #31 =
INFO  23:40:26,179 - #46 3
INFO  23:40:26,179 - #34 ;
INFO  23:40:26,181 - #47 dd
INFO  23:40:26,182 - #31 =
INFO  23:40:26,182 - #19 -
INFO  23:40:26,182 - #46 9
INFO  23:40:26,182 - #34 ;
INFO  23:40:26,183 - #11 return
INFO  23:40:26,183 - #46 3
INFO  23:40:26,184 - #34 ;
INFO  23:40:26,184 - #7 if
INFO  23:40:26,184 - #38 (
INFO  23:40:26,185 - #47 pokusaj
INFO  23:40:26,185 - #23 ==
INFO  23:40:26,187 - #48 true
INFO  23:40:26,192 - #39 )
INFO  23:40:26,194 - #42 {
INFO  23:40:26,196 - #47 dd
INFO  23:40:26,198 - #32 ++
INFO  23:40:26,200 - #34 ;
INFO  23:40:26,201 - #43 }
INFO  23:40:26,202 - #5 else
INFO  23:40:26,203 - #42 {
INFO  23:40:26,203 - #47 c
INFO  23:40:26,203 - #31 =
INFO  23:40:26,204 - #48 true
INFO  23:40:26,204 - #34 ;
INFO  23:40:26,205 - #43 }
INFO  23:40:26,207 - #43 }
INFO  23:40:26,208 - #47 int
INFO  23:40:26,210 - #47 main
INFO  23:40:26,210 - #38 (
INFO  23:40:26,211 - #39 )
INFO  23:40:26,218 - #47 int
INFO  23:40:26,220 - #47 prvi
INFO  23:40:26,221 - #36 ,
INFO  23:40:26,221 - #47 drugi
INFO  23:40:26,221 - #34 ;
INFO  23:40:26,221 - #47 char
INFO  23:40:26,222 - #47 treci
INFO  23:40:26,222 - #34 ;
INFO  23:40:26,222 - #42 {
INFO  23:40:26,223 - #47 treci
INFO  23:40:26,223 - #31 =
INFO  23:40:26,223 - #47 testtest
INFO  23:40:26,223 - #38 (
INFO  23:40:26,223 - #47 prvi
INFO  23:40:26,223 - #36 ,
INFO  23:40:26,224 - #47 drugi
INFO  23:40:26,225 - #36 ,
INFO  23:40:26,226 - #47 treci
INFO  23:40:26,226 - #39 )
INFO  23:40:26,228 - #34 ;
INFO  23:40:26,228 - #11 return
INFO  23:40:26,229 - #46 2
INFO  23:40:26,229 - #34 ;
INFO  23:40:26,229 - #43 }
INFO  23:40:26,230 - #43 }
INFO  23:40:26,261 - Program(
  ProgName(
   test302
  ) [ProgName]
  NamespaceList(
    NoNamespaceList(
    ) [NoNamespaceList]
    Namespace(
      NamespaceName(
       Unpacking
      ) [NamespaceName]
      NamespaceDecls(
        NamespaceDecls(
          NamespaceDecls(
            NamespaceDecls(
              NoNamespaceDecls(
              ) [NoNamespaceDecls]
              NamespaceVarDecl(
                Type(
                 int
                ) [Type]
                MultipleVarDecls(
                  SingleVarDecl(
                    VarNameDecl(
                     a
                    ) [VarNameDecl]
                  ) [SingleVarDecl]
                  VarNameDecl(
                   b
                  ) [VarNameDecl]
                ) [MultipleVarDecls]
              ) [NamespaceVarDecl]
            ) [NamespaceDecls]
            NamespaceVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 niz
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [NamespaceVarDecl]
          ) [NamespaceDecls]
          NamespaceVarDecl(
            Type(
             int
            ) [Type]
            SingleVarDecl(
              VarArrayNameDecl(
               arr
              ) [VarArrayNameDecl]
            ) [SingleVarDecl]
          ) [NamespaceVarDecl]
        ) [NamespaceDecls]
        NamespaceVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarArrayNameDecl(
             buarr
            ) [VarArrayNameDecl]
          ) [SingleVarDecl]
        ) [NamespaceVarDecl]
      ) [NamespaceDecls]
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               int
              ) [Type]
            ) [MethRetType]
           main
          ) [MethodTypeName]
          NoFormParam(
          ) [NoFormParam]
          NoMethVar(
          ) [NoMethVar]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   2
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
    ) [Namespace]
  ) [NamespaceList]
  ProgramDecls(
    ProgramDecls(
      ProgramDecls(
        ProgramDecls(
          ProgramDecls(
            NoProgramDecls(
            ) [NoProgramDecls]
            ProgramVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 nizic
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [ProgramVarDecl]
          ) [ProgramDecls]
          ProgramConstDecl(
            Type(
             bool
            ) [Type]
            SingleConstDecl(
              ConstDecl(
               ok
                BoolConst(
                 false
                ) [BoolConst]
              ) [ConstDecl]
            ) [SingleConstDecl]
          ) [ProgramConstDecl]
        ) [ProgramDecls]
        ProgramVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             pokusaj
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [ProgramVarDecl]
      ) [ProgramDecls]
      ProgramVarDecl(
        Type(
         int
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           dd
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [ProgramVarDecl]
    ) [ProgramDecls]
    ProgramVarDecl(
      Type(
       char
      ) [Type]
      SingleVarDecl(
        VarNameDecl(
         slovo
        ) [VarNameDecl]
      ) [SingleVarDecl]
    ) [ProgramVarDecl]
  ) [ProgramDecls]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecl(
          ) [NoMethodDecl]
          MethodDecl(
            MethodTypeName(
              MethRetVoid(
              ) [MethRetVoid]
             funkcija
            ) [MethodTypeName]
            NoFormParam(
            ) [NoFormParam]
            MethodVars(
              NoMethVar(
              ) [NoMethVar]
              Type(
               int
              ) [Type]
              MultipleVarDecls(
                SingleVarDecl(
                  VarNameDecl(
                   c
                  ) [VarNameDecl]
                ) [SingleVarDecl]
                VarNameDecl(
                 d
                ) [VarNameDecl]
              ) [MultipleVarDecls]
            ) [MethodVars]
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            NoStmt(
                            ) [NoStmt]
                            DesignatorStmt(
                              DesigStmtActions(
                                DesigArray(
                                 nizic
                                  PosTermExpr(
                                    FactorTerm(
                                      NumFactor(
                                       3
                                      ) [NumFactor]
                                    ) [FactorTerm]
                                  ) [PosTermExpr]
                                ) [DesigArray]
                                DesigInc(
                                ) [DesigInc]
                              ) [DesigStmtActions]
                            ) [DesignatorStmt]
                          ) [Statements]
                          DesignatorStmt(
                            DesigStmtActions(
                              DesigArray(
                               nizic
                                PosTermExpr(
                                  FactorTerm(
                                    NumFactor(
                                     3
                                    ) [NumFactor]
                                  ) [FactorTerm]
                                ) [PosTermExpr]
                              ) [DesigArray]
                              DesigDec(
                              ) [DesigDec]
                            ) [DesigStmtActions]
                          ) [DesignatorStmt]
                        ) [Statements]
                        DesignatorStmt(
                          DesigStmtActions(
                            DesigVar(
                             dd
                            ) [DesigVar]
                            DesigInc(
                            ) [DesigInc]
                          ) [DesigStmtActions]
                        ) [DesignatorStmt]
                      ) [Statements]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          DesigDec(
                          ) [DesigDec]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigArray(
                         Unpacking
                         niz
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ScopeDesigArray]
                        DesigInc(
                        ) [DesigInc]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  ReadExpr(
                    DesigVar(
                     pokusaj
                    ) [DesigVar]
                  ) [ReadExpr]
                ) [Statements]
                ReadExpr(
                  ScopeDesigVar(
                   Unpacking
                   a
                  ) [ScopeDesigVar]
                ) [ReadExpr]
              ) [Statements]
              PrintStmt(
                PosTermExpr(
                  FactorTerm(
                    NumFactor(
                     3
                    ) [NumFactor]
                  ) [FactorTerm]
                ) [PosTermExpr]
                PrintVar(
                 2
                ) [PrintVar]
              ) [PrintStmt]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               bool
              ) [Type]
            ) [MethRetType]
           testtest
          ) [MethodTypeName]
          FormParams(
            FormCommaParamDecl(
              FormCommaParamDecl(
                FormParamDecl(
                  FormParamVar(
                    Type(
                     int
                    ) [Type]
                   param1
                  ) [FormParamVar]
                ) [FormParamDecl]
                FormParamVar(
                  Type(
                   int
                  ) [Type]
                 param2
                ) [FormParamVar]
              ) [FormCommaParamDecl]
              FormParamVar(
                Type(
                 char
                ) [Type]
               param3
              ) [FormParamVar]
            ) [FormCommaParamDecl]
          ) [FormParams]
          MethodVars(
            NoMethVar(
            ) [NoMethVar]
            Type(
             bool
            ) [Type]
            MultipleVarDecls(
              SingleVarDecl(
                VarNameDecl(
                 c
                ) [VarNameDecl]
              ) [SingleVarDecl]
              VarNameDecl(
               d
              ) [VarNameDecl]
            ) [MultipleVarDecls]
          ) [MethodVars]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  VarFactor(
                    DesigVar(
                     c
                    ) [DesigVar]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        MethodTypeName(
          MethRetType(
            Type(
             int
            ) [Type]
          ) [MethRetType]
         test
        ) [MethodTypeName]
        NoFormParam(
        ) [NoFormParam]
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             c
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [MethodVars]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          AssignExpr(
                            PosTermExpr(
                              MulTerm(
                                FactorTerm(
                                  VarFactor(
                                    ScopeDesigVar(
                                     Unpacking
                                     a
                                    ) [ScopeDesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                                Mul(
                                ) [Mul]
                                VarFactor(
                                  DesigVar(
                                   dd
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [MulTerm]
                            ) [PosTermExpr]
                          ) [AssignExpr]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        ScopeDesigVar(
                         Unpacking
                         a
                        ) [ScopeDesigVar]
                        AssignExpr(
                          AddExpr(
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                            Add(
                            ) [Add]
                            MulTerm(
                              FactorTerm(
                                VarFactor(
                                  ScopeDesigVar(
                                   Unpacking
                                   a
                                  ) [ScopeDesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                              Mul(
                              ) [Mul]
                              VarFactor(
                                DesigVar(
                                 dd
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [MulTerm]
                          ) [AddExpr]
                        ) [AssignExpr]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    DesigStmtActions(
                      ScopeDesigVar(
                       Unpacking
                       a
                      ) [ScopeDesigVar]
                      AssignExpr(
                        NegTermeExpr(
                          FactorTerm(
                            VarFactor(
                              DesigVar(
                               dd
                              ) [DesigVar]
                            ) [VarFactor]
                          ) [FactorTerm]
                        ) [NegTermeExpr]
                      ) [AssignExpr]
                    ) [DesigStmtActions]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          NumFactor(
                           3
                          ) [NumFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                DesigStmtActions(
                  DesigVar(
                   dd
                  ) [DesigVar]
                  AssignExpr(
                    NegTermeExpr(
                      FactorTerm(
                        NumFactor(
                         9
                        ) [NumFactor]
                      ) [FactorTerm]
                    ) [NegTermeExpr]
                  ) [AssignExpr]
                ) [DesigStmtActions]
              ) [DesignatorStmt]
            ) [Statements]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   3
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
          IfElseStmt(
            ConditionCondTerm(
              CondTermFact(
                RelOpCondFact(
                  PosTermExpr(
                    FactorTerm(
                      VarFactor(
                        DesigVar(
                         pokusaj
                        ) [DesigVar]
                      ) [VarFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                  EqlOp(
                  ) [EqlOp]
                  PosTermExpr(
                    FactorTerm(
                      BoolFactor(
                       true
                      ) [BoolFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                ) [RelOpCondFact]
              ) [CondTermFact]
            ) [ConditionCondTerm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     dd
                    ) [DesigVar]
                    DesigInc(
                    ) [DesigInc]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
            ComplexStm(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     c
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          BoolFactor(
                           true
                          ) [BoolFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
          ) [IfElseStmt]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        MethRetType(
          Type(
           int
          ) [Type]
        ) [MethRetType]
       main
      ) [MethodTypeName]
      NoFormParam(
      ) [NoFormParam]
      MethodVars(
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           int
          ) [Type]
          MultipleVarDecls(
            SingleVarDecl(
              VarNameDecl(
               prvi
              ) [VarNameDecl]
            ) [SingleVarDecl]
            VarNameDecl(
             drugi
            ) [VarNameDecl]
          ) [MultipleVarDecls]
        ) [MethodVars]
        Type(
         char
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           treci
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [MethodVars]
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          DesignatorStmt(
            DesigStmtActions(
              DesigVar(
               treci
              ) [DesigVar]
              AssignExpr(
                PosTermExpr(
                  FactorTerm(
                    FactorFuncCall(
                      DesigVar(
                       testtest
                      ) [DesigVar]
                      ActPars(
                        ActualParamsList(
                          ActualParamsList(
                            ActualParam(
                              PosTermExpr(
                                FactorTerm(
                                  VarFactor(
                                    DesigVar(
                                     prvi
                                    ) [DesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                              ) [PosTermExpr]
                            ) [ActualParam]
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  DesigVar(
                                   drugi
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                          ) [ActualParamsList]
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 treci
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ActualParamsList]
                      ) [ActPars]
                    ) [FactorFuncCall]
                  ) [FactorTerm]
                ) [PosTermExpr]
              ) [AssignExpr]
            ) [DesigStmtActions]
          ) [DesignatorStmt]
        ) [Statements]
        ReturnExpr(
          PosTermExpr(
            FactorTerm(
              NumFactor(
               2
              ) [NumFactor]
            ) [FactorTerm]
          ) [PosTermExpr]
        ) [ReturnExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:40:26,289 - Deklarisana promenljiva Unpacking::a na liniji 6
INFO  23:40:26,290 - Deklarisana promenljiva Unpacking::b na liniji 6
INFO  23:40:26,290 - Deklarisana promenljiva Unpacking::niz na liniji 7
INFO  23:40:26,291 - Deklarisana promenljiva Unpacking::arr na liniji 8
INFO  23:40:26,291 - Deklarisana promenljiva Unpacking::buarr na liniji 9
INFO  23:40:26,291 - Obradjuje se funkcija main na liniji 11
INFO  23:40:26,292 - Deklarisana promenljiva nizic na liniji 16
INFO  23:40:26,293 - Deklarisana konstanta ok na liniji 17
INFO  23:40:26,294 - Deklarisana promenljiva pokusaj na liniji 18
INFO  23:40:26,294 - Deklarisana promenljiva dd na liniji 19
INFO  23:40:26,294 - Deklarisana promenljiva slovo na liniji 20
INFO  23:40:26,294 - Obradjuje se funkcija funkcija na liniji 23
INFO  23:40:26,295 - Deklarisana promenljiva c na liniji 23
INFO  23:40:26,296 - Deklarisana promenljiva d na liniji 23
INFO  23:40:26,297 - Pretraga na 25(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 25
INFO  23:40:26,302 - Pretraga na 26(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 26
INFO  23:40:26,303 - Pretraga na 29(Unpacking::niz), nadjeno Var Unpacking::niz: Arr of int, 2, 0  na liniji 29
INFO  23:40:26,303 - Obradjuje se funkcija testtest na liniji 38
INFO  23:40:26,304 - Deklarisan parametar param1 metode: testtest. na liniji 38
INFO  23:40:26,305 - Deklarisan parametar param2 metode: testtest. na liniji 38
INFO  23:40:26,307 - Deklarisan parametar param3 metode: testtest. na liniji 38
INFO  23:40:26,309 - Deklarisana promenljiva c na liniji 38
INFO  23:40:26,311 - Deklarisana promenljiva d na liniji 38
INFO  23:40:26,312 - Obradjuje se funkcija test na liniji 42
INFO  23:40:26,314 - Deklarisana promenljiva c na liniji 42
INFO  23:40:26,321 - Obradjuje se funkcija main na liniji 61
INFO  23:40:26,323 - Deklarisana promenljiva prvi na liniji 62
INFO  23:40:26,323 - Deklarisana promenljiva drugi na liniji 62
INFO  23:40:26,324 - Deklarisana promenljiva treci na liniji 63
ERROR 23:40:26,325 - Greska na liniji 65broj stvarnih parametara je manji od broja formalnih parametara!
ERROR 23:40:26,325 - Greska na liniji 65src i dst nisu kompatibilni pri dodeli! 
INFO  23:40:26,326 -  Print count calls = 0
INFO  23:40:26,327 -  Deklarisanih promenljivih ima = 0
INFO  23:40:26,330 - Neuspesna semanticka analiza!!
