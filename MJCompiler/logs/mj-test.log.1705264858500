INFO  21:37:22,469 - Compiling source file: C:\Users\Zoki\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  21:37:22,538 - #2 program
INFO  21:37:22,538 - #47 test302
INFO  21:37:22,538 - #17 namespace
INFO  21:37:22,541 - #47 Addition
INFO  21:37:22,541 - #42 {
INFO  21:37:22,543 - #42 {
INFO  21:37:22,545 - #47 int
INFO  21:37:22,546 - #47 sum
INFO  21:37:22,547 - #38 (
INFO  21:37:22,548 - #47 int
INFO  21:37:22,548 - #47 z
INFO  21:37:22,548 - #36 ,
INFO  21:37:22,549 - #47 int
INFO  21:37:22,549 - #47 d
INFO  21:37:22,549 - #39 )
INFO  21:37:22,549 - #42 {
INFO  21:37:22,550 - #11 return
INFO  21:37:22,551 - #47 z
INFO  21:37:22,551 - #18 +
INFO  21:37:22,552 - #47 d
INFO  21:37:22,554 - #34 ;
INFO  21:37:22,554 - #43 }
INFO  21:37:22,555 - #47 int
INFO  21:37:22,556 - #47 inkrement
INFO  21:37:22,556 - #38 (
INFO  21:37:22,556 - #47 int
INFO  21:37:22,556 - #47 a
INFO  21:37:22,557 - #36 ,
INFO  21:37:22,557 - #47 int
INFO  21:37:22,557 - #47 inc
INFO  21:37:22,557 - #39 )
INFO  21:37:22,557 - #47 int
INFO  21:37:22,557 - #47 pom
INFO  21:37:22,557 - #34 ;
INFO  21:37:22,558 - #42 {
INFO  21:37:22,558 - #7 if
INFO  21:37:22,558 - #38 (
INFO  21:37:22,558 - #47 inc
INFO  21:37:22,559 - #23 ==
INFO  21:37:22,560 - #46 1
INFO  21:37:22,563 - #39 )
INFO  21:37:22,564 - #47 pom
INFO  21:37:22,565 - #31 =
INFO  21:37:22,566 - #46 1
INFO  21:37:22,566 - #34 ;
INFO  21:37:22,567 - #5 else
INFO  21:37:22,568 - #7 if
INFO  21:37:22,568 - #38 (
INFO  21:37:22,568 - #47 inc
INFO  21:37:22,569 - #23 ==
INFO  21:37:22,569 - #46 2
INFO  21:37:22,570 - #39 )
INFO  21:37:22,570 - #47 pom
INFO  21:37:22,570 - #31 =
INFO  21:37:22,570 - #47 a
INFO  21:37:22,571 - #34 ;
INFO  21:37:22,571 - #11 return
INFO  21:37:22,573 - #47 sum
INFO  21:37:22,573 - #38 (
INFO  21:37:22,573 - #47 a
INFO  21:37:22,573 - #36 ,
INFO  21:37:22,574 - #47 pom
INFO  21:37:22,574 - #39 )
INFO  21:37:22,574 - #34 ;
INFO  21:37:22,575 - #43 }
INFO  21:37:22,575 - #43 }
INFO  21:37:22,575 - #43 }
INFO  21:37:22,575 - #17 namespace
INFO  21:37:22,577 - #47 Unpacking
INFO  21:37:22,578 - #42 {
INFO  21:37:22,578 - #47 int
INFO  21:37:22,578 - #47 niz
INFO  21:37:22,578 - #40 [
INFO  21:37:22,578 - #41 ]
INFO  21:37:22,578 - #36 ,
INFO  21:37:22,579 - #47 niz2
INFO  21:37:22,579 - #40 [
INFO  21:37:22,579 - #41 ]
INFO  21:37:22,579 - #36 ,
INFO  21:37:22,579 - #47 niz3
INFO  21:37:22,579 - #40 [
INFO  21:37:22,579 - #41 ]
INFO  21:37:22,580 - #34 ;
INFO  21:37:22,580 - #47 int
INFO  21:37:22,580 - #47 a
INFO  21:37:22,580 - #36 ,
INFO  21:37:22,581 - #47 b
INFO  21:37:22,581 - #34 ;
INFO  21:37:22,581 - #42 {
INFO  21:37:22,581 - #43 }
INFO  21:37:22,583 - #43 }
INFO  21:37:22,583 - #47 int
INFO  21:37:22,584 - #47 i
INFO  21:37:22,584 - #34 ;
INFO  21:37:22,584 - #47 bool
INFO  21:37:22,585 - #47 ibool
INFO  21:37:22,585 - #34 ;
INFO  21:37:22,585 - #47 int
INFO  21:37:22,585 - #47 niz2
INFO  21:37:22,586 - #34 ;
INFO  21:37:22,586 - #47 int
INFO  21:37:22,586 - #47 niz
INFO  21:37:22,586 - #40 [
INFO  21:37:22,586 - #41 ]
INFO  21:37:22,586 - #34 ;
INFO  21:37:22,587 - #47 int
INFO  21:37:22,587 - #47 a
INFO  21:37:22,587 - #36 ,
INFO  21:37:22,587 - #47 curr
INFO  21:37:22,587 - #34 ;
INFO  21:37:22,587 - #42 {
INFO  21:37:22,588 - #47 bool
INFO  21:37:22,588 - #47 verify
INFO  21:37:22,588 - #38 (
INFO  21:37:22,588 - #39 )
INFO  21:37:22,589 - #42 {
INFO  21:37:22,589 - #9 print
INFO  21:37:22,589 - #38 (
INFO  21:37:22,590 - #49 v
INFO  21:37:22,590 - #39 )
INFO  21:37:22,591 - #34 ;
INFO  21:37:22,591 - #11 return
INFO  21:37:22,592 - #48 false
INFO  21:37:22,592 - #34 ;
INFO  21:37:22,593 - #43 }
INFO  21:37:22,593 - #12 void
INFO  21:37:22,594 - #47 main
INFO  21:37:22,595 - #38 (
INFO  21:37:22,595 - #39 )
INFO  21:37:22,595 - #42 {
INFO  21:37:22,595 - #7 if
INFO  21:37:22,595 - #38 (
INFO  21:37:22,595 - #46 1
INFO  21:37:22,595 - #24 !=
INFO  21:37:22,595 - #46 1
INFO  21:37:22,596 - #39 )
INFO  21:37:22,596 - #9 print
INFO  21:37:22,597 - #38 (
INFO  21:37:22,597 - #19 -
INFO  21:37:22,597 - #46 6
INFO  21:37:22,597 - #39 )
INFO  21:37:22,597 - #34 ;
INFO  21:37:22,597 - #5 else
INFO  21:37:22,597 - #9 print
INFO  21:37:22,597 - #38 (
INFO  21:37:22,597 - #46 0
INFO  21:37:22,598 - #39 )
INFO  21:37:22,598 - #34 ;
INFO  21:37:22,598 - #47 ibool
INFO  21:37:22,598 - #31 =
INFO  21:37:22,598 - #48 false
INFO  21:37:22,598 - #34 ;
INFO  21:37:22,598 - #15 for
INFO  21:37:22,598 - #38 (
INFO  21:37:22,598 - #47 i
INFO  21:37:22,598 - #31 =
INFO  21:37:22,598 - #46 0
INFO  21:37:22,599 - #34 ;
INFO  21:37:22,599 - #47 i
INFO  21:37:22,599 - #27 <
INFO  21:37:22,599 - #46 5
INFO  21:37:22,600 - #34 ;
INFO  21:37:22,601 - #47 i
INFO  21:37:22,601 - #32 ++
INFO  21:37:22,601 - #39 )
INFO  21:37:22,602 - #42 {
INFO  21:37:22,602 - #7 if
INFO  21:37:22,602 - #38 (
INFO  21:37:22,603 - #47 i
INFO  21:37:22,603 - #23 ==
INFO  21:37:22,603 - #46 2
INFO  21:37:22,603 - #39 )
INFO  21:37:22,603 - #47 ibool
INFO  21:37:22,603 - #31 =
INFO  21:37:22,603 - #48 true
INFO  21:37:22,603 - #34 ;
INFO  21:37:22,603 - #43 }
INFO  21:37:22,604 - #7 if
INFO  21:37:22,605 - #38 (
INFO  21:37:22,605 - #47 ibool
INFO  21:37:22,605 - #39 )
INFO  21:37:22,605 - #7 if
INFO  21:37:22,605 - #38 (
INFO  21:37:22,605 - #47 i
INFO  21:37:22,605 - #23 ==
INFO  21:37:22,606 - #46 5
INFO  21:37:22,606 - #39 )
INFO  21:37:22,606 - #9 print
INFO  21:37:22,606 - #38 (
INFO  21:37:22,606 - #46 1
INFO  21:37:22,606 - #39 )
INFO  21:37:22,606 - #34 ;
INFO  21:37:22,606 - #5 else
INFO  21:37:22,606 - #9 print
INFO  21:37:22,607 - #38 (
INFO  21:37:22,607 - #19 -
INFO  21:37:22,607 - #46 1
INFO  21:37:22,607 - #39 )
INFO  21:37:22,607 - #34 ;
INFO  21:37:22,607 - #47 a
INFO  21:37:22,608 - #31 =
INFO  21:37:22,608 - #46 2
INFO  21:37:22,608 - #34 ;
INFO  21:37:22,608 - #47 niz
INFO  21:37:22,608 - #31 =
INFO  21:37:22,608 - #8 new
INFO  21:37:22,609 - #47 int
INFO  21:37:22,609 - #40 [
INFO  21:37:22,610 - #46 3
INFO  21:37:22,610 - #41 ]
INFO  21:37:22,611 - #34 ;
INFO  21:37:22,611 - #47 niz
INFO  21:37:22,611 - #40 [
INFO  21:37:22,611 - #46 0
INFO  21:37:22,611 - #41 ]
INFO  21:37:22,611 - #31 =
INFO  21:37:22,612 - #46 1
INFO  21:37:22,612 - #20 *
INFO  21:37:22,612 - #47 a
INFO  21:37:22,613 - #34 ;
INFO  21:37:22,614 - #47 niz
INFO  21:37:22,614 - #40 [
INFO  21:37:22,614 - #46 1
INFO  21:37:22,614 - #41 ]
INFO  21:37:22,614 - #31 =
INFO  21:37:22,614 - #46 2
INFO  21:37:22,614 - #20 *
INFO  21:37:22,614 - #47 a
INFO  21:37:22,614 - #34 ;
INFO  21:37:22,615 - #47 niz
INFO  21:37:22,615 - #40 [
INFO  21:37:22,615 - #46 2
INFO  21:37:22,615 - #41 ]
INFO  21:37:22,615 - #31 =
INFO  21:37:22,615 - #47 Addition
INFO  21:37:22,615 - #45 ::
INFO  21:37:22,615 - #47 sum
INFO  21:37:22,615 - #38 (
INFO  21:37:22,616 - #47 niz
INFO  21:37:22,616 - #40 [
INFO  21:37:22,616 - #46 1
INFO  21:37:22,616 - #41 ]
INFO  21:37:22,616 - #36 ,
INFO  21:37:22,616 - #47 niz
INFO  21:37:22,616 - #40 [
INFO  21:37:22,616 - #46 0
INFO  21:37:22,616 - #41 ]
INFO  21:37:22,616 - #39 )
INFO  21:37:22,617 - #20 *
INFO  21:37:22,617 - #47 a
INFO  21:37:22,617 - #18 +
INFO  21:37:22,617 - #46 1
INFO  21:37:22,617 - #34 ;
INFO  21:37:22,617 - #7 if
INFO  21:37:22,618 - #38 (
INFO  21:37:22,618 - #47 verify
INFO  21:37:22,619 - #38 (
INFO  21:37:22,619 - #39 )
INFO  21:37:22,620 - #30 ||
INFO  21:37:22,620 - #47 niz
INFO  21:37:22,620 - #40 [
INFO  21:37:22,621 - #46 2
INFO  21:37:22,621 - #41 ]
INFO  21:37:22,621 - #23 ==
INFO  21:37:22,621 - #46 4
INFO  21:37:22,621 - #39 )
INFO  21:37:22,621 - #9 print
INFO  21:37:22,621 - #38 (
INFO  21:37:22,622 - #47 ord
INFO  21:37:22,622 - #38 (
INFO  21:37:22,622 - #49 A
INFO  21:37:22,622 - #39 )
INFO  21:37:22,622 - #39 )
INFO  21:37:22,622 - #34 ;
INFO  21:37:22,622 - #5 else
INFO  21:37:22,622 - #9 print
INFO  21:37:22,623 - #38 (
INFO  21:37:22,623 - #47 ord
INFO  21:37:22,623 - #38 (
INFO  21:37:22,623 - #49 a
INFO  21:37:22,623 - #39 )
INFO  21:37:22,623 - #39 )
INFO  21:37:22,623 - #34 ;
INFO  21:37:22,623 - #9 print
INFO  21:37:22,624 - #38 (
INFO  21:37:22,624 - #47 eol
INFO  21:37:22,624 - #39 )
INFO  21:37:22,624 - #34 ;
INFO  21:37:22,624 - #15 for
INFO  21:37:22,624 - #38 (
INFO  21:37:22,624 - #47 i
INFO  21:37:22,624 - #31 =
INFO  21:37:22,625 - #46 0
INFO  21:37:22,625 - #34 ;
INFO  21:37:22,625 - #47 i
INFO  21:37:22,625 - #27 <
INFO  21:37:22,625 - #46 10
INFO  21:37:22,625 - #34 ;
INFO  21:37:22,625 - #39 )
INFO  21:37:22,628 - #42 {
INFO  21:37:22,628 - #7 if
INFO  21:37:22,628 - #38 (
INFO  21:37:22,628 - #47 i
INFO  21:37:22,628 - #23 ==
INFO  21:37:22,628 - #46 3
INFO  21:37:22,628 - #39 )
INFO  21:37:22,629 - #42 {
INFO  21:37:22,629 - #47 i
INFO  21:37:22,629 - #32 ++
INFO  21:37:22,629 - #34 ;
INFO  21:37:22,629 - #14 continue
INFO  21:37:22,629 - #34 ;
INFO  21:37:22,629 - #43 }
INFO  21:37:22,630 - #7 if
INFO  21:37:22,630 - #38 (
INFO  21:37:22,630 - #47 i
INFO  21:37:22,631 - #23 ==
INFO  21:37:22,631 - #46 4
INFO  21:37:22,631 - #39 )
INFO  21:37:22,631 - #3 break
INFO  21:37:22,631 - #34 ;
INFO  21:37:22,631 - #47 i
INFO  21:37:22,633 - #31 =
INFO  21:37:22,633 - #47 Addition
INFO  21:37:22,634 - #45 ::
INFO  21:37:22,634 - #47 inkrement
INFO  21:37:22,634 - #38 (
INFO  21:37:22,634 - #47 i
INFO  21:37:22,634 - #36 ,
INFO  21:37:22,635 - #46 1
INFO  21:37:22,635 - #39 )
INFO  21:37:22,635 - #34 ;
INFO  21:37:22,635 - #43 }
INFO  21:37:22,635 - #43 }
INFO  21:37:22,635 - #43 }
INFO  21:37:22,646 - Program(
  ProgName(
   test302
  ) [ProgName]
  NamespaceList(
    NamespaceList(
      NoNamespaceList(
      ) [NoNamespaceList]
      Namespace(
        NamespaceName(
         Addition
        ) [NamespaceName]
        NoNamespaceDecls(
        ) [NoNamespaceDecls]
        MethodDeclarations(
          MethodDeclarations(
            NoMethodDecl(
            ) [NoMethodDecl]
            MethodDecl(
              MethodTypeName(
                MethRetType(
                  Type(
                   int
                  ) [Type]
                ) [MethRetType]
               sum
              ) [MethodTypeName]
              FormParams(
                FormCommaParamDecl(
                  FormParamDecl(
                    FormParamVar(
                      Type(
                       int
                      ) [Type]
                     z
                    ) [FormParamVar]
                  ) [FormParamDecl]
                  FormParamVar(
                    Type(
                     int
                    ) [Type]
                   d
                  ) [FormParamVar]
                ) [FormCommaParamDecl]
              ) [FormParams]
              NoMethVar(
              ) [NoMethVar]
              Statements(
                NoStmt(
                ) [NoStmt]
                ReturnExpr(
                  AddExpr(
                    PosTermExpr(
                      FactorTerm(
                        VarFactor(
                          DesigVar(
                           z
                          ) [DesigVar]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [PosTermExpr]
                    Add(
                    ) [Add]
                    FactorTerm(
                      VarFactor(
                        DesigVar(
                         d
                        ) [DesigVar]
                      ) [VarFactor]
                    ) [FactorTerm]
                  ) [AddExpr]
                ) [ReturnExpr]
              ) [Statements]
            ) [MethodDecl]
          ) [MethodDeclarations]
          MethodDecl(
            MethodTypeName(
              MethRetType(
                Type(
                 int
                ) [Type]
              ) [MethRetType]
             inkrement
            ) [MethodTypeName]
            FormParams(
              FormCommaParamDecl(
                FormParamDecl(
                  FormParamVar(
                    Type(
                     int
                    ) [Type]
                   a
                  ) [FormParamVar]
                ) [FormParamDecl]
                FormParamVar(
                  Type(
                   int
                  ) [Type]
                 inc
                ) [FormParamVar]
              ) [FormCommaParamDecl]
            ) [FormParams]
            MethodVars(
              NoMethVar(
              ) [NoMethVar]
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarNameDecl(
                 pom
                ) [VarNameDecl]
              ) [SingleVarDecl]
            ) [MethodVars]
            Statements(
              Statements(
                NoStmt(
                ) [NoStmt]
                IfElseStmt(
                  ConditionCondTerm(
                    CondTermFact(
                      RelOpCondFact(
                        PosTermExpr(
                          FactorTerm(
                            VarFactor(
                              DesigVar(
                               inc
                              ) [DesigVar]
                            ) [VarFactor]
                          ) [FactorTerm]
                        ) [PosTermExpr]
                        EqlOp(
                        ) [EqlOp]
                        PosTermExpr(
                          FactorTerm(
                            NumFactor(
                             1
                            ) [NumFactor]
                          ) [FactorTerm]
                        ) [PosTermExpr]
                      ) [RelOpCondFact]
                    ) [CondTermFact]
                  ) [ConditionCondTerm]
                  IfStatement(
                    DesignatorStmt(
                      DesigStmtActions(
                        DesigVar(
                         pom
                        ) [DesigVar]
                        AssignExpr(
                          PosTermExpr(
                            FactorTerm(
                              NumFactor(
                               1
                              ) [NumFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [AssignExpr]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [IfStatement]
                  ElseStatement(
                    IfStmt(
                      ConditionCondTerm(
                        CondTermFact(
                          RelOpCondFact(
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  DesigVar(
                                   inc
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                            EqlOp(
                            ) [EqlOp]
                            PosTermExpr(
                              FactorTerm(
                                NumFactor(
                                 2
                                ) [NumFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                          ) [RelOpCondFact]
                        ) [CondTermFact]
                      ) [ConditionCondTerm]
                      IfStatement(
                        DesignatorStmt(
                          DesigStmtActions(
                            DesigVar(
                             pom
                            ) [DesigVar]
                            AssignExpr(
                              PosTermExpr(
                                FactorTerm(
                                  VarFactor(
                                    DesigVar(
                                     a
                                    ) [DesigVar]
                                  ) [VarFactor]
                                ) [FactorTerm]
                              ) [PosTermExpr]
                            ) [AssignExpr]
                          ) [DesigStmtActions]
                        ) [DesignatorStmt]
                      ) [IfStatement]
                    ) [IfStmt]
                  ) [ElseStatement]
                ) [IfElseStmt]
              ) [Statements]
              ReturnExpr(
                PosTermExpr(
                  FactorTerm(
                    FactorFuncCall(
                      DesigVar(
                       sum
                      ) [DesigVar]
                      ActPars(
                        ActualParamsList(
                          ActualParam(
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  DesigVar(
                                   a
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                          ) [ActualParam]
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 pom
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [ActualParamsList]
                      ) [ActPars]
                    ) [FactorFuncCall]
                  ) [FactorTerm]
                ) [PosTermExpr]
              ) [ReturnExpr]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDeclarations]
      ) [Namespace]
    ) [NamespaceList]
    Namespace(
      NamespaceName(
       Unpacking
      ) [NamespaceName]
      NamespaceDecls(
        NamespaceDecls(
          NoNamespaceDecls(
          ) [NoNamespaceDecls]
          NamespaceVarDecl(
            Type(
             int
            ) [Type]
            MultipleVarDecls(
              MultipleVarDecls(
                SingleVarDecl(
                  VarArrayNameDecl(
                   niz
                  ) [VarArrayNameDecl]
                ) [SingleVarDecl]
                VarArrayNameDecl(
                 niz2
                ) [VarArrayNameDecl]
              ) [MultipleVarDecls]
              VarArrayNameDecl(
               niz3
              ) [VarArrayNameDecl]
            ) [MultipleVarDecls]
          ) [NamespaceVarDecl]
        ) [NamespaceDecls]
        NamespaceVarDecl(
          Type(
           int
          ) [Type]
          MultipleVarDecls(
            SingleVarDecl(
              VarNameDecl(
               a
              ) [VarNameDecl]
            ) [SingleVarDecl]
            VarNameDecl(
             b
            ) [VarNameDecl]
          ) [MultipleVarDecls]
        ) [NamespaceVarDecl]
      ) [NamespaceDecls]
      NoMethodDecl(
      ) [NoMethodDecl]
    ) [Namespace]
  ) [NamespaceList]
  ProgramDecls(
    ProgramDecls(
      ProgramDecls(
        ProgramDecls(
          ProgramDecls(
            NoProgramDecls(
            ) [NoProgramDecls]
            ProgramVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarNameDecl(
                 i
                ) [VarNameDecl]
              ) [SingleVarDecl]
            ) [ProgramVarDecl]
          ) [ProgramDecls]
          ProgramVarDecl(
            Type(
             bool
            ) [Type]
            SingleVarDecl(
              VarNameDecl(
               ibool
              ) [VarNameDecl]
            ) [SingleVarDecl]
          ) [ProgramVarDecl]
        ) [ProgramDecls]
        ProgramVarDecl(
          Type(
           int
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             niz2
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [ProgramVarDecl]
      ) [ProgramDecls]
      ProgramVarDecl(
        Type(
         int
        ) [Type]
        SingleVarDecl(
          VarArrayNameDecl(
           niz
          ) [VarArrayNameDecl]
        ) [SingleVarDecl]
      ) [ProgramVarDecl]
    ) [ProgramDecls]
    ProgramVarDecl(
      Type(
       int
      ) [Type]
      MultipleVarDecls(
        SingleVarDecl(
          VarNameDecl(
           a
          ) [VarNameDecl]
        ) [SingleVarDecl]
        VarNameDecl(
         curr
        ) [VarNameDecl]
      ) [MultipleVarDecls]
    ) [ProgramVarDecl]
  ) [ProgramDecls]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeName(
          MethRetType(
            Type(
             bool
            ) [Type]
          ) [MethRetType]
         verify
        ) [MethodTypeName]
        NoFormParam(
        ) [NoFormParam]
        NoMethVar(
        ) [NoMethVar]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            PrintStmt(
              PosTermExpr(
                FactorTerm(
                  CharFactor(
                   v
                  ) [CharFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
              NoPrintVar(
              ) [NoPrintVar]
            ) [PrintStmt]
          ) [Statements]
          ReturnExpr(
            PosTermExpr(
              FactorTerm(
                BoolFactor(
                 false
                ) [BoolFactor]
              ) [FactorTerm]
            ) [PosTermExpr]
          ) [ReturnExpr]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        MethRetVoid(
        ) [MethRetVoid]
       main
      ) [MethodTypeName]
      NoFormParam(
      ) [NoFormParam]
      NoMethVar(
      ) [NoMethVar]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              NoStmt(
                              ) [NoStmt]
                              IfElseStmt(
                                ConditionCondTerm(
                                  CondTermFact(
                                    RelOpCondFact(
                                      PosTermExpr(
                                        FactorTerm(
                                          NumFactor(
                                           1
                                          ) [NumFactor]
                                        ) [FactorTerm]
                                      ) [PosTermExpr]
                                      NotEqlOp(
                                      ) [NotEqlOp]
                                      PosTermExpr(
                                        FactorTerm(
                                          NumFactor(
                                           1
                                          ) [NumFactor]
                                        ) [FactorTerm]
                                      ) [PosTermExpr]
                                    ) [RelOpCondFact]
                                  ) [CondTermFact]
                                ) [ConditionCondTerm]
                                IfStatement(
                                  PrintStmt(
                                    NegTermExpr(
                                      FactorTerm(
                                        NumFactor(
                                         6
                                        ) [NumFactor]
                                      ) [FactorTerm]
                                    ) [NegTermExpr]
                                    NoPrintVar(
                                    ) [NoPrintVar]
                                  ) [PrintStmt]
                                ) [IfStatement]
                                ElseStatement(
                                  PrintStmt(
                                    PosTermExpr(
                                      FactorTerm(
                                        NumFactor(
                                         0
                                        ) [NumFactor]
                                      ) [FactorTerm]
                                    ) [PosTermExpr]
                                    NoPrintVar(
                                    ) [NoPrintVar]
                                  ) [PrintStmt]
                                ) [ElseStatement]
                              ) [IfElseStmt]
                            ) [Statements]
                            DesignatorStmt(
                              DesigStmtActions(
                                DesigVar(
                                 ibool
                                ) [DesigVar]
                                AssignExpr(
                                  PosTermExpr(
                                    FactorTerm(
                                      BoolFactor(
                                       false
                                      ) [BoolFactor]
                                    ) [FactorTerm]
                                  ) [PosTermExpr]
                                ) [AssignExpr]
                              ) [DesigStmtActions]
                            ) [DesignatorStmt]
                          ) [Statements]
                          ForLoop(
                            ForDesigStmts(
                              SingleDesignatorStmt(
                                DesigStmtActions(
                                  DesigVar(
                                   i
                                  ) [DesigVar]
                                  AssignExpr(
                                    PosTermExpr(
                                      FactorTerm(
                                        NumFactor(
                                         0
                                        ) [NumFactor]
                                      ) [FactorTerm]
                                    ) [PosTermExpr]
                                  ) [AssignExpr]
                                ) [DesigStmtActions]
                              ) [SingleDesignatorStmt]
                            ) [ForDesigStmts]
                            ForCondFactExpr(
                              RelOpCondFact(
                                PosTermExpr(
                                  FactorTerm(
                                    VarFactor(
                                      DesigVar(
                                       i
                                      ) [DesigVar]
                                    ) [VarFactor]
                                  ) [FactorTerm]
                                ) [PosTermExpr]
                                LssOp(
                                ) [LssOp]
                                PosTermExpr(
                                  FactorTerm(
                                    NumFactor(
                                     5
                                    ) [NumFactor]
                                  ) [FactorTerm]
                                ) [PosTermExpr]
                              ) [RelOpCondFact]
                            ) [ForCondFactExpr]
                            ForLoopStmts(
                              ForDesigStmts(
                                SingleDesignatorStmt(
                                  DesigStmtActions(
                                    DesigVar(
                                     i
                                    ) [DesigVar]
                                    DesigInc(
                                    ) [DesigInc]
                                  ) [DesigStmtActions]
                                ) [SingleDesignatorStmt]
                              ) [ForDesigStmts]
                            ) [ForLoopStmts]
                            ForLoopBody(
                              ComplexStm(
                                Statements(
                                  NoStmt(
                                  ) [NoStmt]
                                  IfStmt(
                                    ConditionCondTerm(
                                      CondTermFact(
                                        RelOpCondFact(
                                          PosTermExpr(
                                            FactorTerm(
                                              VarFactor(
                                                DesigVar(
                                                 i
                                                ) [DesigVar]
                                              ) [VarFactor]
                                            ) [FactorTerm]
                                          ) [PosTermExpr]
                                          EqlOp(
                                          ) [EqlOp]
                                          PosTermExpr(
                                            FactorTerm(
                                              NumFactor(
                                               2
                                              ) [NumFactor]
                                            ) [FactorTerm]
                                          ) [PosTermExpr]
                                        ) [RelOpCondFact]
                                      ) [CondTermFact]
                                    ) [ConditionCondTerm]
                                    IfStatement(
                                      DesignatorStmt(
                                        DesigStmtActions(
                                          DesigVar(
                                           ibool
                                          ) [DesigVar]
                                          AssignExpr(
                                            PosTermExpr(
                                              FactorTerm(
                                                BoolFactor(
                                                 true
                                                ) [BoolFactor]
                                              ) [FactorTerm]
                                            ) [PosTermExpr]
                                          ) [AssignExpr]
                                        ) [DesigStmtActions]
                                      ) [DesignatorStmt]
                                    ) [IfStatement]
                                  ) [IfStmt]
                                ) [Statements]
                              ) [ComplexStm]
                            ) [ForLoopBody]
                          ) [ForLoop]
                        ) [Statements]
                        IfStmt(
                          ConditionCondTerm(
                            CondTermFact(
                              CondFactExpr(
                                PosTermExpr(
                                  FactorTerm(
                                    VarFactor(
                                      DesigVar(
                                       ibool
                                      ) [DesigVar]
                                    ) [VarFactor]
                                  ) [FactorTerm]
                                ) [PosTermExpr]
                              ) [CondFactExpr]
                            ) [CondTermFact]
                          ) [ConditionCondTerm]
                          IfStatement(
                            IfElseStmt(
                              ConditionCondTerm(
                                CondTermFact(
                                  RelOpCondFact(
                                    PosTermExpr(
                                      FactorTerm(
                                        VarFactor(
                                          DesigVar(
                                           i
                                          ) [DesigVar]
                                        ) [VarFactor]
                                      ) [FactorTerm]
                                    ) [PosTermExpr]
                                    EqlOp(
                                    ) [EqlOp]
                                    PosTermExpr(
                                      FactorTerm(
                                        NumFactor(
                                         5
                                        ) [NumFactor]
                                      ) [FactorTerm]
                                    ) [PosTermExpr]
                                  ) [RelOpCondFact]
                                ) [CondTermFact]
                              ) [ConditionCondTerm]
                              IfStatement(
                                PrintStmt(
                                  PosTermExpr(
                                    FactorTerm(
                                      NumFactor(
                                       1
                                      ) [NumFactor]
                                    ) [FactorTerm]
                                  ) [PosTermExpr]
                                  NoPrintVar(
                                  ) [NoPrintVar]
                                ) [PrintStmt]
                              ) [IfStatement]
                              ElseStatement(
                                PrintStmt(
                                  NegTermExpr(
                                    FactorTerm(
                                      NumFactor(
                                       1
                                      ) [NumFactor]
                                    ) [FactorTerm]
                                  ) [NegTermExpr]
                                  NoPrintVar(
                                  ) [NoPrintVar]
                                ) [PrintStmt]
                              ) [ElseStatement]
                            ) [IfElseStmt]
                          ) [IfStatement]
                        ) [IfStmt]
                      ) [Statements]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           a
                          ) [DesigVar]
                          AssignExpr(
                            PosTermExpr(
                              FactorTerm(
                                NumFactor(
                                 2
                                ) [NumFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                          ) [AssignExpr]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        DesigVar(
                         niz
                        ) [DesigVar]
                        AssignExpr(
                          PosTermExpr(
                            FactorTerm(
                              NewFactor(
                                Type(
                                 int
                                ) [Type]
                                PosTermExpr(
                                  FactorTerm(
                                    NumFactor(
                                     3
                                    ) [NumFactor]
                                  ) [FactorTerm]
                                ) [PosTermExpr]
                              ) [NewFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [AssignExpr]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    DesigStmtActions(
                      DesigArrayElem(
                       niz
                        PosTermExpr(
                          FactorTerm(
                            NumFactor(
                             0
                            ) [NumFactor]
                          ) [FactorTerm]
                        ) [PosTermExpr]
                      ) [DesigArrayElem]
                      AssignExpr(
                        PosTermExpr(
                          MulTerm(
                            FactorTerm(
                              NumFactor(
                               1
                              ) [NumFactor]
                            ) [FactorTerm]
                            Mul(
                            ) [Mul]
                            VarFactor(
                              DesigVar(
                               a
                              ) [DesigVar]
                            ) [VarFactor]
                          ) [MulTerm]
                        ) [PosTermExpr]
                      ) [AssignExpr]
                    ) [DesigStmtActions]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigArrayElem(
                     niz
                      PosTermExpr(
                        FactorTerm(
                          NumFactor(
                           1
                          ) [NumFactor]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [DesigArrayElem]
                    AssignExpr(
                      PosTermExpr(
                        MulTerm(
                          FactorTerm(
                            NumFactor(
                             2
                            ) [NumFactor]
                          ) [FactorTerm]
                          Mul(
                          ) [Mul]
                          VarFactor(
                            DesigVar(
                             a
                            ) [DesigVar]
                          ) [VarFactor]
                        ) [MulTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                DesigStmtActions(
                  DesigArrayElem(
                   niz
                    PosTermExpr(
                      FactorTerm(
                        NumFactor(
                         2
                        ) [NumFactor]
                      ) [FactorTerm]
                    ) [PosTermExpr]
                  ) [DesigArrayElem]
                  AssignExpr(
                    AddExpr(
                      PosTermExpr(
                        MulTerm(
                          FactorTerm(
                            FactorFuncCall(
                              ScopeDesigVar(
                               Addition
                               sum
                              ) [ScopeDesigVar]
                              ActPars(
                                ActualParamsList(
                                  ActualParam(
                                    PosTermExpr(
                                      FactorTerm(
                                        VarFactor(
                                          DesigArrayElem(
                                           niz
                                            PosTermExpr(
                                              FactorTerm(
                                                NumFactor(
                                                 1
                                                ) [NumFactor]
                                              ) [FactorTerm]
                                            ) [PosTermExpr]
                                          ) [DesigArrayElem]
                                        ) [VarFactor]
                                      ) [FactorTerm]
                                    ) [PosTermExpr]
                                  ) [ActualParam]
                                  PosTermExpr(
                                    FactorTerm(
                                      VarFactor(
                                        DesigArrayElem(
                                         niz
                                          PosTermExpr(
                                            FactorTerm(
                                              NumFactor(
                                               0
                                              ) [NumFactor]
                                            ) [FactorTerm]
                                          ) [PosTermExpr]
                                        ) [DesigArrayElem]
                                      ) [VarFactor]
                                    ) [FactorTerm]
                                  ) [PosTermExpr]
                                ) [ActualParamsList]
                              ) [ActPars]
                            ) [FactorFuncCall]
                          ) [FactorTerm]
                          Mul(
                          ) [Mul]
                          VarFactor(
                            DesigVar(
                             a
                            ) [DesigVar]
                          ) [VarFactor]
                        ) [MulTerm]
                      ) [PosTermExpr]
                      Add(
                      ) [Add]
                      FactorTerm(
                        NumFactor(
                         1
                        ) [NumFactor]
                      ) [FactorTerm]
                    ) [AddExpr]
                  ) [AssignExpr]
                ) [DesigStmtActions]
              ) [DesignatorStmt]
            ) [Statements]
            IfElseStmt(
              OrCondition(
                ConditionCondTerm(
                  CondTermFact(
                    CondFactExpr(
                      PosTermExpr(
                        FactorTerm(
                          FactorFuncCall(
                            DesigVar(
                             verify
                            ) [DesigVar]
                            NoActPars(
                            ) [NoActPars]
                          ) [FactorFuncCall]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [CondFactExpr]
                  ) [CondTermFact]
                ) [ConditionCondTerm]
                CondTermFact(
                  RelOpCondFact(
                    PosTermExpr(
                      FactorTerm(
                        VarFactor(
                          DesigArrayElem(
                           niz
                            PosTermExpr(
                              FactorTerm(
                                NumFactor(
                                 2
                                ) [NumFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                          ) [DesigArrayElem]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [PosTermExpr]
                    EqlOp(
                    ) [EqlOp]
                    PosTermExpr(
                      FactorTerm(
                        NumFactor(
                         4
                        ) [NumFactor]
                      ) [FactorTerm]
                    ) [PosTermExpr]
                  ) [RelOpCondFact]
                ) [CondTermFact]
              ) [OrCondition]
              IfStatement(
                PrintStmt(
                  PosTermExpr(
                    FactorTerm(
                      FactorFuncCall(
                        DesigVar(
                         ord
                        ) [DesigVar]
                        ActPars(
                          ActualParam(
                            PosTermExpr(
                              FactorTerm(
                                CharFactor(
                                 A
                                ) [CharFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                          ) [ActualParam]
                        ) [ActPars]
                      ) [FactorFuncCall]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                  NoPrintVar(
                  ) [NoPrintVar]
                ) [PrintStmt]
              ) [IfStatement]
              ElseStatement(
                PrintStmt(
                  PosTermExpr(
                    FactorTerm(
                      FactorFuncCall(
                        DesigVar(
                         ord
                        ) [DesigVar]
                        ActPars(
                          ActualParam(
                            PosTermExpr(
                              FactorTerm(
                                CharFactor(
                                 a
                                ) [CharFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                          ) [ActualParam]
                        ) [ActPars]
                      ) [FactorFuncCall]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                  NoPrintVar(
                  ) [NoPrintVar]
                ) [PrintStmt]
              ) [ElseStatement]
            ) [IfElseStmt]
          ) [Statements]
          PrintStmt(
            PosTermExpr(
              FactorTerm(
                VarFactor(
                  DesigVar(
                   eol
                  ) [DesigVar]
                ) [VarFactor]
              ) [FactorTerm]
            ) [PosTermExpr]
            NoPrintVar(
            ) [NoPrintVar]
          ) [PrintStmt]
        ) [Statements]
        ForLoop(
          ForDesigStmts(
            SingleDesignatorStmt(
              DesigStmtActions(
                DesigVar(
                 i
                ) [DesigVar]
                AssignExpr(
                  PosTermExpr(
                    FactorTerm(
                      NumFactor(
                       0
                      ) [NumFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                ) [AssignExpr]
              ) [DesigStmtActions]
            ) [SingleDesignatorStmt]
          ) [ForDesigStmts]
          ForCondFactExpr(
            RelOpCondFact(
              PosTermExpr(
                FactorTerm(
                  VarFactor(
                    DesigVar(
                     i
                    ) [DesigVar]
                  ) [VarFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
              LssOp(
              ) [LssOp]
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   10
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [RelOpCondFact]
          ) [ForCondFactExpr]
          ForLoopStmts(
            NoForDesigStmt(
            ) [NoForDesigStmt]
          ) [ForLoopStmts]
          ForLoopBody(
            ComplexStm(
              Statements(
                Statements(
                  Statements(
                    NoStmt(
                    ) [NoStmt]
                    IfStmt(
                      ConditionCondTerm(
                        CondTermFact(
                          RelOpCondFact(
                            PosTermExpr(
                              FactorTerm(
                                VarFactor(
                                  DesigVar(
                                   i
                                  ) [DesigVar]
                                ) [VarFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                            EqlOp(
                            ) [EqlOp]
                            PosTermExpr(
                              FactorTerm(
                                NumFactor(
                                 3
                                ) [NumFactor]
                              ) [FactorTerm]
                            ) [PosTermExpr]
                          ) [RelOpCondFact]
                        ) [CondTermFact]
                      ) [ConditionCondTerm]
                      IfStatement(
                        ComplexStm(
                          Statements(
                            Statements(
                              NoStmt(
                              ) [NoStmt]
                              DesignatorStmt(
                                DesigStmtActions(
                                  DesigVar(
                                   i
                                  ) [DesigVar]
                                  DesigInc(
                                  ) [DesigInc]
                                ) [DesigStmtActions]
                              ) [DesignatorStmt]
                            ) [Statements]
                            ContinueStmt(
                            ) [ContinueStmt]
                          ) [Statements]
                        ) [ComplexStm]
                      ) [IfStatement]
                    ) [IfStmt]
                  ) [Statements]
                  IfStmt(
                    ConditionCondTerm(
                      CondTermFact(
                        RelOpCondFact(
                          PosTermExpr(
                            FactorTerm(
                              VarFactor(
                                DesigVar(
                                 i
                                ) [DesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                          EqlOp(
                          ) [EqlOp]
                          PosTermExpr(
                            FactorTerm(
                              NumFactor(
                               4
                              ) [NumFactor]
                            ) [FactorTerm]
                          ) [PosTermExpr]
                        ) [RelOpCondFact]
                      ) [CondTermFact]
                    ) [ConditionCondTerm]
                    IfStatement(
                      BreakStmt(
                      ) [BreakStmt]
                    ) [IfStatement]
                  ) [IfStmt]
                ) [Statements]
                DesignatorStmt(
                  DesigStmtActions(
                    DesigVar(
                     i
                    ) [DesigVar]
                    AssignExpr(
                      PosTermExpr(
                        FactorTerm(
                          FactorFuncCall(
                            ScopeDesigVar(
                             Addition
                             inkrement
                            ) [ScopeDesigVar]
                            ActPars(
                              ActualParamsList(
                                ActualParam(
                                  PosTermExpr(
                                    FactorTerm(
                                      VarFactor(
                                        DesigVar(
                                         i
                                        ) [DesigVar]
                                      ) [VarFactor]
                                    ) [FactorTerm]
                                  ) [PosTermExpr]
                                ) [ActualParam]
                                PosTermExpr(
                                  FactorTerm(
                                    NumFactor(
                                     1
                                    ) [NumFactor]
                                  ) [FactorTerm]
                                ) [PosTermExpr]
                              ) [ActualParamsList]
                            ) [ActPars]
                          ) [FactorFuncCall]
                        ) [FactorTerm]
                      ) [PosTermExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
            ) [ComplexStm]
          ) [ForLoopBody]
        ) [ForLoop]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:37:22,654 - Obradjuje se funkcija sum na liniji 9
INFO  21:37:22,654 - Deklarisan parametar z metode: Addition::sum. na liniji 9
INFO  21:37:22,655 - Deklarisan parametar d metode: Addition::sum. na liniji 9
INFO  21:37:22,655 - Obradjuje se funkcija inkrement na liniji 15
INFO  21:37:22,655 - Deklarisan parametar a metode: Addition::inkrement. na liniji 15
INFO  21:37:22,655 - Deklarisan parametar inc metode: Addition::inkrement. na liniji 15
INFO  21:37:22,655 - Deklarisana promenljiva Addition::pom na liniji 16
INFO  21:37:22,667 - Deklarisana promenljiva Unpacking::niz na liniji 28
INFO  21:37:22,667 - Deklarisana promenljiva Unpacking::niz2 na liniji 28
INFO  21:37:22,667 - Deklarisana promenljiva Unpacking::niz3 na liniji 28
INFO  21:37:22,667 - Deklarisana promenljiva Unpacking::a na liniji 29
INFO  21:37:22,667 - Deklarisana promenljiva Unpacking::b na liniji 29
INFO  21:37:22,667 - Deklarisana promenljiva i na liniji 34
INFO  21:37:22,668 - Deklarisana promenljiva ibool na liniji 35
INFO  21:37:22,668 - Deklarisana promenljiva niz2 na liniji 37
INFO  21:37:22,668 - Deklarisana promenljiva niz na liniji 39
INFO  21:37:22,668 - Deklarisana promenljiva a na liniji 40
INFO  21:37:22,668 - Deklarisana promenljiva curr na liniji 40
INFO  21:37:22,668 - Obradjuje se funkcija verify na liniji 45
INFO  21:37:22,668 - Obradjuje se funkcija main na liniji 50
INFO  21:37:22,668 - Obradjuje se for petlja na liniji: 57 na liniji 57
INFO  21:37:22,669 - Pretraga na 66(niz), nadjeno Var niz: Arr of int, 8, 0  na liniji 66
INFO  21:37:22,669 - Pretraga na 67(niz), nadjeno Var niz: Arr of int, 8, 0  na liniji 67
INFO  21:37:22,669 - Pretraga na 68(niz), nadjeno Var niz: Arr of int, 8, 0  na liniji 68
INFO  21:37:22,669 - Pretraga na 68(niz), nadjeno Var niz: Arr of int, 8, 0  na liniji 68
INFO  21:37:22,669 - Pretraga na 68(niz), nadjeno Var niz: Arr of int, 8, 0  na liniji 68
INFO  21:37:22,670 - Pretraga na 69(niz), nadjeno Var niz: Arr of int, 8, 0  na liniji 69
INFO  21:37:22,670 - Obradjuje se for petlja na liniji: 73 na liniji 73
INFO  21:37:22,670 - Pronadjen continue na liniji: 0
INFO  21:37:22,670 - Pronadjen break na liniji: 0
INFO  21:37:22,670 -  Print count calls = 0
INFO  21:37:22,671 -  Deklarisanih promenljivih ima = 0
INFO  21:37:22,682 - Uspesna semanticka analiza!!
