INFO  20:46:24,353 - Compiling source file: C:\Users\Zoki\Desktop\pp1domaci\workspace\MJCompiler\test\program.mj
INFO  20:46:24,428 - #2 program
INFO  20:46:24,428 - #47 test302
INFO  20:46:24,429 - #17 namespace
INFO  20:46:24,431 - #47 Unpacking
INFO  20:46:24,431 - #42 {
INFO  20:46:24,433 - #47 int
INFO  20:46:24,434 - #47 a
INFO  20:46:24,436 - #36 ,
INFO  20:46:24,436 - #47 b
INFO  20:46:24,436 - #34 ;
INFO  20:46:24,437 - #47 int
INFO  20:46:24,437 - #47 niz
INFO  20:46:24,437 - #40 [
INFO  20:46:24,437 - #41 ]
INFO  20:46:24,438 - #34 ;
INFO  20:46:24,438 - #47 int
INFO  20:46:24,438 - #47 arr
INFO  20:46:24,438 - #40 [
INFO  20:46:24,438 - #41 ]
INFO  20:46:24,439 - #34 ;
INFO  20:46:24,439 - #47 bool
INFO  20:46:24,440 - #47 buarr
INFO  20:46:24,440 - #40 [
INFO  20:46:24,441 - #41 ]
INFO  20:46:24,441 - #34 ;
INFO  20:46:24,442 - #42 {
INFO  20:46:24,442 - #47 int
INFO  20:46:24,444 - #47 main
INFO  20:46:24,445 - #38 (
INFO  20:46:24,447 - #39 )
INFO  20:46:24,448 - #42 {
INFO  20:46:24,449 - #11 return
INFO  20:46:24,450 - #46 2
INFO  20:46:24,451 - #34 ;
INFO  20:46:24,451 - #43 }
INFO  20:46:24,452 - #43 }
INFO  20:46:24,453 - #43 }
INFO  20:46:24,454 - #47 int
INFO  20:46:24,456 - #47 nizic
INFO  20:46:24,457 - #40 [
INFO  20:46:24,457 - #41 ]
INFO  20:46:24,457 - #34 ;
INFO  20:46:24,457 - #6 const
INFO  20:46:24,458 - #47 bool
INFO  20:46:24,458 - #47 ok
INFO  20:46:24,458 - #31 =
INFO  20:46:24,459 - #48 false
INFO  20:46:24,459 - #34 ;
INFO  20:46:24,461 - #47 bool
INFO  20:46:24,462 - #47 pokusaj
INFO  20:46:24,462 - #34 ;
INFO  20:46:24,463 - #47 int
INFO  20:46:24,463 - #47 dd
INFO  20:46:24,463 - #34 ;
INFO  20:46:24,463 - #47 char
INFO  20:46:24,463 - #47 slovo
INFO  20:46:24,463 - #34 ;
INFO  20:46:24,464 - #42 {
INFO  20:46:24,464 - #12 void
INFO  20:46:24,464 - #47 funkcija
INFO  20:46:24,465 - #38 (
INFO  20:46:24,465 - #39 )
INFO  20:46:24,465 - #47 int
INFO  20:46:24,466 - #47 c
INFO  20:46:24,466 - #36 ,
INFO  20:46:24,466 - #47 d
INFO  20:46:24,466 - #34 ;
INFO  20:46:24,466 - #42 {
INFO  20:46:24,467 - #47 nizic
INFO  20:46:24,467 - #40 [
INFO  20:46:24,467 - #46 3
INFO  20:46:24,467 - #41 ]
INFO  20:46:24,467 - #32 ++
INFO  20:46:24,468 - #34 ;
INFO  20:46:24,469 - #47 nizic
INFO  20:46:24,469 - #40 [
INFO  20:46:24,469 - #46 3
INFO  20:46:24,469 - #41 ]
INFO  20:46:24,469 - #33 --
INFO  20:46:24,470 - #34 ;
INFO  20:46:24,470 - #47 dd
INFO  20:46:24,471 - #32 ++
INFO  20:46:24,471 - #34 ;
INFO  20:46:24,471 - #47 dd
INFO  20:46:24,471 - #33 --
INFO  20:46:24,471 - #34 ;
INFO  20:46:24,472 - #47 Unpacking
INFO  20:46:24,472 - #45 ::
INFO  20:46:24,472 - #47 niz
INFO  20:46:24,472 - #40 [
INFO  20:46:24,472 - #47 dd
INFO  20:46:24,474 - #41 ]
INFO  20:46:24,474 - #32 ++
INFO  20:46:24,475 - #34 ;
INFO  20:46:24,475 - #10 read
INFO  20:46:24,475 - #38 (
INFO  20:46:24,476 - #47 pokusaj
INFO  20:46:24,476 - #39 )
INFO  20:46:24,476 - #34 ;
INFO  20:46:24,476 - #10 read
INFO  20:46:24,477 - #38 (
INFO  20:46:24,477 - #47 Unpacking
INFO  20:46:24,478 - #45 ::
INFO  20:46:24,478 - #47 a
INFO  20:46:24,478 - #39 )
INFO  20:46:24,478 - #34 ;
INFO  20:46:24,478 - #9 print
INFO  20:46:24,479 - #38 (
INFO  20:46:24,479 - #46 3
INFO  20:46:24,479 - #36 ,
INFO  20:46:24,479 - #46 2
INFO  20:46:24,479 - #39 )
INFO  20:46:24,480 - #34 ;
INFO  20:46:24,480 - #43 }
INFO  20:46:24,480 - #47 bool
INFO  20:46:24,480 - #47 testtest
INFO  20:46:24,481 - #38 (
INFO  20:46:24,481 - #39 )
INFO  20:46:24,481 - #47 bool
INFO  20:46:24,481 - #47 c
INFO  20:46:24,481 - #36 ,
INFO  20:46:24,482 - #47 d
INFO  20:46:24,482 - #34 ;
INFO  20:46:24,482 - #42 {
INFO  20:46:24,482 - #11 return
INFO  20:46:24,483 - #47 c
INFO  20:46:24,483 - #34 ;
INFO  20:46:24,483 - #43 }
INFO  20:46:24,483 - #47 int
INFO  20:46:24,483 - #47 test
INFO  20:46:24,484 - #38 (
INFO  20:46:24,484 - #39 )
INFO  20:46:24,484 - #42 {
INFO  20:46:24,484 - #47 dd
INFO  20:46:24,484 - #31 =
INFO  20:46:24,484 - #47 Unpacking
INFO  20:46:24,484 - #45 ::
INFO  20:46:24,484 - #47 a
INFO  20:46:24,484 - #20 *
INFO  20:46:24,485 - #47 dd
INFO  20:46:24,486 - #34 ;
INFO  20:46:24,487 - #47 Unpacking
INFO  20:46:24,487 - #45 ::
INFO  20:46:24,487 - #47 a
INFO  20:46:24,487 - #31 =
INFO  20:46:24,487 - #47 Unpacking
INFO  20:46:24,488 - #45 ::
INFO  20:46:24,488 - #47 a
INFO  20:46:24,488 - #18 +
INFO  20:46:24,488 - #47 Unpacking
INFO  20:46:24,489 - #45 ::
INFO  20:46:24,489 - #47 a
INFO  20:46:24,489 - #20 *
INFO  20:46:24,490 - #47 dd
INFO  20:46:24,490 - #34 ;
INFO  20:46:24,490 - #47 Unpacking
INFO  20:46:24,490 - #45 ::
INFO  20:46:24,490 - #47 a
INFO  20:46:24,490 - #31 =
INFO  20:46:24,491 - #19 -
INFO  20:46:24,491 - #47 dd
INFO  20:46:24,491 - #34 ;
INFO  20:46:24,491 - #47 dd
INFO  20:46:24,491 - #31 =
INFO  20:46:24,491 - #46 3
INFO  20:46:24,492 - #34 ;
INFO  20:46:24,492 - #47 dd
INFO  20:46:24,492 - #31 =
INFO  20:46:24,492 - #19 -
INFO  20:46:24,492 - #46 9
INFO  20:46:24,492 - #34 ;
INFO  20:46:24,492 - #11 return
INFO  20:46:24,493 - #46 3
INFO  20:46:24,493 - #34 ;
INFO  20:46:24,493 - #43 }
INFO  20:46:24,494 - #43 }
INFO  20:46:24,502 - Program(
  ProgName(
   test302
  ) [ProgName]
  NamespaceList(
    NoNamespaceList(
    ) [NoNamespaceList]
    Namespace(
      NamespaceName(
       Unpacking
      ) [NamespaceName]
      NamespaceDecls(
        NamespaceDecls(
          NamespaceDecls(
            NamespaceDecls(
              NoNamespaceDecls(
              ) [NoNamespaceDecls]
              NamespaceVarDecl(
                Type(
                 int
                ) [Type]
                MultipleVarDecls(
                  SingleVarDecl(
                    VarNameDecl(
                     a
                    ) [VarNameDecl]
                  ) [SingleVarDecl]
                  VarNameDecl(
                   b
                  ) [VarNameDecl]
                ) [MultipleVarDecls]
              ) [NamespaceVarDecl]
            ) [NamespaceDecls]
            NamespaceVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 niz
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [NamespaceVarDecl]
          ) [NamespaceDecls]
          NamespaceVarDecl(
            Type(
             int
            ) [Type]
            SingleVarDecl(
              VarArrayNameDecl(
               arr
              ) [VarArrayNameDecl]
            ) [SingleVarDecl]
          ) [NamespaceVarDecl]
        ) [NamespaceDecls]
        NamespaceVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarArrayNameDecl(
             buarr
            ) [VarArrayNameDecl]
          ) [SingleVarDecl]
        ) [NamespaceVarDecl]
      ) [NamespaceDecls]
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDecl(
          MethodTypeName(
            MethRetType(
              Type(
               int
              ) [Type]
            ) [MethRetType]
           main
          ) [MethodTypeName]
          NoFormParam(
          ) [NoFormParam]
          NoMethVar(
          ) [NoMethVar]
          Statements(
            NoStmt(
            ) [NoStmt]
            ReturnExpr(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   2
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
    ) [Namespace]
  ) [NamespaceList]
  ProgramDecls(
    ProgramDecls(
      ProgramDecls(
        ProgramDecls(
          ProgramDecls(
            NoProgramDecls(
            ) [NoProgramDecls]
            ProgramVarDecl(
              Type(
               int
              ) [Type]
              SingleVarDecl(
                VarArrayNameDecl(
                 nizic
                ) [VarArrayNameDecl]
              ) [SingleVarDecl]
            ) [ProgramVarDecl]
          ) [ProgramDecls]
          ProgramConstDecl(
            Type(
             bool
            ) [Type]
            SingleConstDecl(
              ConstDecl(
               ok
                BoolConst(
                 false
                ) [BoolConst]
              ) [ConstDecl]
            ) [SingleConstDecl]
          ) [ProgramConstDecl]
        ) [ProgramDecls]
        ProgramVarDecl(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            VarNameDecl(
             pokusaj
            ) [VarNameDecl]
          ) [SingleVarDecl]
        ) [ProgramVarDecl]
      ) [ProgramDecls]
      ProgramVarDecl(
        Type(
         int
        ) [Type]
        SingleVarDecl(
          VarNameDecl(
           dd
          ) [VarNameDecl]
        ) [SingleVarDecl]
      ) [ProgramVarDecl]
    ) [ProgramDecls]
    ProgramVarDecl(
      Type(
       char
      ) [Type]
      SingleVarDecl(
        VarNameDecl(
         slovo
        ) [VarNameDecl]
      ) [SingleVarDecl]
    ) [ProgramVarDecl]
  ) [ProgramDecls]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDecl(
          MethodTypeName(
            MethRetVoid(
            ) [MethRetVoid]
           funkcija
          ) [MethodTypeName]
          NoFormParam(
          ) [NoFormParam]
          MethodVars(
            NoMethVar(
            ) [NoMethVar]
            Type(
             int
            ) [Type]
            MultipleVarDecls(
              SingleVarDecl(
                VarNameDecl(
                 c
                ) [VarNameDecl]
              ) [SingleVarDecl]
              VarNameDecl(
               d
              ) [VarNameDecl]
            ) [MultipleVarDecls]
          ) [MethodVars]
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          NoStmt(
                          ) [NoStmt]
                          DesignatorStmt(
                            DesigStmtActions(
                              DesigArray(
                               nizic
                                PosTermExpr(
                                  FactorTerm(
                                    NumFactor(
                                     3
                                    ) [NumFactor]
                                  ) [FactorTerm]
                                ) [PosTermExpr]
                              ) [DesigArray]
                              DesigInc(
                              ) [DesigInc]
                            ) [DesigStmtActions]
                          ) [DesignatorStmt]
                        ) [Statements]
                        DesignatorStmt(
                          DesigStmtActions(
                            DesigArray(
                             nizic
                              PosTermExpr(
                                FactorTerm(
                                  NumFactor(
                                   3
                                  ) [NumFactor]
                                ) [FactorTerm]
                              ) [PosTermExpr]
                            ) [DesigArray]
                            DesigDec(
                            ) [DesigDec]
                          ) [DesigStmtActions]
                        ) [DesignatorStmt]
                      ) [Statements]
                      DesignatorStmt(
                        DesigStmtActions(
                          DesigVar(
                           dd
                          ) [DesigVar]
                          DesigInc(
                          ) [DesigInc]
                        ) [DesigStmtActions]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      DesigStmtActions(
                        DesigVar(
                         dd
                        ) [DesigVar]
                        DesigDec(
                        ) [DesigDec]
                      ) [DesigStmtActions]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    DesigStmtActions(
                      ScopeDesigArray(
                       Unpacking
                       niz
                        PosTermExpr(
                          FactorTerm(
                            VarFactor(
                              DesigVar(
                               dd
                              ) [DesigVar]
                            ) [VarFactor]
                          ) [FactorTerm]
                        ) [PosTermExpr]
                      ) [ScopeDesigArray]
                      DesigInc(
                      ) [DesigInc]
                    ) [DesigStmtActions]
                  ) [DesignatorStmt]
                ) [Statements]
                ReadExpr(
                  DesigVar(
                   pokusaj
                  ) [DesigVar]
                ) [ReadExpr]
              ) [Statements]
              ReadExpr(
                ScopeDesigVar(
                 Unpacking
                 a
                ) [ScopeDesigVar]
              ) [ReadExpr]
            ) [Statements]
            PrintStmt(
              PosTermExpr(
                FactorTerm(
                  NumFactor(
                   3
                  ) [NumFactor]
                ) [FactorTerm]
              ) [PosTermExpr]
              PrintVar(
               2
              ) [PrintVar]
            ) [PrintStmt]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        MethodTypeName(
          MethRetType(
            Type(
             bool
            ) [Type]
          ) [MethRetType]
         testtest
        ) [MethodTypeName]
        NoFormParam(
        ) [NoFormParam]
        MethodVars(
          NoMethVar(
          ) [NoMethVar]
          Type(
           bool
          ) [Type]
          MultipleVarDecls(
            SingleVarDecl(
              VarNameDecl(
               c
              ) [VarNameDecl]
            ) [SingleVarDecl]
            VarNameDecl(
             d
            ) [VarNameDecl]
          ) [MultipleVarDecls]
        ) [MethodVars]
        Statements(
          NoStmt(
          ) [NoStmt]
          ReturnExpr(
            PosTermExpr(
              FactorTerm(
                VarFactor(
                  DesigVar(
                   c
                  ) [DesigVar]
                ) [VarFactor]
              ) [FactorTerm]
            ) [PosTermExpr]
          ) [ReturnExpr]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        MethRetType(
          Type(
           int
          ) [Type]
        ) [MethRetType]
       test
      ) [MethodTypeName]
      NoFormParam(
      ) [NoFormParam]
      NoMethVar(
      ) [NoMethVar]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  DesignatorStmt(
                    DesigStmtActions(
                      DesigVar(
                       dd
                      ) [DesigVar]
                      AssignExpr(
                        PosTermExpr(
                          MulTerm(
                            FactorTerm(
                              VarFactor(
                                ScopeDesigVar(
                                 Unpacking
                                 a
                                ) [ScopeDesigVar]
                              ) [VarFactor]
                            ) [FactorTerm]
                            Mul(
                            ) [Mul]
                            VarFactor(
                              DesigVar(
                               dd
                              ) [DesigVar]
                            ) [VarFactor]
                          ) [MulTerm]
                        ) [PosTermExpr]
                      ) [AssignExpr]
                    ) [DesigStmtActions]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  DesigStmtActions(
                    ScopeDesigVar(
                     Unpacking
                     a
                    ) [ScopeDesigVar]
                    AssignExpr(
                      AddExpr(
                        PosTermExpr(
                          FactorTerm(
                            VarFactor(
                              ScopeDesigVar(
                               Unpacking
                               a
                              ) [ScopeDesigVar]
                            ) [VarFactor]
                          ) [FactorTerm]
                        ) [PosTermExpr]
                        Add(
                        ) [Add]
                        MulTerm(
                          FactorTerm(
                            VarFactor(
                              ScopeDesigVar(
                               Unpacking
                               a
                              ) [ScopeDesigVar]
                            ) [VarFactor]
                          ) [FactorTerm]
                          Mul(
                          ) [Mul]
                          VarFactor(
                            DesigVar(
                             dd
                            ) [DesigVar]
                          ) [VarFactor]
                        ) [MulTerm]
                      ) [AddExpr]
                    ) [AssignExpr]
                  ) [DesigStmtActions]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                DesigStmtActions(
                  ScopeDesigVar(
                   Unpacking
                   a
                  ) [ScopeDesigVar]
                  AssignExpr(
                    NegTermeExpr(
                      FactorTerm(
                        VarFactor(
                          DesigVar(
                           dd
                          ) [DesigVar]
                        ) [VarFactor]
                      ) [FactorTerm]
                    ) [NegTermeExpr]
                  ) [AssignExpr]
                ) [DesigStmtActions]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              DesigStmtActions(
                DesigVar(
                 dd
                ) [DesigVar]
                AssignExpr(
                  PosTermExpr(
                    FactorTerm(
                      NumFactor(
                       3
                      ) [NumFactor]
                    ) [FactorTerm]
                  ) [PosTermExpr]
                ) [AssignExpr]
              ) [DesigStmtActions]
            ) [DesignatorStmt]
          ) [Statements]
          DesignatorStmt(
            DesigStmtActions(
              DesigVar(
               dd
              ) [DesigVar]
              AssignExpr(
                NegTermeExpr(
                  FactorTerm(
                    NumFactor(
                     9
                    ) [NumFactor]
                  ) [FactorTerm]
                ) [NegTermeExpr]
              ) [AssignExpr]
            ) [DesigStmtActions]
          ) [DesignatorStmt]
        ) [Statements]
        ReturnExpr(
          PosTermExpr(
            FactorTerm(
              NumFactor(
               3
              ) [NumFactor]
            ) [FactorTerm]
          ) [PosTermExpr]
        ) [ReturnExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  20:46:24,508 - Deklarisana promenljiva Unpacking::a na liniji 6
INFO  20:46:24,508 - Deklarisana promenljiva Unpacking::b na liniji 6
INFO  20:46:24,508 - Deklarisana promenljiva Unpacking::niz na liniji 7
INFO  20:46:24,508 - Deklarisana promenljiva Unpacking::arr na liniji 8
INFO  20:46:24,508 - Deklarisana promenljiva Unpacking::buarr na liniji 9
INFO  20:46:24,508 - Obradjuje se funkcija main na liniji 11
INFO  20:46:24,509 - Deklarisana promenljiva nizic na liniji 16
INFO  20:46:24,509 - Deklarisana konstanta ok na liniji 17
INFO  20:46:24,509 - Deklarisana promenljiva pokusaj na liniji 18
INFO  20:46:24,509 - Deklarisana promenljiva dd na liniji 19
INFO  20:46:24,509 - Deklarisana promenljiva slovo na liniji 20
INFO  20:46:24,509 - Obradjuje se funkcija funkcija na liniji 23
INFO  20:46:24,510 - Deklarisana promenljiva c na liniji 23
INFO  20:46:24,510 - Deklarisana promenljiva d na liniji 23
INFO  20:46:24,511 - Pretraga na 25(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 25
INFO  20:46:24,512 - Pretraga na 26(nizic), nadjeno Var nizic: Arr of int, 5, 0  na liniji 26
INFO  20:46:24,513 - Pretraga na 27(dd), nadjeno Var dd: int, 7, 0  na liniji 27
INFO  20:46:24,513 - Pretraga na 28(dd), nadjeno Var dd: int, 7, 0  na liniji 28
INFO  20:46:24,513 - Pretraga na 29(dd), nadjeno Var dd: int, 7, 0  na liniji 29
INFO  20:46:24,513 - Pretraga na 29(Unpacking::niz), nadjeno Var Unpacking::niz: Arr of int, 2, 0  na liniji 29
INFO  20:46:24,514 - Pretraga na 31(pokusaj), nadjeno Var pokusaj: bool, 6, 0  na liniji 31
INFO  20:46:24,514 - Pretraga na 32(Unpacking::a), nadjeno Var Unpacking::a: int, 0, 0  na liniji 32
INFO  20:46:24,514 - Obradjuje se funkcija testtest na liniji 38
INFO  20:46:24,514 - Deklarisana promenljiva c na liniji 38
INFO  20:46:24,514 - Deklarisana promenljiva d na liniji 38
INFO  20:46:24,514 - Pretraga na 39(c), nadjeno Var c: bool, 0, 1  na liniji 39
INFO  20:46:24,515 - Obradjuje se funkcija test na liniji 42
INFO  20:46:24,515 - Pretraga na 45(dd), nadjeno Var dd: int, 7, 0  na liniji 45
INFO  20:46:24,516 - Pretraga na 45(Unpacking::a), nadjeno Var Unpacking::a: int, 0, 0  na liniji 45
INFO  20:46:24,516 - Pretraga na 45(dd), nadjeno Var dd: int, 7, 0  na liniji 45
INFO  20:46:24,516 - Pretraga na 46(Unpacking::a), nadjeno Var Unpacking::a: int, 0, 0  na liniji 46
INFO  20:46:24,517 - Pretraga na 46(Unpacking::a), nadjeno Var Unpacking::a: int, 0, 0  na liniji 46
INFO  20:46:24,517 - Pretraga na 46(Unpacking::a), nadjeno Var Unpacking::a: int, 0, 0  na liniji 46
INFO  20:46:24,517 - Pretraga na 46(dd), nadjeno Var dd: int, 7, 0  na liniji 46
INFO  20:46:24,518 - Pretraga na 47(Unpacking::a), nadjeno Var Unpacking::a: int, 0, 0  na liniji 47
INFO  20:46:24,518 - Pretraga na 47(dd), nadjeno Var dd: int, 7, 0  na liniji 47
INFO  20:46:24,518 - Pretraga na 48(dd), nadjeno Var dd: int, 7, 0  na liniji 48
INFO  20:46:24,518 - Pretraga na 49(dd), nadjeno Var dd: int, 7, 0  na liniji 49
INFO  20:46:24,519 -  Print count calls = 0
INFO  20:46:24,519 -  Deklarisanih promenljivih ima = 0
INFO  20:46:24,520 - Uspesna semanticka analiza!!
